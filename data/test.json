[
    {
        "instance_id":"pytest-dev__pytest-7490",
        "underspecified":1,
        "underspecified_notes":"The issue states that in pytest 5.x, dynamically adding an `xfail` marker using `request.node.add_marker(mark)` treats a failing test as expected to fail (xfail). However, with pytest 6.0.0rc0, this behavior has changed, and the test now raises an assertion error instead of being marked as xfail.\n\nExamples are provided showing the behavior in pytest 5.4.3 and pytest 6.0.0rc0. While the expected behavior for a successful solution is not explicitly mentioned, it can be inferred that dynamically adding an `xfail` marker in pytest 6.x should mark the test as xfail if it fails, similar to the behavior in pytest 5.x, without raising an assertion error.",
        "false_negative":1,
        "false_negative_notes":"These test cases cover scenarios where a test marked as 'xfail' during runtime fails as expected. Additionally, if a test is marked as 'xfail' with the 'strict=True' setting.\n\nHowever, these tests do not cover some uncommon scenarios, such as the static marker and other parameters that can be passed to the xfail marker, like condition, run, raises, etc., which might be affected by these changes.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":17,
        "false_negative_decided_by":47,
        "other_major_issues_decided_by":43,
        "difficulty_decided_by":"[43, 47, 17]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240924_solver",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sympy__sympy-16886",
        "underspecified":0,
        "underspecified_notes":"The issue is clearly specified that the morse encoding for \"1\" is not correct. The key value pair should be `\".----\": \"1\"` instead of `\"----\": \"1\"`.  Very simple and straightforward. Its rated 0.",
        "false_negative":0,
        "false_negative_notes":"The tests check the correct morse encoding of 1 in the test section which will pass on all correct solutions hence rated 0 as well.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":30,
        "false_negative_decided_by":30,
        "other_major_issues_decided_by":30,
        "difficulty_decided_by":"[30, 29, 23]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":24,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.33,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-9367",
        "underspecified":0,
        "underspecified_notes":"After accessing the test file mentioned in the ticket description and with the example the ticket is mentioning that needs to be added, it is clear that the problem is with parsing a one element tuple. ",
        "false_negative":0,
        "false_negative_notes":"The test patch are using the same test case mentioned in the ticket description. Any possible solution should pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":7,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 43]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":21,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.42,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-9698",
        "underspecified":0,
        "underspecified_notes":"The issue description states that when using the `py:method` directive with the `:property:` option in Sphinx documentation, an index entry is created with parens aka parentheses, which is incorrect. The index entry for the property should not include parentheses. The author also provides a working example: \".. py:method:: Foo.bar   :property: .. py:property:: Foo.baz\" where it is expected that the property output should not have parentheses. Version number of sphinx is 4.x which means that all 4+ versions would be having this bug. Hence, the issue is clear and well-specified.",
        "false_negative":0,
        "false_negative_notes":"The provided test case checks if the Sphinx documentation tool correctly formats the index entry for a property when using the `py:method` directive with the `:property:` option. Specifically, it ensures that the index entry does not include parentheses. The test snippet here doesn't show it but meth5 is defined with the `:property5` directive before `.. py:method:: meth5\\n :property:`. The testcase verifies that the parentheses are not present. Hence, the tests perfectly cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":19,
        "false_negative_decided_by":19,
        "other_major_issues_decided_by":19,
        "difficulty_decided_by":"[19, 87, 61]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":18,
        "solved_by":[
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.5,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-9673",
        "underspecified":1,
        "underspecified_notes":"- Using the config option autodoc_typehints_description_target = \"documented\" combined with the Napoleon plugin causes the return types to be missing from the resulting documentation. We know how to reproduce it as well.\n- The expected behavior is to have the return type be present either as a rtype section or as part of the return description.\n- A preference is not specified but a sensible interpretation can be made after inspecting the codebase.",
        "false_negative":1,
        "false_negative_notes":"- The test changes ensure that the return type is present in the documentation. \n- Some unusual solutions may address the issue by providing the return type in a way which is not the standard with the codebase. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":35,
        "false_negative_decided_by":35,
        "other_major_issues_decided_by":35,
        "difficulty_decided_by":"[35, 11, 16]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20241028_solver",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-15104",
        "underspecified":1,
        "underspecified_notes":"- A `KeyError` occurs when the migration autodetector encounters a custom `ForeignKey` field with a hardcoded `to` argument, causing the field's `to` attribute to be removed from its deconstructed keyword arguments. This issue prevents the test suite from running in verbose mode and results in a traceback error. An example is provided to replicate the issue.\n- The author writes that the design is questionable, but not incorrect. That does not make the problem invalid though. The main problem is that the project is 10 years old does not specify the Django version in which the problem was encountered or if it persists in newer versions. It's possible that the bug is fixed in the newer versions. This is one of the detail that the programmer would need to fill in.",
        "false_negative":0,
        "false_negative_notes":"The test validates that the MigrationAutodetector correctly identifies and processes the changes involving the custom ForeignKey. It verifies that a new migration is created (CreateModel operation) for the Book model, ensuring that any solution works as intended.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":19,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":32,
        "difficulty_decided_by":"[32, 34, 19]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":30,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.17,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-13807",
        "underspecified":0,
        "underspecified_notes":"The issue is about using the `loaddata` command when a SQL keyword is used for a table name (model name) or a column name (field name on the model) like order, group, select, etc. This happens because the SQL statement generated from the `loaddata` command does not quote the table names and column names properly. The solution is to ensure these are quoted. The issue is clear and self-contained.",
        "false_negative":0,
        "false_negative_notes":"The tests perfectly cover all possible solutions. The tests create a table named `order`, with columns named 'where' and 'select', which are all SQL keywords. It then calls the `check_constraints` on the table because this was where the error occurred from the issue description.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":58,
        "false_negative_decided_by":58,
        "other_major_issues_decided_by":58,
        "difficulty_decided_by":"[58, 52]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20240620_sweagent_claude3.5sonnet",
            "20241016_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-14623",
        "underspecified":1,
        "underspecified_notes":"The issue description highlights a bug starting in Matplotlib version 3.1.0 that causes inverting an axis using the limits to not work for a logarithmic scale. The inversion works correctly for the linear scale but fails for the logarithmic scale. It is unclear whether the axis inversion problem on the logarithmic scale only occurs on the y-axis or affects the X-axis as well. Therefore, there are some blanks left to fill about the issue.  ",
        "false_negative":0,
        "false_negative_notes":"The tests are well-scoped for most correct solutions and address the primary issue of axis inversion for logarithmic scales. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":57,
        "false_negative_decided_by":57,
        "other_major_issues_decided_by":57,
        "difficulty_decided_by":"[57, 20, 18]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20240920_solver"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-24066",
        "underspecified":0,
        "underspecified_notes":"It is clear that SI._collect_factor_and_dimension() is not able to detect that the exponent is dimensionless but throws a ValueError instead.\nIssue description also has a sample code to reproduce the issue easily",
        "false_negative":0,
        "false_negative_notes":"The test case checks for the expression second \/ (ohm * farad) is dimensionless and that we are able to get correct factor and dimension if we add 1 to it.\nIt correctly checks for only the issue mentioned in issue description and will be able to cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":23,
        "false_negative_decided_by":23,
        "other_major_issues_decided_by":23,
        "difficulty_decided_by":"[23, 20]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":18,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.5,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-10880",
        "underspecified":1,
        "underspecified_notes":"The issue description provided points out a specific problem involving the generation of SQL queries by Django's ORM when using a combination of Count, Case, and distinct=True. The description identifies a syntax error due to a missing space in the SQL output, which is quite specific. However, it does not specify exactly where or how to fix this issue within Django's source code, nor does it provide a full traceback or error message detail that might help identify the precise location of the error.",
        "false_negative":0,
        "false_negative_notes":"The tests are designed to explicitly catch the type of error described in the issue by including a scenario that would have failed prior to the patch. It covers all scenarios. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":32,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":32,
        "difficulty_decided_by":"[32, 65, 57]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":16,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.56,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"mwaskom__seaborn-3069",
        "underspecified":1,
        "underspecified_notes":"The issue is about making nominal scales in Seaborn behave like other categorical scales by adjusting scale margins, hiding the grid, and inverting the y-axis when necessary.\n\nImplementing these changes is probably best in the `Plotter._finalize_figure` method but the user is not completely sure about that. They also have some additional questions like \"How do we defer to the theme if the user wants to force a grid? Should the grid be something that is set in the scale object itself\"\n\nThere is a sensible interpretation of what needs to be done though.",
        "false_negative":1,
        "false_negative_notes":"The tests `test_nominal_x_axis_tweaks` and `test_nominal_y_axis_tweaks` check the axis limits to ensure they match the expected (-0.5, 2.5) range when no limits are specified and the custom limits when provided. This directly tests the requirement for the nominal scale to draw margins similarly to categorical scales. The tests verify that grid lines are not visible for nominal scales by checking the visibility of grid lines on the x and y axes. This aligns with the requirement that grids should not be shown for nominal scales by default. The `test_nominal_y_axis_tweaks` test checks if the y-axis limits are correctly inverted (2.5, -0.5). This directly tests the requirement to invert the y-axis for nominal scales. However, the tests assume that the specific method of setting axis limits and grid visibility as implemented in the Gold Patch will be used. If an alternative method is used that achieves the same visual result but does not involve checking the exact limits or gridline visibility in the same way, it might not pass these tests even though the solution is correct.\n\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":35,
        "false_negative_decided_by":43,
        "other_major_issues_decided_by":35,
        "difficulty_decided_by":"[35, 43, 13]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20240924_solver"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"pytest-dev__pytest-6202",
        "underspecified":1,
        "underspecified_notes":"The issue is clearly specified, detailing the problem, providing examples, and pinpointing the source in the code.\nHowever, there are a lot of external links we do not have access to, leaving a lot of blanks.\nBut good enough, the description contains a specific recommendation that should resolve the issue, easing the engineer's work.\nAgain, it mentions \"But I can't find this line of code for what purpose,\" which adds some vagueness to the description.\nBut I would rank as 1, as we know the actual issue and an idea of how to resolve it.",
        "false_negative":0,
        "false_negative_notes":"The tests should pass if the changes suggested in the description are implemented just as in the Gold Patch.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":18,
        "false_negative_decided_by":18,
        "other_major_issues_decided_by":18,
        "difficulty_decided_by":"[19, 9]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":29,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.19,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-14053",
        "underspecified":1,
        "underspecified_notes":"The issue concerns the export_text function, which raises an IndexError when used with a decision tree trained on a single feature. \nThe provided code snippet clearly demonstrates the problem, allowing engineers to easily reproduce and address the issue.\nHowever, the description doesn't explicitly state how the code should behave instead of raising the IndexError. The engineer could easily figure this out though.",
        "false_negative":1,
        "false_negative_notes":"1. The test `test_export_text` perfectly checks if `export_text` function results in an expected output when a decision tree with only one feature is passed.\n2. Only key difference is that the code example uses an instance of `DecisionTreeClassifier` to initiate the decision tree while the test uses an instance of `DecisionTreeRegressor` class.\nHowever, the fix is not not specific to `DecisionTreeClassifier` instance. It is a general fix. Hence, any reasonable solution that makes this general fix will pass the test.\n3. However, there could be some unusual solution that fixes it only for `DecisionTreeClassifier` instance intentionally or accidentally. Such solution may not pass the test.\nHence, marked as 1.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":18,
        "false_negative_decided_by":71,
        "other_major_issues_decided_by":71,
        "difficulty_decided_by":"[71, 18]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":18,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20240924_solver",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.5,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sphinx-doc__sphinx-9229",
        "underspecified":1,
        "underspecified_notes":"The issue description comprehensively details the problem with type alias documentation in Sphinx, including steps to reproduce the error and the expected behavior. However, it lacks specifics on the exact mechanism or code segment causing the issue, leaving some investigative work for the developer. The description provides enough context to understand the problem—docstrings not appearing as expected—but does not guide a specific solution, necessitating some interpretation and potential exploration within the Sphinx codebase to identify and fix the root cause.",
        "false_negative":1,
        "false_negative_notes":"The given test patch may not capture all valid solutions due to its specific expectations about implementation details that could vary while still meeting the functional requirements of the issue. For instance, if a developer implements an alternative method for processing or formatting the documentation of type aliases—perhaps by enriching docstrings with additional metadata or employing a different function than `get_variable_comment()`—the test might fail despite these implementations potentially offering improvements or meeting the project's documentation needs. This reliance on a narrow set of expected outputs means the tests could overlook reasonable variations, thus justifying a rating of 1 where they cover the majority of correct solutions but might miss some unusual yet valid approaches.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":13,
        "false_negative_decided_by":13,
        "other_major_issues_decided_by":29,
        "difficulty_decided_by":"[29, 15]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"django__django-15987",
        "underspecified":1,
        "underspecified_notes":"The issue description clearly identifies a problem with the duplicate check in loaddata when FIXTURE_DIRS contains Path instances.\nAlthough the expected behavior is not explicitly stated, the engineer would have to infer that the loaddata command should correctly detect duplicates regardless of the directory specification format.\nHowever, the engineer would have to analyze and gather further details on the underlying cause, and a proposed solution is needed to fully address the issue. There is also no reproducible code provided.",
        "false_negative":1,
        "false_negative_notes":"Most engineers  would explore the codebase and might come up with the same solution as Gold Patch based on their analysis as it seems most logical. This is most logical as the description mentions \"the duplicate check in loaddata does not detect duplicates\". Therefore, engineers would likely try to explore the root cause to correct the duplicate check in loaddata.\nHowever, other unusual solutions might find other approaches to handle duplicates that won't lead to the ImproperlyConfigured error being raised in the Test Patch. e.g, a different error message could be raised.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":18,
        "false_negative_decided_by":18,
        "other_major_issues_decided_by":18,
        "difficulty_decided_by":"[14, 38]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":22,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20231010_rag_swellama7b",
            "20241028_solver",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.39,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"sympy__sympy-13091",
        "underspecified":0,
        "underspecified_notes":"The issue description is clear and well specified. It wants the comparison functions like __eq__ and __lt__ to behave symmetrically so that something like A.__eq__(B) does not contradict B.__eq__(A)\n",
        "false_negative":0,
        "false_negative_notes":"The test checks and confirms the symmetry in behavior and this suffices regardless of approach to the solution.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":78,
        "false_negative_decided_by":78,
        "other_major_issues_decided_by":78,
        "difficulty_decided_by":"[78, 54]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-19495",
        "underspecified":0,
        "underspecified_notes":"The problem is very clear. The ticket has provided a reproducible example of the issue. The issue is clear from the ticket description. And it is clear what needed to be done here.",
        "false_negative":0,
        "false_negative_notes":"The test patch are mimicking the same use case in the ticket description. Any solution that would fix the problem would pass the tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":7,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 44]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":6,
        "solved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.83,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"pytest-dev__pytest-10356",
        "underspecified":1,
        "underspecified_notes":"The issue is clear from the ticket description. It seems that markers are not correctly inherited in the example provided in the ticket. The user has provided a reproducible example and the environment info for the issue. However, the ticket is a bit misleading since it is suggesting that this might be intended and it is not a bug but clearly after some digging it is a bug that needs a fix which is easy to start after this ticket.",
        "false_negative":1,
        "false_negative_notes":"The provided test case test_mark_mro is designed to verify that markers from multiple base classes are properly combined and applied to a subclass, considering the MRO. However, it does not cover scenarios for classes with no markers or cases where markers are applied dynamically.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":7,
        "false_negative_decided_by":47,
        "other_major_issues_decided_by":47,
        "difficulty_decided_by":"[47, 29]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"sphinx-doc__sphinx-7440",
        "underspecified":1,
        "underspecified_notes":"The issue text could be more descriptive in explanation, especially the log provided. Nonetheless there are reasonable information as to what a good solution would be.",
        "false_negative":1,
        "false_negative_notes":"The test cases ensure that case sensitivity changes are correctly implemented and that TERM2 is recognised distinct from term2. But it could have consider testing for edge cases where terms only differ by case. Hence, rated it 1.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":56,
        "false_negative_decided_by":2,
        "other_major_issues_decided_by":56,
        "difficulty_decided_by":"[20, 2]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":11,
        "solved_by":[
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240824_gru",
            "20240924_solver",
            "20241028_solver",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.69,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-15814",
        "underspecified":0,
        "underspecified_notes":"The issue description is clear: calling select_related(...).only(...) leads to a ValueError: 'id' is not in list & Exists(...)' leads to a typeError. The solution would be to make this expression succeed rather than raise an error.",
        "false_negative":0,
        "false_negative_notes":"The test checks that calling select_related(...).only(...) works properly without errors. This is exactly what the issue description was about.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":63,
        "false_negative_decided_by":63,
        "other_major_issues_decided_by":63,
        "difficulty_decided_by":"[60, 32]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":13,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.64,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-20801",
        "underspecified":1,
        "underspecified_notes":"Even if the last sentence saying the issuer assumming `S(0.0) == S.false` to return True` is confusing, the prior sentences are clear about saying that comparing `S.false` to `S(0.0)` returns two different results, so it should be resolved according to the relation of `S.false` to 'S(0)', where it consistently returns False no matter what the order is. So, I will give this section a rating of 1, as it has a sensible interpretation of what is required for a successful solution. ",
        "false_negative":0,
        "false_negative_notes":"The provided test covers all the possible solutions by making sure that both the comparisons S(0.0) == S.false and S.false == S(0.0) return false, and the same is true for S(0) == S.false and S.false == S(0) as well.  \nSo, with that being the case I will rate this section a  0.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":10,
        "false_negative_decided_by":10,
        "other_major_issues_decided_by":10,
        "difficulty_decided_by":"[10, 12]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":8,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240924_solver",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.78,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-13279",
        "underspecified":0,
        "underspecified_notes":"There is an issue with session data decoding in Django 3.1 due to a format change. \n\nThe temporary fix suggested is using a legacy `encode()` method when `DEFAULT_HASHING_ALGORITHM` is set to 'sha1'.",
        "false_negative":1,
        "false_negative_notes":"The added test encodes session data with the 'sha1' algorithm and then uses a legacy decoding method to verify that the original data can be correctly retrieved. \n\nThis directly targets the issue. \n\nA very unusual solution would include modifying all the classes that inherit from SessionBase and handling this particular encoding there.\n\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":35,
        "false_negative_decided_by":35,
        "other_major_issues_decided_by":35,
        "difficulty_decided_by":"[35, 42]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":12,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240924_solver",
            "20240820_honeycomb",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.67,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-16139",
        "underspecified":0,
        "underspecified_notes":"The issue description explains an error that occurs when accessing the `UserAdmin` through another model's admin interface that has a reference to the `User` model with the `to_field` set. The error leads to the `UserAdmin` being accessed via an url similar to `...\/user\/22222222-3333-4444-5555-666677778888\/change\/?_to_field=uuid`. The issue description clearly states what the possible solution should be. It clearly outlines the solution in the issue description thus there is a clear sensible interpretation of what is required for a successful solution.",
        "false_negative":0,
        "false_negative_notes":"Given the detailed suggestion in the issue description, the given test patch should pass all reasonable solutions which implement the suggestion in the issue description.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":5,
        "false_negative_decided_by":5,
        "other_major_issues_decided_by":5,
        "difficulty_decided_by":"[5, 7, 3]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":28,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.22,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sympy__sympy-24661",
        "underspecified":0,
        "underspecified_notes":"The ticket is very clear. The issue is that the `evaluate=False` parameter to `parse_expr` is ignored for relationals. The reproducible example made it very clear.",
        "false_negative":0,
        "false_negative_notes":"The tests are testing all the relational possible equations with `evaluate=False` and checks if the behavior is as expected. Any solution to the problem in the ticket description should pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":7,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 10]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":10,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240920_solver",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.72,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-11477",
        "underspecified":1,
        "underspecified_notes":"The issue description notes a problem with 'translate_url()', which generates incorrect URLs when optional arguments are missing. However, the description lacks some background details such as example code, output errors, and the expected output. This leaves some blanks that the developer will need to fill through further research.",
        "false_negative":0,
        "false_negative_notes":"The test patch includes several tests to address the issue with URL pattern handling involving optional parameters. These tests cover various scenarios, such as verifying 'translate_url' with and without optional parameters, URL paths with regular expressions, and reverse URL tests. Despite the lack of context in the issue description, the tests comprehensively cover potential solutions for the problem.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":82,
        "false_negative_decided_by":82,
        "other_major_issues_decided_by":82,
        "difficulty_decided_by":"[82, 89]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-14531",
        "underspecified":0,
        "underspecified_notes":"`StrPrinter` settings are not consistently respected by certain subexpressions. The solution is to ensure that `StrPrinter` respects the `sympy_integers` setting consistently across all subexpressions by modifying the relevant parts of the SymPy codebase to correctly propagate the printer settings.",
        "false_negative":0,
        "false_negative_notes":"Added tests for `python` and `sstr` functions to ensure that the `StrPrinter` respects the `sympy_integers` setting consistently across all subexpressions. This is directly related to the issue, and any successful solution will pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":42,
        "false_negative_decided_by":42,
        "other_major_issues_decided_by":42,
        "difficulty_decided_by":"[43]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":10,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240402_sweagent_gpt4",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.72,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-18763",
        "underspecified":1,
        "underspecified_notes":" it provides essential information for understanding and addressing the described problem in the LaTeX output of the Subs class in SymPy, but there are minor gaps due to the visuals being hosted externally. Despite these visuals being potentially inaccessible, the detailed textual descriptions and code examples provided are sufficient for guiding a developer toward an effective solution. The specific mention of the desired parenthesization offers a clear directive on what needs to be changed. Thus, while there is a slight gap due to external dependencies for visual confirmation, the description allows for a sensible interpretation of the necessary modifications.",
        "false_negative":1,
        "false_negative_notes":"while tests are comprehensive for the examples provided, there might be more complex or unusual cases not covered by the current scope. The tests effectively check simple multiplication and a combination of multiplication with a binary operation involving a substitution, which are directly relevant to the patch changes. However, more intricate expressions, such as those involving nested functions, derivatives, or more complex mathematical operations, are not explicitly tested. This suggests that while the tests are likely to catch the majority of typical issues related to the patch, they may not capture edge cases or less common uses of the Subs function that could exhibit different behaviors with the new LaTeX formatting. Therefore, additional tests could be beneficial to ensure all potential scenarios are covered, mitigating the risk of missing unusual yet valid configurations.\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":37,
        "false_negative_decided_by":37,
        "other_major_issues_decided_by":65,
        "difficulty_decided_by":"[65, 54, 37]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":19,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.47,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"matplotlib__matplotlib-13989",
        "underspecified":1,
        "underspecified_notes":"The issue is very clear and the expected solution is clear\nThe issue: hist() doesn't respects range=... when density=True. e.g the output when range=(0,1) doesnt start with 0 and end with 1\nThe expected behaviour: It should start with 0 and end with 1. \nIt however doesn't give a justification to why the current behaviour is a bug",
        "false_negative":0,
        "false_negative_notes":"The test patch precisely tests that the problem described in the issue is resolved. All correct solutions will pass the test as it is doesn't introduce new variables or parameters.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":18,
        "false_negative_decided_by":72,
        "other_major_issues_decided_by":72,
        "difficulty_decided_by":"[72, 53]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":13,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20240824_gru",
            "20240924_solver",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.64,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-16938",
        "underspecified":0,
        "underspecified_notes":"The issue description is detailed, including the traceback and specific error encountered, which makes it clear that the problem arises from a conflict between `select_related` and deferred fields during serialization of a Django model with a many-to-many relationship that utilizes a custom manager. The error message \"Field cannot be both deferred and traversed using select_related at the same time\" directly points to the problem in the serialization process due to the customized fetching strategy.\n\n",
        "false_negative":0,
        "false_negative_notes":"The tests are designed to cover the core of the problem: the serialization of many-to-many relationships with a custom manager that uses `select_related`. They ensure that the `Topic` model, which uses a custom manager with `select_related`, is correctly serialized without errors, addressing the specific issue described. The tests verify that the serialization process handles the `Topic` model as expected by checking the number of database queries and ensuring no fields are incorrectly deferred. They validate the fix by ensuring that the `select_related` and `only` methods do not conflict during serialization.\n\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":43,
        "false_negative_decided_by":43,
        "other_major_issues_decided_by":43,
        "difficulty_decided_by":"[43, 14]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-14011",
        "underspecified":1,
        "underspecified_notes":"The issue description provides a clear explanation of the problem, including the error message and the circumstances under which it occurs. It also provides some context about the changes made to the codebase that may have introduced the issue. \nHowever, there are some details that are not explicitly stated, such as the exact code changes that need to be made to fix the issue.",
        "false_negative":1,
        "false_negative_notes":"The test case 'test_closes_connections' addresses the issue of closing database connections, presuming a race condition exists. However, it also incorporates a non-threading approach to handle the error. Should any feasible solution attempt to employ this method, it would not pass the test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":40,
        "false_negative_decided_by":52,
        "other_major_issues_decided_by":40,
        "difficulty_decided_by":"[40, 80]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"django__django-16315",
        "underspecified":0,
        "underspecified_notes":"The issue arises when using `QuerySet.bulk_create()` on mixed case columns with `update_conflicts=True`, `update_fields`, and `unique_fields` on a Django model that has `db_column` set for some fields. The SQL generated for the \"ON CONFLICT\" clause incorrectly uses the field names instead of the `db_column` names, leading to a syntax error as field names are all lower case. For example, if a field named `blacklistid` is defined with `db_column=\"BlacklistID\"`, the correct SQL should use `\"BlacklistID\"` instead of `\"blacklistid\"`. A successful solution would generate the correct query that will match the column names with case. Hence, the issue is clear and well-specified. ",
        "false_negative":0,
        "false_negative_notes":"The test patch adds a new model class `FieldsWithDbColumns` with columns rank and name. `db_column` in both the fields is a mixture of uppercase and lowercase (`rAnK` and `oTheRNaMe`), which were problematic. In the test function, we create two instances of `FieldsWithDbColumns` and assert that they are created properly. Two conflicting objects with the same ranks (1 and 2) but different names (\"c\" and \"d\") are created. `bulk_create` is called with `update_conflicts=True`, specifying that conflicts should be resolved based on the rank field, and only the name field should be updated. Then, it is asserted that the count remains 2, but the names have been updated to \"c\" and \"d\" from older names. Hence, this testcase closely follow the description in Section 1 and any reasonable solution would be covered by the tests here. Hence, rating it 0.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":19,
        "false_negative_decided_by":19,
        "other_major_issues_decided_by":19,
        "difficulty_decided_by":"[19, 5]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20240820_honeycomb",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-24970",
        "underspecified":1,
        "underspecified_notes":"The issue clearly describes a situation where deprecation warnings are generated by 'NumPy' version 1.24 when used with 'matplotlib' along with clear steps to reproduce the case. Although it is clear from issue description that the expected outcome should be no error but it does not specify if the solution should be made within the matplotlib's own code in way to handle the numbers or it should just advise users to update their own code to fit the new rules from NumPy, but developer can make sensible interpretation regarding the right solution.",
        "false_negative":1,
        "false_negative_notes":"The test test_index_dtype checks that the colormap indexing works correctly for different data types, including np.uint8, int, np.float16, and float. \nThis test is relevant to the issue at hand, as it verifies that the fix for the deprecation warning does not introduce any new issues with indexing.\nHowever, the test may not catch all possible solutions that achieve the same result. For example, a solution that uses a different method to avoid the deprecation warning might not be caught by this test.\nAdditionally, the test only checks for the specific case where the index is 0, and does not test other possible indices. This might not be sufficient to ensure that the fix works correctly for all possible inputs.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":13,
        "false_negative_decided_by":40,
        "other_major_issues_decided_by":13,
        "difficulty_decided_by":"[20, 40]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":14,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.61,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-16527",
        "underspecified":1,
        "underspecified_notes":"While the issue description clearly identifies the file, line, and the specific change required (adding `has_add_permission` check to `show_save_as_new` tag's conditional logic), it doesn't provide explicit details on potential edge cases or expected behaviour if the permission check fails. \nThese additional details could further enhance the clarity and completeness of the issue description for a comprehensive solution, therefore this is rated as 1.",
        "false_negative":0,
        "false_negative_notes":"The `test_submit_row_save_as_new_add_permission_required` test verifies that the show_save_as_new attribute in the Django admin behaves correctly based on user permissions: users without the \"add\" permission (change_user) see `show_save_as_new` as False, while users with the \"add\" permission (add_user) see it as True. It ensures the permission checks are properly integrated with the show_save_as_new feature in the admin interface.\nThis helps verify this issue reported.\nThe test further does not rely on any particular implementation, but is doing a behaviour check, that should work in all reasonable solutions. A rating of 0 is therefore appropriate here.",
        "other_major_issues":0,
        "other_notes":"No issues missed.",
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":27,
        "false_negative_decided_by":27,
        "other_major_issues_decided_by":27,
        "difficulty_decided_by":"[10, 24]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":31,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.14,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-13933",
        "underspecified":1,
        "underspecified_notes":"The issue description states that `ModelChoiceField` in Django doesn't display the value of an invalid choice when raising a `ValidationError`, unlike `ChoiceField`. To fix this, it is asked to modify `ModelChoiceField` to pass the invalid value as a parameter and update the `invalid_choice` error message however the updated `invalid_choice` error message is not provided in the description. Since a sensible interpretation is there that can lead to a successful solution, choice 1 is preferred here.",
        "false_negative":1,
        "false_negative_notes":"Gold patch gives the value field inside the parameters to the `ValidationError` which resolves the issue and test patch also work around that. One potential issue on which test can fail is that if some solution use key other than `value`, in that case this test would fail because it uses the key value. but it is very unlikely to be true because the key value is being used in the problem statement so choice 1 is preferred here.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":30,
        "false_negative_decided_by":30,
        "other_major_issues_decided_by":44,
        "difficulty_decided_by":"[44, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":22,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.39,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-15503",
        "underspecified":0,
        "underspecified_notes":"The issue description states that when performing lookups with numerical keys on SQLite databases the operation fails. The lookups fail to find numerical keys in JSON objects however they work correctly with string keys. Nonetheless, this issue is database specific as it is not encountered in PostgresSQL. The issue description is clear and there is a sensible interpretation  of what a reasonable solution should be. Key numerical fields should be handled correctly regardless of the database.",
        "false_negative":0,
        "false_negative_notes":"The test patch checks to determine if the `JSONFields` lookups `has_key`, `has_keys`, and `has_any_keys` can handle numerical keys correctly. Reasonable solutions would pass the test patch as this is the main focus of the issue description.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":5,
        "false_negative_decided_by":5,
        "other_major_issues_decided_by":5,
        "difficulty_decided_by":"[64, 28]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_0"
    },
    {
        "instance_id":"django__django-11749",
        "underspecified":1,
        "underspecified_notes":"The issue describes a problem with the call_command function in Django, where it fails when an argument of a required mutually exclusive group is passed as a keyword argument (kwargs) but it does not specify what changes should be made to the call_command function to handle mutually exclusive groups, leaving room for interpretation.",
        "false_negative":0,
        "false_negative_notes":"The tests here cover the issue raised and checks if the highlighted case is fixed. New correct solutions should be able to pass them, so the chosen label is 0.\nFor further exemplification, the test patch creates the mutually exclusive required group on lines 6-9 of tests\/user_commands\/management\/commands\/mutually_exclusive_required.py, then checks if .call_command() works as expected.",
        "other_major_issues":0,
        "other_notes":"No other issues with the task",
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":32,
        "false_negative_decided_by":53,
        "other_major_issues_decided_by":53,
        "difficulty_decided_by":"[53, 66]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":10,
        "solved_by":[
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240924_solver",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.72,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-10999",
        "underspecified":0,
        "underspecified_notes":"The issue in issue description clearly states to fix parse_duration() for some negative duration, the regex doesn't match to negative durations, because of the <hours> definition final (lookahead) part does not have '-?' in it. Also, it's clear what a successful solution would look like. ",
        "false_negative":1,
        "false_negative_notes":"The tests cases provided cover a range of scenarios for negative duration, like negative days, hours, minutes, seconds, microseconds, however, some cases like negative days and negative hours, etc are missed.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":2,
        "false_negative_decided_by":2,
        "other_major_issues_decided_by":2,
        "difficulty_decided_by":"[2, 12]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-15037",
        "underspecified":1,
        "underspecified_notes":"The issue clearly indicates that the generated model has an incorrect foreign key relationship. The provided model schema allows for a sensible interpretation of the problem. However, the description lacks details about the potential fix required, leading the developer to make some assumptions about how to proceed. Therefore, option 1 is the preferred choice.",
        "false_negative":1,
        "false_negative_notes":"The given test case covers the majority of correct solutions, but it seems to miss some unusual scenarios, such as a model having multiple foreign keys. Therefore, the correct option to choose is option 1.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":89,
        "false_negative_decided_by":89,
        "other_major_issues_decided_by":58,
        "difficulty_decided_by":"[89, 17]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241022_tools_claude-3-5-haiku"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sympy__sympy-14711",
        "underspecified":0,
        "underspecified_notes":"The issue arises because multiplying a SymPy vector by zero results in an integer zero, not a zero vector, causing a `TypeError` when attempting to sum the list `[N.x, 0 * N.x]`. SymPy's `Vector` addition requires both operands to be vectors, but the integer zero does not meet this requirement. \n\nThe issue is well-specified and it is clear what is required for a successful solution.",
        "false_negative":0,
        "false_negative_notes":"The pull request addresses an issue in SymPy's `Vector` class where adding zero to a vector raised a `TypeError`. The `__add__` method was modified to check if the other operand is zero and, if so, return the original vector without performing the addition operation. This change prevents the error and treats the addition of zero as a no-op. Additionally, a new test case was added to ensure this behavior, verifying that adding zero to a vector returns the vector itself, thus enhancing the robustness and correctness of vector operations in SymPy.\n\nThe tests perfectly cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":20,
        "false_negative_decided_by":20,
        "other_major_issues_decided_by":20,
        "difficulty_decided_by":"[20, 38, 54]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":20,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.44,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-11211",
        "underspecified":1,
        "underspecified_notes":"The issue description is mostly clear in terms of reproducing the problem: it involves using GenericForeignKey with a UUIDField as the primary key and encountering issues with prefetch_related. However, it lacks details on the expected behavior and does not provide insights into the potential cause of the issue within the Django codebase. The description outlines the models involved (Foo and Bar) and the specific query causing the issue (Bar.objects.all().prefetch_related('foo')), but it does not specify what \"return None for attribute foo\" exactly entails or where in the Django ORM engine the problem might reside. This leaves some interpretation about the precise nature of the bug and the scope of the required fix.",
        "false_negative":1,
        "false_negative_notes":"Some unusual solutions might have failed due to the following reasons:\n\n* The Gold Patch introduces the “get_prep_value” method to ensure the value passed to the UUID field is properly prepared and converted to a Python object. If an unusual solution did not implement or override this method, it would not correctly handle the conversion of the UUID values, leading to potential issues when interacting with the database.\n\n* The “get_prep_value” method calls “super().get_prep_value(value)” and then applies “self.to_python(value)” to ensure the value is correctly formatted for the database. An unusual solution might have an alternative way of preparing the value that does not align with this expected behavior.\n\n* The tests likely assume that the “get_prep_value” method works as defined in the Gold Patch. If the unusual solution implemented the “get_prep_value” method differently, perhaps by omitting the call to “to_python()”, it could lead to discrepancies in how UUID values are processed.\n\nThus, while the tests successfully validate the core functionality in this particular scenario, they may not adequately cover alternative approaches.\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":80,
        "false_negative_decided_by":81,
        "other_major_issues_decided_by":81,
        "difficulty_decided_by":"[81, 53]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":11,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.69,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-13786",
        "underspecified":1,
        "underspecified_notes":"- The issue states that when an `AlterModelOptions` is squashed into the corresponding `CreateModel`, `squashmigrations` does not unset the model options. The author further states that options that are not found in `operation.options` but are present in `AlterModelOptions.state_forwards()` need to be removed (the logic is missing). Hence, it is clear what is required for a successful solution.\n- But some blanks need to be filled: it is unclear whether the issue exists on the master branch as the author has only tested on an older version 2.2. Hence, rating this 1.",
        "false_negative":0,
        "false_negative_notes":"The tests check that when an AlterModelOptions operation is squashed into a CreateModel operation, the options not present in the AlterModelOptions are also not present in the final CreateModel operation. This is exactly what the issue is about.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":19,
        "false_negative_decided_by":63,
        "other_major_issues_decided_by":63,
        "difficulty_decided_by":"[19]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":26,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.28,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-15278",
        "underspecified":1,
        "underspecified_notes":"While the problem is outlined with the specific error and context, the solution is not straightforward from the description. The issue identifies a specific problem, adding a nullable OneToOneField results in an error on SQLite but lacks details for a direct resolution which requires some interpretation.",
        "false_negative":1,
        "false_negative_notes":"While the test checks for a straightforward nullable OneToOneField, it might not cover scenarios where the OneToOneField interacts with other fields that have complex constraints or default values, especially if these interact in a way that affects the ALTER TABLE command beyond simple nullability although being unusual.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":32,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":32,
        "difficulty_decided_by":"[32, 37, 23]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":14,
        "solved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.61,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"matplotlib__matplotlib-23314",
        "underspecified":0,
        "underspecified_notes":"The issue is clear: the subplot remains visible when `set_visible` is set to `False`, which should not happen. A sample code is also shared to demonstrate the issue.",
        "false_negative":1,
        "false_negative_notes":"The tests are individually checking if setting the 2D and 3D axes to invisible works correctly, which is a step in the right direction. But with merely these tests, it might not fulfill the initial request of making sure that the subplot is not visible when'set_visible(false)'is  called. These tests rely on the 'fig_test' and 'fig_ref' figures that can be modified when called. Hence this test patch cannot be declared to test the fix correctly every time.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":54,
        "false_negative_decided_by":38,
        "other_major_issues_decided_by":54,
        "difficulty_decided_by":"[20, 38]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":16,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.56,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-11451",
        "underspecified":0,
        "underspecified_notes":"The description mentions that `username` and `password` can be `None` before making a query, which should not happen. It explains the time disadvantage due to this happening. It also suggests a solution to check if any of the username or password is None and return if they are. The issue is well-defined, and I should be rated as 0. ",
        "false_negative":0,
        "false_negative_notes":"The test `test_authentication_without_credentials` verifies that the `CountingMD5PasswordHasher` is not called in case username or password or both of them are `None`, verifying that the db query doesn't happen. This covers all the possible solutions which prevent the query being run. Should be rated as 0. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":73,
        "false_negative_decided_by":73,
        "other_major_issues_decided_by":73,
        "difficulty_decided_by":"[73, 32, 5]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":21,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20240820_honeycomb",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.42,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-13417",
        "underspecified":0,
        "underspecified_notes":"The issue is that `QuerySet.ordered` incorrectly returns `True` for `GROUP BY` queries using `annotate`  on models with `Meta.ordering`, even though such queries are not actually ordered.\n\n`QuerySet.ordered` should reflect whether the queryset is ordered or not. The issue is clear.",
        "false_negative":0,
        "false_negative_notes":"The tests ensure that `QuerySet.ordered` is `False` for `GROUP BY` queries using `annotate` and `values`. They also confirm that adding an explicit `order_by` correctly sets `QuerySet.ordered` to `True`.\n\nThey directly target the issue.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":35,
        "false_negative_decided_by":35,
        "other_major_issues_decided_by":35,
        "difficulty_decided_by":"[7, 42]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":19,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.47,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    }
]