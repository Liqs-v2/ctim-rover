[
    {
        "instance_id":"scikit-learn__scikit-learn-11578",
        "underspecified":0,
        "underspecified_notes":"The issue description is complete. It has examples to reproduce the issue and good information of what a solution would be. ",
        "false_negative":1,
        "false_negative_notes":"The test will fail for some unusual solutions. The `test_logistic_cv_multinomial_score`  unit test when asserting `_log_reg_scoring_path` and `scorer`  removes `['C', 'n_jobs', 'warm_start’]` params from from the `LogisticRegression` class params before passing `params` to `_log_reg_scoring_path`. If a new param is added to `LogisticRegression` by another solution they would be transmitted to `_log_reg_scoring_path` and could break the test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":56,
        "false_negative_decided_by":56,
        "other_major_issues_decided_by":56,
        "difficulty_decided_by":"[56, 29]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":27,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.25,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"matplotlib__matplotlib-24149",
        "underspecified":1,
        "underspecified_notes":"There are some blanks to fill in about the issue, but there is a sensible interpretation of what is required for a successful solution. The issue description is formatted with issue, code sample, error message and cause of error message.\n\nIssue: The issue is related to the Matplotlib version 3.6.1, where the 'ax.bar()' function raises an exception when provided with data that contains only NaN values. The function fails specifically when the x-axis data contains NaN values.\nCode sample: Provided the relevant code sample which having a 'NaN' at x-axis.\nError Message: 'StopIteration' exception is thrown, which indicates that the function was unable to handle the NaN values properly.\nCause of error message: Mentioned the relevant code samples i.e., working and not-working when x-axis has 'NaN' values.\n\nBlanks:\nThe provided expected behavior is related to version 3.6.0. But, it is not related to 3.6.1. It would be better, if they provide expected behavior related to 3.6.1.",
        "false_negative":0,
        "false_negative_notes":"By assuming, the expected behavior in 3.6.1 will be same as Version 3.6.0. So, the tests are perfectly handling even if there are 'NaN' at x-axis.\n\nTests: \nax_test.bar([np.nan], [np.nan]): This is used to verify that the code can handle NaN values in the x-axis and y-axis without causing errors.\nax_ref.bar([1], [1]): This test verifies if the plotting continues even after attempting to plot NaN values.\nBy comparing the test figure with the reference figure, the test verifies that the plotting behavior is consistent and that handling NaN values does not disrupt the functionality of 'ax.bar()'.\n\nSo, these tests are perfectly focusing on verifying the correct handling of x-axis when it has NaN values.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":87,
        "false_negative_decided_by":87,
        "other_major_issues_decided_by":87,
        "difficulty_decided_by":"[87, 67, 62]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":16,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240924_solver",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.56,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-13779",
        "underspecified":1,
        "underspecified_notes":"The issue description clearly explains the problem: the VotingClassifier fails during the fit method if one of the estimators is None and sample_weight is provided. It provides a code snippet to reproduce the error, making it clear what needs to be fixed. However, it does not specify the expected behavior when an estimator is None. This leaves some interpretation about whether to ignore None estimators, raise an error, or handle them differently.",
        "false_negative":1,
        "false_negative_notes":"The tests are designed to ensure that the VotingClassifier and VotingRegressor handle None estimators correctly when sample_weight is provided. However, there might be some unusual solutions, such as raising a specific error for None estimators or handling weights differently, that these tests might miss. The tests assume that the correct behavior is to skip None estimators, which covers most reasonable solutions but may not account for all edge cases.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":29,
        "false_negative_decided_by":29,
        "other_major_issues_decided_by":29,
        "difficulty_decided_by":"[30, 54]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":21,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_rag_gpt4",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.42,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"sphinx-doc__sphinx-9602",
        "underspecified":1,
        "underspecified_notes":"- The description mentions that when a value is present in a type annotation as `Literal`, Sphinx treats the value as a `py:class`. With nitpick enabled, values like `Literal[True]` end up failing because `True` is not a class. This is a problem for builds that use `-n -W` to catch doc errors.\n- The description provides instructions for reproducing the issue.\n- The description also highlights that the expectation is for `Literal[True]` (or any other literal value) to be present in the type annotation without triggering the nitpick warning. Then the expectation does not clear that which value should be supported.",
        "false_negative":1,
        "false_negative_notes":"- The Test Patch introduces a new test case to verify that `Literal` with values such as `True`, `False`, `0`, `1`, and `'abc'` works as expected.\n- The test case is good, but since the description does not clearly specify which values should be supported besides `True`, these test cases could fail if the user chooses a different solution (e.g., not supporting `0` or `1`).",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":39,
        "false_negative_decided_by":39,
        "other_major_issues_decided_by":39,
        "difficulty_decided_by":"[39, 64, 59]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-11265",
        "underspecified":1,
        "underspecified_notes":"The issue description points out a problem that occurs when using the `exclude` method in conjunction with a `FilteredRelation` query. When calling `exclude`, Django throws a `FieldError` because it cannot resolve the annotation name created by `FilteredRelation`. It suggests that `split_exclude` creates a new query without retaining all the annotations and temporary fields from the original query. The issue description defines the problem well however it fails to outline a possible way to implement a solution to it.",
        "false_negative":0,
        "false_negative_notes":"The test patch ensures that the `exclude` method can be used in conjunction with the `FilteredRelation`.  Reasonable solutions should pass the test patch.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":5,
        "false_negative_decided_by":5,
        "other_major_issues_decided_by":5,
        "difficulty_decided_by":"[5, 52, 81]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240824_gru",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-23412",
        "underspecified":1,
        "underspecified_notes":"- The issue description has mentioned when setting the `linestyle` on a patch object using a dash tuple, the offset has no effect.\n- It has provided the code to reproduce the issue and show the actual outcome.\n- It has also provided the code example of Line2D objects which works correctly to show what should be the expected outcome.\n- The issue seems pretty clear as to what needs to be fixed, but there needs to be some analysis of the existing code about ignoring the dash tuple offset which can be blank to fill in by the developer.",
        "false_negative":0,
        "false_negative_notes":"- The test code ensures that the `linestyle` is applied correctly in the `Rectangle` object.\n- It verifies that the dash offset is handled correctly for patch objects when specified in the `linestyle`.\n- There are no additional test cases unrelated to the issue, so it should cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":66,
        "false_negative_decided_by":66,
        "other_major_issues_decided_by":66,
        "difficulty_decided_by":"[66, 53]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":20,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.44,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-18211",
        "underspecified":1,
        "underspecified_notes":"- The issue highlights that `solveset` raises `NotImplementedError` instead of returning `ConditionSet`.\n- The expected behavior is that a `ConditionSet` should be returned by `solveset`.\n- The description is not clear about the final result.\nTherefore, the preferable choice is 1.",
        "false_negative":1,
        "false_negative_notes":"- The test ensures that the equations are correctly transformed into sets representing the solutions within the real numbers.\n- Any solution that change `NotImplemented` error into something else rather than `ConditionSet` could not pass the test.\nTherefore, the preferable choice is 1.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":1,
        "false_negative_decided_by":1,
        "other_major_issues_decided_by":1,
        "difficulty_decided_by":"[1, 8]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":3,
        "solved_by":[
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.92,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sympy__sympy-15345",
        "underspecified":0,
        "underspecified_notes":"The `mathematica_code` function gives the wrong output when using the `Max` function. The expected output is `'Max[x, 2]'`, which is valid Mathematica syntax. However, the actual output is `'Max(2, x)'`, which is not valid in Mathematica. This indicates a bug in the `mathematica_code` function that incorrectly formats the `Max` function's arguments. The issue is well specified with expectations also clear hence its rated 0. ",
        "false_negative":0,
        "false_negative_notes":"Max function is tested which had the issue before so this test should work perfectly fine on all correct solutions. If this fails, the solution itself won't be correct so this is rated 0. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":30,
        "false_negative_decided_by":30,
        "other_major_issues_decided_by":30,
        "difficulty_decided_by":"[30, 60]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-7889",
        "underspecified":1,
        "underspecified_notes":"The issue text describes the problem, and what a possible solution would look like. The issue failed to include the error log as described this is a missing that could provide more insight on how to fix the issue. Overall, an engineer could understand what needs to be done.",
        "false_negative":0,
        "false_negative_notes":"The golden patch allows any data type, this ensures a `TypeError` is not raised on mocking generic-typed classes. The tests align with the issue raised by ensuring `TypeVar` does not raise a TypeError and the documentations are generated correctly. This means the solution will pass for solutions return the expected behaviour.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":56,
        "false_negative_decided_by":11,
        "other_major_issues_decided_by":11,
        "difficulty_decided_by":"[11, 20]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":15,
        "solved_by":[
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.58,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-13089",
        "underspecified":0,
        "underspecified_notes":"The issue clearly describes that the Django database cache backend sporadically fails with a `'NoneType' object is not subscriptable` error in the `_cull` method because `cursor.fetchone()` returns `None` when no data is retrieved. The error occurs when the code tries to access the first element of `None`, and the suggested solution is to add a check to ensure that `cursor.fetchone()` contains data before attempting to subscript it.",
        "false_negative":0,
        "false_negative_notes":"The test indirectly relates to the issue by ensuring that the `_cull` method is triggered and functions correctly when the cache is forced to delete entries, even if the cache might be empty initially.\nIt does not explicitly address the `NoneType object is not subscriptable` error, but running this test could help identify cases where `_cull` is called when there are no entries to delete, potentially triggering the error if not handled properly.\nSo I cannot think of any other solution that might fail the test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":44,
        "false_negative_decided_by":44,
        "other_major_issues_decided_by":44,
        "difficulty_decided_by":"[44, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":28,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20231010_rag_claude2",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.22,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-10673",
        "underspecified":0,
        "underspecified_notes":"the issue is about making sure that when users add standard Sphinx references (genindex, modindex, search) to their documentation's table of contents, the build process should recognize these references correctly and not produce warnings about nonexisting documents. The requested feature is to ensure these references are valid and do not generate errors when used in the toctree directive.\n\nThe issue is well-specified and it is clear what is required for a successful solution.",
        "false_negative":0,
        "false_negative_notes":"The preprocessing script ensures that index.rst is modified to include the required references before the Sphinx build process, so the tests should pass as they verify the final structure of the toctree.\n\nalternative approaches should pass the existing tests, as they achieve the same end goal.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":20,
        "false_negative_decided_by":20,
        "other_major_issues_decided_by":20,
        "difficulty_decided_by":"[20, 7, 39]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":9,
        "solved_by":[
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240824_gru",
            "20240924_solver",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.75,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-12096",
        "underspecified":1,
        "underspecified_notes":"The provided issue is clear and well specified, and the example is clear, but it could be better if a possible solution is suggested.\nSo, I will give this section a rating of 1, as it has a sensible interpretation of what is required for the solution.",
        "false_negative":0,
        "false_negative_notes":"As the problem stated is about the `evalf` method not calling the `_imp_` recursively, and the test directly checks if the `evalf` method works with the nested function, making the test cover all the possible solutions.\nGiven that, I will give this section a rating of 0.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":10,
        "false_negative_decided_by":10,
        "other_major_issues_decided_by":10,
        "difficulty_decided_by":"[10, 66, 30]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":24,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.33,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-16255",
        "underspecified":0,
        "underspecified_notes":"The issue description provides a detailed traceback of the error and identifies the exact exception (`ValueError: max() arg is an empty sequence`) that occurs when the sitemap is empty but the `lastmod` method is callable. This traceback shows the sequence of method calls leading up to the error, making it clear where and why the failure occurs.\n",
        "false_negative":0,
        "false_negative_notes":"The tests are designed to verify that the issue of a `ValueError` being raised when there are no items in the sitemap and `lastmod` is callable is resolved. The added test `test_callable_sitemod_no_items` specifically checks the scenario where there are no items in the sitemap. The test verifies that the response does not include a \"Last-Modified\" header, which aligns with the expected behavior when there are no items. The test ensures that the sitemap index XML is correctly generated without items, which directly addresses the issue described. By comparing the actual response to the expected XML content, the test ensures that the correct structure is returned even when there are no items.\n\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":43,
        "false_negative_decided_by":43,
        "other_major_issues_decided_by":43,
        "difficulty_decided_by":"[43, 14, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":31,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus"
        ],
        "empiric_difficulty":0.14,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-24637",
        "underspecified":1,
        "underspecified_notes":"- Issue describes the problem that when saving a figure to an SVG format in Matplotlib, the svg file is not retaining the gid label which is an `AnnotationBbox` object. \n- Issue provides an external link and states that a similar problem is solved and a solution is provided there.\n- Issue provides code and the output produced from the code.\nBased on the observations few more details about the problem should be added like description on the similar problem solved and the solution worked. Also there is a sensible interpretation of the solution but more details on desired solution should be provided.",
        "false_negative":0,
        "false_negative_notes":"The test code are perfectly scoped to cover all possible solutions because they focus solely on verifying the presence and correctness of the `gid` attribute in the SVG output for an `AnnotationBbox`. They do not rely on specific implementation details, ensuring any valid solution that correctly handles `gid` attributes will pass. This comprehensive and outcome-focused approach ensures that all reasonable solutions are effectively tested. So, it should be rated as 0.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":51,
        "false_negative_decided_by":62,
        "other_major_issues_decided_by":62,
        "difficulty_decided_by":"[62, 51, 53]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":10,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-haiku",
            "20240820_honeycomb",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.72,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-14792",
        "underspecified":0,
        "underspecified_notes":"The issue description highlights a discrepancy in the timezone in Django version 3.1 as opposed to Django version 3.2. It highlights the fact that due to a change in the return value of the method `_prepare_tzname_delta()` of the Postgres DatabaseOperations class. Moreover the issue description states that this same behaviour can be witnessed when calling the method `zoneinfo.ZoneInfo()`. It clearly outlines the inaccuracy of the returned value of the methods in both Django versions. There is a clear indication of what is expected in order to obtain a reasonable solution.",
        "false_negative":0,
        "false_negative_notes":"The test patch performs checks to determine that the correct timezone is obtained when calling the `zoneinfo.ZoneInfo()` and `_prepare_tzname_delta()` methods. Reasonable solutions would pass the test patch.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":5,
        "false_negative_decided_by":5,
        "other_major_issues_decided_by":5,
        "difficulty_decided_by":"[37, 59]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-26342",
        "underspecified":1,
        "underspecified_notes":"The title of the issue is \"[ENH]: ContourSet.set_paths\" which is not very descriptive it should be like \"[ENH] Add ContourSet.set_paths for improved contour labeling in Cartopy\". The issue description needs to be more detailed on why it \"doesn’t smell very good\" would add clarity. The proposed solution is clear but explaining the benefits of this change and how it would improve the situation would be helpful.",
        "false_negative":1,
        "false_negative_notes":"While the test focuses on replacing paths between similar contours, it may not detect solutions that tackle the problem differently. For instance:\n1) Instead of fixing the set_paths method, the unusual solution might introduce a new function to achieve the desired outcome.\n2) The unusual solution could rely on external libraries or functions not covered by the test.\n3) The unusual solution might implement custom error handling for invalid paths, which the current test might not address, leaving the code's behavior with unexpected input unchecked.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":74,
        "false_negative_decided_by":74,
        "other_major_issues_decided_by":74,
        "difficulty_decided_by":"[74, 16]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":16,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20241028_solver",
            "20241016_composio_swekit",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.56,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-16569",
        "underspecified":0,
        "underspecified_notes":"- The issue text clearly specifies that when a FormSet has the attributes self.can_delete == True and self.can_delete_extra == False, calling the add_fields() method on that FormSet fails if the argument index is None.\n- This apparently happens because index is being compared to initial_form_count and raises the exception TypeError: '<' not supported between instances of 'NoneType' and 'int'.\n- The exact part where the problem has been clearly highlighted and steps have been provided to reproduce the problem\n- A potential fix to the problem has also been suggested",
        "false_negative":1,
        "false_negative_notes":"The issue and test primarily focus on the DELETE field, which is a BooleanField. An unusual solution or configuration might involve custom or additional fields that are affected by similar index handling but aren't explicitly tested. For instance, if there were other conditions in the formset that depend on the index, those might not be covered.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":34,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":34,
        "difficulty_decided_by":"[34, 12]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":32,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20240824_gru",
            "20231010_rag_swellama7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.11,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"sympy__sympy-13974",
        "underspecified":0,
        "underspecified_notes":"- The issue is well-specified and clearly hightlights that the powers of  tensor product expressions are not possible to evaluate with either `expand(tensorproduct=True)` or `tensor_product_simp`\n- There are enough examples which make it clear what the desired behaviour should be and should be good enough for a developer to get started without any additional information",
        "false_negative":0,
        "false_negative_notes":"- The tests check the end to end functionality related to the issue mentioned earlier and don't rely on any new methods like `tensor_product_simp_Pow(e)` which were introduced in the gold patch\n- This should be good enough to cover all the possible solutions of the problem",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":34,
        "false_negative_decided_by":34,
        "other_major_issues_decided_by":34,
        "difficulty_decided_by":"[34, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20240617_factory_code_droid"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"pytest-dev__pytest-7432",
        "underspecified":0,
        "underspecified_notes":"- The issue text specifies that using --runxfail with `pytest.mark.skip` breaks location reporting in the scenarios where it should have no effect at all.\n- The steps for reproduction have been provided and the expected behaviour has been clearly communicated i.e. --runxfail should have no effect in the specified scenario.",
        "false_negative":0,
        "false_negative_notes":"- The appended test ensures that the response is not affected by adding --runxfail to `pytest --rs`for the given test sample.\n- This should be good enough to cover all the potential solutions of the specified problem.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":34,
        "false_negative_decided_by":34,
        "other_major_issues_decided_by":34,
        "difficulty_decided_by":"[34, 13, 59]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":14,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.61,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-12708",
        "underspecified":1,
        "underspecified_notes":"The issue description indicates that the migration crashes when an attempt is made to delete a field with an `index_together` and `unique_together` attribute. It outlines possible steps to reproduce the problem indicating that the error `ValueError: Found wrong number (2) of constraints for` is introduced. Since there are two constraints (unique and index) on the same fields the framework raises an error. It points out a second issue whereby moving the `index` definition can cause Django to mistakenly attempt to recreate the index leading to the same conflict. The second issue needs further clarification.",
        "false_negative":1,
        "false_negative_notes":"The tests seem to cover the main scenario described in the issue, where an index_together is deleted while a unique_together exists on the same fields. \nHowever, the tests might not cover some edge cases, such as:\nDeleting a unique_together while an index_together exists on the same fields.\nRefactoring the code to use the new Options.indexes feature without deleting the index.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":5,
        "false_negative_decided_by":40,
        "other_major_issues_decided_by":5,
        "difficulty_decided_by":"[32, 40]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":10,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240924_solver",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.72,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"django__django-16877",
        "underspecified":1,
        "underspecified_notes":"The issue description for adding a new template filter called escapeseq in Django is reasonably clear but lacks complete detail on the implementation specifics. The text explains the purpose of the filter and provides a practical usage example, which is helpful for understanding the desired functionality. However, it doesn't specify exactly how the escape operation should be performed or define the expected behavior in different contexts beyond the given example.",
        "false_negative":0,
        "false_negative_notes":"The tests for the escapeseq template filter appear to be well-scoped and detailed, covering various usage contexts and combinations of settings that could affect the behavior of the filter. The test scenarios address both when autoescape is on and off, and they verify the expected output when the filter is used on strings and lists of strings, both safe and unsafe.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":32,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":32,
        "difficulty_decided_by":"[32, 8]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":7,
        "solved_by":[
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20240820_honeycomb",
            "20241028_solver",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.81,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-16612",
        "underspecified":0,
        "underspecified_notes":"The issue described here is about query strings not being included in a redirect for 'AdminSite.catch_all_view()'. The offending code is also included in the description which gives direction to the engineer working on the PR. The issue is well-specified and clear.",
        "false_negative":0,
        "false_negative_notes":"The tests cover all the possible scenarios for a redirect that might be included in a solution for the AdminSite. Whether superuser or a normal user, a url with\/without the trailing slash. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":58,
        "false_negative_decided_by":58,
        "other_major_issues_decided_by":58,
        "difficulty_decided_by":"[58, 53]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":26,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.28,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-16100",
        "underspecified":0,
        "underspecified_notes":"The issue clearly describes that the `changelist_view` in Django admin is missing transaction handling. Since this view can modify database data, it should be wrapped in a transaction to prevent the database from reaching an unexpected state in case of errors.",
        "false_negative":0,
        "false_negative_notes":"The test `test_list_editable_atomicity` verifies the atomicity of list_editable processing in Django admin when transactions are supported by the database. It creates two `Swallow` objects, then simulates editing them through the admin interface. It uses `mock.patch` to raise `DatabaseError` during the logging of changes to ensure that if an error occurs during the update, the original values of the `Swallow` objects are preserved. This confirms that changes are rolled back in case of an error, maintaining data consistency.\nSo the test is testing exactly the issue being raised.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":44,
        "false_negative_decided_by":44,
        "other_major_issues_decided_by":44,
        "difficulty_decided_by":"[44, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":13,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241007_nfactorial",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.64,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sympy__sympy-17139",
        "underspecified":1,
        "underspecified_notes":"The `simplify` function in SymPy raises a `TypeError` when attempting to simplify `cos(x)**I` due to an invalid comparison involving the complex number `I`. To handle this, the simplification process should be updated to avoid invalid comparisons with complex numbers. Although, expected behavior is not specified but It is safe to interpret that to successfully solve the issue, if the exponent is not real (i.e., it's a complex number like `I`), the function should return the original expression without attempting further simplification.\n\nNote: The error has been raised because of the statement in the `_f` inner function of the `T` function.",
        "false_negative":0,
        "false_negative_notes":"The tests verify that the simplification of a trigonometric function powered with a non-real number works correctly without any error. The test uses the same\/similar cases to the one that is provided in the issue description. I cannot think of any other solution that might fail the tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":42,
        "false_negative_decided_by":44,
        "other_major_issues_decided_by":44,
        "difficulty_decided_by":"[44, 42, 43]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":9,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20241022_tools_claude-3-5-haiku",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.75,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-10297",
        "underspecified":0,
        "underspecified_notes":"The issue is clear; `Parameter store_cv_values error on sklearn.linear_model.RidgeClassifierCV`. A sample code is shared to reproduce the problem. The expected outcome is also shared; `Expected to get the usual ridge regression model output, keeping the cross validation predictions as attribute.`",
        "false_negative":0,
        "false_negative_notes":"test_ridgecv_store_cv_values, test_ridge_classifier_cv_store_cv_values and test_ridgecv_sample_weight ensures that Parameter store_cv_values get the usual ridge regression model output on sklearn.linear_model.RidgeClassifierCV",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":54,
        "false_negative_decided_by":54,
        "other_major_issues_decided_by":54,
        "difficulty_decided_by":"[54, 53]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":27,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.25,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-25102",
        "underspecified":1,
        "underspecified_notes":"The issue provides a clear description of the problem, citing specific data types being changed during data transformations in `pandas` dataframes with `scikit-learn` transformers. It even includes a proposed solution that involves modifying the `_SetOutputMixin` to preserve the original data types by adjusting how data is wrapped in the output container. It specifies adding an argument for data types to the `_wrap_in_pandas_container` method and suggests providing the data types from the original input to preserve them through transformations. However, while the description outlines the necessary components and the area of the codebase affected, it does not provide explicit details on all aspects of implementation. For example, it leaves open how exactly the data types should be preserved across all possible transformers or how this change might affect other parts of the system, suggesting there are some blanks or decisions left to the engineer's discretion. This makes the issue well-defined but not completely specified in every technical detail, making it suitable for rating 1.",
        "false_negative":1,
        "false_negative_notes":"- The tests are well-aligned with the core requirement of preserving dtypes and ensure that the implemented solution works as intended.\n- The issue description did not mention the 'cast_to_ndarray' parameter, but the tests correctly verify the expected behavior without requiring knowledge of this parameter. The tests do not directly rely on this parameter but implicitly test the functionality introduced by this parameter. \n- While the tests cover common dtypes, they do not cover all potential dtypes, including custom ones. This could miss some edge cases.\n- The tests are focused on specific transformers, and while they represent a reasonable subset, they do not cover all possible transformers that might be affected by the dtype preservation requirement.\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":13,
        "false_negative_decided_by":26,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[13, 26]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":5,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20241022_tools_claude-3-5-haiku",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.86,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"django__django-13023",
        "underspecified":1,
        "underspecified_notes":"The issue is clearly stated: a call to `DecimalField.to_python()` with a dictionary as the value parameter produces a `TypeError` instead of a `ValidationError`. However, the format of the `ValidationError` message needs to be specified. Additionally, no sample code demonstrates the issue, but there is a sensible interpretation of what is required for a successful solution.",
        "false_negative":1,
        "false_negative_notes":"The test covers the majority of correct solutions but since the format of the ValidationError is not specified in the issue description, some unusual solutions that modify the standard error message will fail this test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":54,
        "false_negative_decided_by":54,
        "other_major_issues_decided_by":30,
        "difficulty_decided_by":"[30, 54, 37]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-14629",
        "underspecified":1,
        "underspecified_notes":"The issue description raises out a bug that rises with cross validation and pinpoints its source (\"classes_\" existing for each element of \"estimators_\" in multi-output classifier instead of the multi-output classifier itself). However, the issue description does not suggest a solution and instead leaves it open for core team members, which leaves the issue with an objective but lack of clear suggestions on implementation.",
        "false_negative":1,
        "false_negative_notes":"Since any reasonable solution would choose to add the \"classes_\" attribute to the multi-output classifier instead of altering the validation code in anyway, and the tests check the multi-output classifier precisely for this attribute, they would pass most reasonable solutions. Since existing classes that have a similar existing implementation of this attribute with type list, it would make most sense for the attribute in multi-output classifier to be a list. However, some unusual solutions might make it another iterable, like a tuple, which would also work correctly and result in the objective, but would fail the type check insertion in the tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":31,
        "false_negative_decided_by":31,
        "other_major_issues_decided_by":31,
        "difficulty_decided_by":"[31, 76, 15]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-16667",
        "underspecified":1,
        "underspecified_notes":"The issue is clear; SelectDateWidget can crash with OverflowError.. A sample code is also shared to reproduce the problem.\nHowever, the overflow error message to display is not stated.",
        "false_negative":1,
        "false_negative_notes":"While the test covers all possible solutions, some unusual solutions that do not follow the standard overflow error message practice in the repository may be missed.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":54,
        "false_negative_decided_by":54,
        "other_major_issues_decided_by":54,
        "difficulty_decided_by":"[54, 32]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-15525",
        "underspecified":1,
        "underspecified_notes":"The problem is described as an issue with loading data using natural keys in a non-default database. The description specifies that the issue occurs with a one-to-many relationship between two models, Book and Author in the example given. There are some blanks as it is missing explicit details on the expected behavior when using natural keys in non-default databases.\n",
        "false_negative":0,
        "false_negative_notes":"- The new test function `test_natural_key_dependencies` validates that natural keys with foreign keys in dependencies work in a multiple database setup, which is exactly what the issue description addresses.\n- This test function does not depend on the specific solution being implemented.\n- The updated test function `test_supports_json_field_operational_error` appears to be updated merely to support the updated code base from `unittest` and is irrelevant to the issue at hand.\n- Therefore, the test should pass for all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":32,
        "false_negative_decided_by":3,
        "other_major_issues_decided_by":3,
        "difficulty_decided_by":"[3, 52, 32]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-12419",
        "underspecified":1,
        "underspecified_notes":"\nThe issue is about improving the default security settings in Django regarding how referrer information is handled. Currently, the `SECURE_REFERRER_POLICY` setting in Django allows setting the `Referrer-Policy` HTTP header, which controls the amount of referrer information that is shared with other sites. This feature was introduced in Django 3.0.\n\nThe proposal is to change the default setting of `SECURE_REFERRER_POLICY` to `\"same-origin\"` to reduce the amount of potentially sensitive information leaked to third-party websites.\n\nIn terms of proposed solution and issue description the issue is very clear but there are some blank to fill as while the suggested fix enhances security, it could potentially break existing integrations that depend on the current behavior. Additionally, the documentation might not be fully up-to-date, as indicated by the references to outdated MDN documentation and support grids. If the concern for the breaking the existing integration is clarified it will make the issue more clear.",
        "false_negative":0,
        "false_negative_notes":"The tests perfectly cover all possible solutions. The value for the `SECURE_REFERRER_POLICY` was `None` which needed to change to `same-origin` by default. Hence the test asserts for the default value being `same-origin`.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":17,
        "false_negative_decided_by":58,
        "other_major_issues_decided_by":58,
        "difficulty_decided_by":"[58, 17, 6]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":29,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.19,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-8593",
        "underspecified":0,
        "underspecified_notes":"- The issue description states that `autodoc: :meta public:` does not apply to variables.\n- It includes sample code and configuration to reproduce the issue.\n- It mentions that the `_foo` variable from the sample code is not displayed in the built document.\n- It also provides the environment information.\n- The expected behavior is for the `_foo` variable to be displayed in the built document.\n- The issue description is well-specified, and it is clear what needs to be done.",
        "false_negative":1,
        "false_negative_notes":"- The updated test functions `test_private_field`, `test_private_field_and_private_members`, and `test_private_members` all check that variables of `:meta public:` type are correctly documented. However, `test_private_field_and_private_members` also tests `:meta private:`, which seems to be auto-fixed when fixing `:meta public:` by the solution being implemented.\n- As a result, some unconventional solutions might be missed.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":3,
        "false_negative_decided_by":3,
        "other_major_issues_decided_by":3,
        "difficulty_decided_by":"[62, 59]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sympy__sympy-16450",
        "underspecified":1,
        "underspecified_notes":"The problem is somewhat clear: the posify function removes the finite assumption from a symbol. The example shows exactly what goes wrong. However, it's not entirely clear which other assumptions should be kept (like integer, rational, prime, even, odd). Plus, it says “I think that posify should preserve the finiteness assumption.” without mentioning the reasoning.  So I would rate this as 1.  ",
        "false_negative":0,
        "false_negative_notes":"This aligns directly with the problem outlined in the issue so that any solution which correctly handles assumption preservation will pass. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":60,
        "false_negative_decided_by":60,
        "other_major_issues_decided_by":60,
        "difficulty_decided_by":"[13, 23]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":21,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.42,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-14608",
        "underspecified":1,
        "underspecified_notes":"- The issue description identifies the need for a nonform CSS class to distinguish non-form errors in FormSets and provides a rationale for why this change is needed.\n- The feature requirement is clear: it requires adding the nonform CSS class for non-form errors in the same way that the nonfield CSS class is added for non-field errors.\n- Although, the issue doesn't provide technical details on how it should be implemented but there is sensible interpretation of what is required.",
        "false_negative":1,
        "false_negative_notes":"- The tests effectively validate the addition of the nonform CSS class to ErrorList instances for non-form errors.\n- The only reasonable solution is to specify nonform class similarly to the nonfield class in self.error_class() but if an engineer manages to add the nonform class in an unconventional way which is possible, the test patch won't cover that scenario.\n- Therefore, the tests cover the correct solution but might miss an unusual solution. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":26,
        "false_negative_decided_by":26,
        "other_major_issues_decided_by":26,
        "difficulty_decided_by":"[26, 30]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":14,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240920_solver",
            "20231010_rag_claude2",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.61,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-13195",
        "underspecified":0,
        "underspecified_notes":"The issue is very clear on the problem and suggested solution. The change in how browsers handle cookies created a problem for django messages response's delete_cookie hence the solution will be to set the samesite option on the cookie to something else other than None or maintain the samesite=None with a secure flag.",
        "false_negative":0,
        "false_negative_notes":"The tests cover for when `samesite` is set to `None` in which case the `secure` flag is expected to be set `True`, and when `samesite` is set to a value other than `None`. This covers all possible solutions. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":58,
        "false_negative_decided_by":58,
        "other_major_issues_decided_by":58,
        "difficulty_decided_by":"[58, 69]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-18199",
        "underspecified":0,
        "underspecified_notes":"The issue describes a problem with the `nthroot_mod` function, which is supposed to find all roots of the equation ( x**n = a mod p ). The function currently fails to check for the condition when ( a % p == 0 ), which means it misses the root ( x = 0 mod p ). For example, `nthroot_mod(17*17, 5, 17)` should return 0 as a root, but it does not.\n\nThe issue is well-specified and is clear what a successful solution would look like: the `nthroot_mod` function should correctly identify and return 0 as a root when ( a % p == 0 ).",
        "false_negative":1,
        "false_negative_notes":"The modifications in the \"test_residue\" directly address the mentioned issue. The following test cases specifically test the issue:\n\n- `nthroot_mod(0, 12, 37, True) == [0]` confirms the function returns 0 as a root.\n- `nthroot_mod(0, 7, 100, True) == [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]` ensures correct identification of 0 and its multiples for composite modulus 100.\n\nThere are additional tests that extensively cover the changes made in the gold patch. The function `_nthroot_mod_composite` added in the gold patch currently returns the default sorted order, which is the increasing order, normally preferred by most developers. However, there is a possibility that another developer might implement it to return in decreasing order, which is uncommon but possible. If that happens, the tests will fail because they expect the results in increasing order.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":17,
        "false_negative_decided_by":17,
        "other_major_issues_decided_by":17,
        "difficulty_decided_by":"[17, 12]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"django__django-14500",
        "underspecified":1,
        "underspecified_notes":"The problem is identified as an issue with the MigrationExecutor marking both the squashed migration and the replaced migrations as unapplied. While it mentions the problem, it does not explicitly state what the expected behavior should be, although it can be inferred that only the replaced migrations should be marked as unapplied leaving some room for interpretation.",
        "false_negative":1,
        "false_negative_notes":"The tests cover the majority of correct solutions, however some unusual solutions may be missed.\n\nThe test test_migrate_marks_replacement_unapplied verifies that a squashed migration is correctly marked as unapplied when unapplying it, which aligns with the issue description. The tests might miss solutions using alternative migration tracking methods or custom state management strategies not covered by MigrationExecutor. They also don’t address edge cases like partial reversion of squashed migrations or complex interactions with multiple migration files.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":32,
        "false_negative_decided_by":80,
        "other_major_issues_decided_by":32,
        "difficulty_decided_by":"[32]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":12,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20241028_agentless-1.5_gpt4o",
            "20241001_nfactorial",
            "20240824_gru",
            "20240820_honeycomb",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.67,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sympy__sympy-13878",
        "underspecified":0,
        "underspecified_notes":"The issue description clearly mentions problems with computing CDF of some distributions. It is proposed to pre-compute CDF of those distributions  and have '_cdf' method for such pre-computed CDF. What is required for a successful solution is clear.",
        "false_negative":0,
        "false_negative_notes":"The test cases check exactly for what is described in the issue description and therefore, must cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":">4 hours",
        "underspecified_decided_by":21,
        "false_negative_decided_by":21,
        "other_major_issues_decided_by":21,
        "difficulty_decided_by":"[29, 58]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":6,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240820_honeycomb",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.83,
        "difficulty_encoded":3,
        "difficulty_slugged":">4_hours",
        "stratify_column":">4_hours_0"
    },
    {
        "instance_id":"sympy__sympy-21596",
        "underspecified":1,
        "underspecified_notes":"I would not consider the issue perfectly clear, as there seem to be some blanks to fill regarding the issue. The current vs expected behaviour highlights the evaluation \"2 in S1.intersect(Reals)\", which should come up False, but it appears to be True. But there is little information regarding the issue itself and what a successful solution would actually look like. So the picked number is 1",
        "false_negative":0,
        "false_negative_notes":"The test patch covers the sensible cases that a correct solution should be able to pass. It tests various scenarios by calling imageset(Lambda()) and then intersecting with S.Reals. See example on line 663 of sympy\/sets\/tests\/test_fancysets.py. The correct label should be 0 here",
        "other_major_issues":0,
        "other_notes":"No other issues with the task.",
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":53,
        "false_negative_decided_by":53,
        "other_major_issues_decided_by":53,
        "difficulty_decided_by":"[53, 15]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-13363",
        "underspecified":1,
        "underspecified_notes":"- The issue clearly explains the problem with the current implementation of TruncDate and TruncTime and it provides a specific line in the code where the problem occurs. The description includes an example which demonstrates the expected behavior and the current issue.\n- The description relies on external links pointing to specific lines of code, which are helpful only if they lead to the intended code. However, if another PR is merged into the master branch affecting these files, the links might lead to incorrect lines of code, causing confusion. In such cases, the engineer would need to locate the correct lines of code manually.",
        "false_negative":0,
        "false_negative_notes":"The test page is testing the behavior when the time zone is set before the truncation calls. Any solution to this problem should pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":26,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 26]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":25,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.31,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-13925",
        "underspecified":0,
        "underspecified_notes":"models.W042 is raised on inherited **manually** specified primary key. \nThe issue is clear;  models that inherit from other models “manually”, do not inherit the primary key. Instead auto-created primary keys are used.",
        "false_negative":0,
        "false_negative_notes":"The test covered all possible solutions; test_explicit_inherited_pk and test_explicit_inherited_parent_link ensure that all 'models.W042' warning is not raised on inherited manually specified primary key.\nWhereas, test_auto_created_inherited_pk and test_auto_created_inherited_parent_link ensure that `it's only raised`on inherited manually specified primary key.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":54,
        "false_negative_decided_by":54,
        "other_major_issues_decided_by":54,
        "difficulty_decided_by":"[6, 12]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":6,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240920_solver",
            "20241028_solver",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.83,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-25747",
        "underspecified":0,
        "underspecified_notes":"The issue is clear; FeatureUnion not working when aggregating data and pandas transform output selected. A sample code is also shared to reproduce the problem. The actual and expected results are shared.",
        "false_negative":1,
        "false_negative_notes":"The test case test_set_output_pandas_keep_index is testing for the internal cause of the issue - set_output does not override index. Some unusual solutions that don't follow this route may fail this test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":54,
        "false_negative_decided_by":54,
        "other_major_issues_decided_by":54,
        "difficulty_decided_by":"[39, 11]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sympy__sympy-23950",
        "underspecified":1,
        "underspecified_notes":"The description clearly mention the root cause of the error as Contains() not a set and doesn't have as_relational attribute.\nDespite this, we are not clear on how we should resolve this error i.e do we throw an exception error or adjust the Contains() function to return a set",
        "false_negative":1,
        "false_negative_notes":"The test seems to address the Contains() issues as mentioned in the Issue description. However, there are other type of Sympy sets that may be missed out. i.e Naturals, Complex etc, since they are not added in the testcases",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":16,
        "false_negative_decided_by":16,
        "other_major_issues_decided_by":18,
        "difficulty_decided_by":"[18, 13, 16]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":17,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.53,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-12039",
        "underspecified":0,
        "underspecified_notes":"The issue statement describes the problem well and offers the desired results: Creating an index generates the result CREATE INDEX \"idx\" ON \"schema_author\" (\"name\"DESC) with a missing white space between name and desc, while generating the index with opclasses=['text_pattern_ops’], adds an extra white space in (“name” text_pattern_ops )\nSo the issue can be rated as 0.",
        "false_negative":0,
        "false_negative_notes":"The test patch covers the exact issue raised in the problem statement and any new solution should be able to pass it. test_columns_list_sql and test_descending_columns_list_sql functions test that the missing white space is present and then test_ops_class_columns_lists_sql and test_ops_class_descending_columns_list_sql check that the trailing extra whitespace from the issue statement is gone.\nThat ensures the correct resolution of the problem. Hence the 0 label",
        "other_major_issues":0,
        "other_notes":"No other issues with the task",
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":53,
        "false_negative_decided_by":53,
        "other_major_issues_decided_by":53,
        "difficulty_decided_by":"[53, 14]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":10,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241016_composio_swekit",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.72,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-14539",
        "underspecified":0,
        "underspecified_notes":"The description is clear and includes specific examples related to the issue, illustrating the expected versus actual behaviour. This clarity allows for a better understanding of the problem and enables work on a solution without requiring further clarification. Therefore, option 0 should be the preferred choice.",
        "false_negative":1,
        "false_negative_notes":"The test cases handle the scenario described in the issue. However, some edge cases might be missed, such as different types of HTML entities and multiple trailing punctuation marks. These omissions could result in missing some unusual but valid solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":89,
        "false_negative_decided_by":89,
        "other_major_issues_decided_by":89,
        "difficulty_decided_by":"[89, 26]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":15,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.58,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"sympy__sympy-23413",
        "underspecified":0,
        "underspecified_notes":"The description clearly states the problem and then gives a good example demonstrating the expected behaviour. It even goes ahead to provide a probable analysis of the issue, potentially assisting the engineer in his exploration and implementation.",
        "false_negative":1,
        "false_negative_notes":"Most of the solutions that address the underlying issue with the example in the issue description would pass the tests here. The issue with the `hermite_normal_form` was resolved. The fact that the exact example in the issue description wasn't used within the test patch isn't relevant.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":18,
        "false_negative_decided_by":18,
        "other_major_issues_decided_by":18,
        "difficulty_decided_by":"[18, 7, 3]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-13670",
        "underspecified":1,
        "underspecified_notes":"There are some details missing from the issue description. Although a PR link is provided, the issue creator should have explained the PR thoroughly and included a code snippet in the issue description along with the link.",
        "false_negative":0,
        "false_negative_notes":"The tests check the output of the `dateformat.format()` function for years before 1000. The tests are well-written and cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":74,
        "false_negative_decided_by":74,
        "other_major_issues_decided_by":74,
        "difficulty_decided_by":"[91, 10]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":27,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.25,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-25479",
        "underspecified":0,
        "underspecified_notes":"The issue is clear from the ticket description. It shows a broken colormap name handling scenario. The ticket showed some suggestions for where the problem is coming from. The problem seems to have something with double internal name lookup tables. It is clear where to start and search to find the bug.",
        "false_negative":0,
        "false_negative_notes":"The tests are testing that set_cmap does not create a problem of mismatched names which is the same problem that is being described by the ticket. Any fix to the problem should pass the provided tests. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":7,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 59]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-14771",
        "underspecified":1,
        "underspecified_notes":"The title of the description makes it clear what the issue and expected behavior are. Even though it lacks some extra details on why the change is necessary, it is mostly clear what is required.",
        "false_negative":0,
        "false_negative_notes":"The test patch would pass reasonable solutions. It checks to determine if the `-X` options are loaded correctly by the autoloader.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":18,
        "false_negative_decided_by":5,
        "other_major_issues_decided_by":5,
        "difficulty_decided_by":"[5, 18]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":6,
        "solved_by":[
            "20240824_gru",
            "20241028_solver",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.83,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-14007",
        "underspecified":0,
        "underspecified_notes":"The issue is about the `INSERT` statements not calling the database converters on the field. The issue is clear and well-specified.",
        "false_negative":0,
        "false_negative_notes":"The tests perfectly cover all possible solutions. The tests asserts that the return type of an `INSERT` statement or a `Model.objects.create()` query is passed to the database converters.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":58,
        "false_negative_decided_by":58,
        "other_major_issues_decided_by":58,
        "difficulty_decided_by":"[5, 80]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":8,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240924_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.78,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-10323",
        "underspecified":1,
        "underspecified_notes":"The issue revolves around maintaining proper indentation for prepended content when using the literalinclude directive in Sphinx. The proposed solution is to adjust the dedent functionality to apply solely to the included code, not the prepend or append content, thus preserving the intended formatting.\n\nHowever, it is not mentioned that we should implement it.",
        "false_negative":0,
        "false_negative_notes":"The test verifies the final output rather than the implementation details. As long as the output is correct, any valid solution will pass the test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":20,
        "false_negative_decided_by":15,
        "other_major_issues_decided_by":15,
        "difficulty_decided_by":"[15, 1, 20]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20240824_gru"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-14017",
        "underspecified":0,
        "underspecified_notes":"The issue is well-specified and involves the non-commutative behavior of the & operator when used with Q objects and Exists expressions in Django. \nThe solution might involve defining the __rand__ method.\nThe second to last line suggests that '|' should also have this commutative behaviour.\nThis makes the issue clear and the engineer would even have an idea on how to resolve it.",
        "false_negative":0,
        "false_negative_notes":"The test is relevant to the issue raised and wide enough as it factors in both & and | .\nBased on the high level of the test, all solutions that address the underlying issue should pass the test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":18,
        "false_negative_decided_by":18,
        "other_major_issues_decided_by":18,
        "difficulty_decided_by":"[18, 63]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":8,
        "solved_by":[
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20240820_honeycomb",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.78,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"psf__requests-6028",
        "underspecified":0,
        "underspecified_notes":"The issue involves receiving a 407 error when using proxies in Python 3.8.12 which suggests an HTTP proxy authentication problem. Other python versions do not have this issue.",
        "false_negative":1,
        "false_negative_notes":"The test checks that the changes are applied in the `prepend_scheme_if_needed` method. The issue description does not specifically mention this method and therefore this change can also be made in the `get_connection` function. That solution would be quite unusual though.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":35,
        "false_negative_decided_by":35,
        "other_major_issues_decided_by":35,
        "difficulty_decided_by":"[42, 44]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"pytest-dev__pytest-6197",
        "underspecified":1,
        "underspecified_notes":"The issue was detected by a build server: pytest 5.2.3 tries to import any `__init__.py` file under the current directory. This causes issues when there are packages that should only be imported under certain conditions (e.g., only on Windows and not on Linux). Running tests with pytest 5.2.2 succeeds without errors. The expected behavior should be consistent with pytest 5.2.2, where `__init__.py` files were not collected and imported during the test collection process. Although the issue and expectation are clear, it does not provide any root cause or hint to solve the issue. Therefore, it should be rated as 1.",
        "false_negative":1,
        "false_negative_notes":"The tests correctly check that empty packages are not eagerly collected and that the tests in the `__init__` files are skipped(ignored) in the current directory as per the issue description.\nHowever, these tests might be too strict for some unusual solutions which only address the issue by skipping tests in the __init__ file, which would achieve the goal as per the issue.\nSuch solutions could fail the `test_does_not_put_src_on_path` and therefore the solution is rated as a 1.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":12,
        "false_negative_decided_by":27,
        "other_major_issues_decided_by":12,
        "difficulty_decided_by":"[12, 27]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-13135",
        "underspecified":0,
        "underspecified_notes":"The issue description is categorized as well-specified because it effectively outlines the problem with the KBinsDiscretizer using the kmeans strategy, as evidenced by the detailed traceback and the specific use of the function in question. It includes the function call KBinsDiscretizer(n_bins=5, strategy='kmeans', encode='ordinal') within a code snippet that reproduces the error, ensuring that anyone attempting to solve the issue can directly see the impact of the code. Furthermore, the inclusion of the specific error message, ValueError: bins must be monotonically increasing or decreasing, along with the traceback pointing to transform(self, X) in _discretization.py, provides a clear direction for locating and addressing the bug in the codebase. These details pinpoint the exact location of the issue and the conditions under which it occurs, making it actionable for developers to create a fix.\n",
        "false_negative":0,
        "false_negative_notes":"the tests are perfectly covering all possible solutions hinges on their thorough and specific validation of changes made to the KBinsDiscretizer across multiple strategies and configurations. These tests directly address the issue by checking for the correct sorting of cluster centers in the kmeans strategy, which is essential to avoid errors with np.digitize. By expanding the scope to include tests for 5 bins, where the problem was initially observed, and ensuring these scenarios pass, the tests confirm the patch resolves the issue comprehensively. Additionally, the variety in testing scenarios ensures that any correct implementation adhering to the expected functionality will pass, safeguarding against regression and confirming the patch's effectiveness across typical use cases.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":37,
        "false_negative_decided_by":37,
        "other_major_issues_decided_by":29,
        "difficulty_decided_by":"[37, 15]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":14,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.61,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-13439",
        "underspecified":0,
        "underspecified_notes":"The issue description clearly states that the Pipeline class should implement the __len__ method to avoid errors when using pipe[:len(pipe)]. The provided code snippet illustrates the problem, making it straightforward to understand the expected behavior and where the change should be implemented. The environment and version details further help in reproducing the issue.",
        "false_negative":0,
        "false_negative_notes":"The test added in the Test Patch verifies that the __len__ method of the Pipeline class returns the correct length, which directly addresses the issue described. It ensures that the length of the pipeline is correctly implemented and can be used without errors. This test is well-scoped to cover the issue described and will work for any correct implementation of the __len__ method.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":29,
        "false_negative_decided_by":29,
        "other_major_issues_decided_by":29,
        "difficulty_decided_by":"[20, 19]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":25,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.31,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-13297",
        "underspecified":0,
        "underspecified_notes":"The issue description provides sufficient detail to understand the problem and devise a solution, and implement the necessary code changes. The issue clearly describes that in Django 3.1, TemplateView.get_context_data()'s kwargs returns SimpleLazyObjects instead of strings, causing a crash when these objects are used in database queries. This behavior is different from Django 3.0, where the kwargs would be regular strings. The detailed problem statement, example code, error message, and debugging insights provide sufficient information to create a meaningful PR to resolve the issue.",
        "false_negative":1,
        "false_negative_notes":"The gold patch is making sure that `get` function if fixed correctly. The ticket description has mentioned `get_object_or_404`, however, a solution that fixes the problem for `get_object_or_404` and not `get` would be very unreasonable.  But it wouldn't pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":44,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":44,
        "difficulty_decided_by":"[44, 7, 14]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20240920_solver",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-12663",
        "underspecified":1,
        "underspecified_notes":"- The problem is identified as a regression caused by a specific commit, where SimpleLazyObject can no longer be used in a queryset with nested subquery annotations.\n- The description lacks details about the commit changes and their impact on the working functionality.\n- The issue includes a test case that reproduces the problem and provides the error traceback, highlighting the failure point and the type of error encountered.\n- Although the expected solution is not explicitly mentioned in the issue description, there is a clear understanding of what is needed for a successful resolution.",
        "false_negative":0,
        "false_negative_notes":"- According to the problem defined in the issue description, the expected solution should enable SimpleLazyObject to be used in a queryset with nested subquery annotations. The test patch effectively tests this functionality.\n- As long as the solution ensures that SimpleLazyObject works correctly again, the test patch will pass.\n- Therefore, the tests comprehensively cover all possible solutions to the issue.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":26,
        "false_negative_decided_by":26,
        "other_major_issues_decided_by":26,
        "difficulty_decided_by":"[26, 41, 12]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20241022_tools_claude-3-5-haiku",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-13741",
        "underspecified":0,
        "underspecified_notes":"The issue description is well-specified, It clearly states the objective: to set the disabled property to True by default on the “ReadOnlyPasswordHashField” in Django’s “UserChangeForm”. The description provides relevant context about the “disabled” attribute behavior, explaining how it prevents user edits and highlights potential pitfalls when using the “ReadOnlyPasswordHashField” without the “clean_password” method. This clarity allows an engineer to understand what is needed to implement the solution successfully. ",
        "false_negative":0,
        "false_negative_notes":"The tests comprehensively cover the requirements outlined in the issue. The test verifies that the “ReadoOnlyPasswordHashField” has the “disabled” property set to True, ensuring that the field is not editable. This directly aligns with the issue’s goal of preventing accidental changes to the password. Additionally, the tests do not introduce any assumptions or details not mentioned in the issue description, making them well-scoped to validate all possible solutions effectively. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":81,
        "false_negative_decided_by":81,
        "other_major_issues_decided_by":81,
        "difficulty_decided_by":"[81, 26, 19]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":28,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.22,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-25960",
        "underspecified":1,
        "underspecified_notes":"The issue is clear.  `hspace` and `wspace` are supposed to control the spacing between subplots in a figure. However, the figure is the same no matter what values are given to it . \nThe expected solution is not clear. Without visiting the link, it's not clear what to expect. It would be better  if the actual outcome and expected were visually represented. ",
        "false_negative":0,
        "false_negative_notes":"The test asserts if the each subplot is at where it's supposed to be . It does this by checking if the calculated bounding boxes  of each subfigure match the expected values based on the spacings defined.\nNo matter what solution is used , the bounding boxes of the subplots should satisfy the values of `hspace` and `wspace`. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":92,
        "false_negative_decided_by":92,
        "other_major_issues_decided_by":92,
        "difficulty_decided_by":"[92, 54]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-15022",
        "underspecified":1,
        "underspecified_notes":"The issue description tries to explain the occurrence of unnecessary joins in the admin change list query. It describes the inefficiency of the query generated when multiple search terms are used. When a search query contains multiple words. Django constructs a query that includes multiple joins for each word in the search query due to the `search_fields` configuration particularly the `qs = qs.filter(...)`  pattern. This can eventually lead to redundant joins. In some cases it could cause the query to stall especially with large datasets. Further information is needed in order to identify a clear solution in solving the problem.",
        "false_negative":1,
        "false_negative_notes":"The test `test_many_search_terms` checks that a large number of search terms does not lead to excessive JOIN operations. The test `test_related_field_multiple_search_terms` ensures that searches over multi-valued relationships return rows from related models only when all searched fields match. Some unusual solutions like they optimize the search by breaking down the search field or caching results differently which might not pass these test case. Hence, choice 1 is preferred.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":5,
        "false_negative_decided_by":77,
        "other_major_issues_decided_by":81,
        "difficulty_decided_by":"[81, 5, 77]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":12,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.67,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-15561",
        "underspecified":1,
        "underspecified_notes":"The issue is well described that is AlterField operation should be noop when adding\/changing choices on SQLite. Some blanks to fill would to be the specific db attr do be updated such that alteration should be noop the issue mentions one that is choices. It would be best know if that is the case for all dbs the author provides example of how postgres db handles these.",
        "false_negative":0,
        "false_negative_notes":"The test uses the schema editor to attempt to alter the name field of the Author model from old_field to new_field, while asserting that no database queries are executed (assertNumQueries(0)). This will cover all possible solutions as this was the intended behaviour.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":68,
        "false_negative_decided_by":68,
        "other_major_issues_decided_by":68,
        "difficulty_decided_by":"[68, 6]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":12,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.67,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-13615",
        "underspecified":1,
        "underspecified_notes":"While the issue description provides a clear example of the problem and the expected output, there are some blanks to fill in. The description doesn't explicitly state why the current output is incorrect or explain the desired behavior for symbolic elements. However, there is a sensible interpretation of what's required for a successful solution: the Complement operation needs to be modified to handle mixed sets of symbols and numbers correctly, retaining symbols in the result while applying the complement operation to them, and removing numbers that fall within the interval. This interpretation allows for a clear direction in addressing the issue, even if some contextual details are missing.",
        "false_negative":0,
        "false_negative_notes":"The test is directly related to the issue and checks the example given in the problem statement. That's why all successful solutions will pass the test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":45,
        "false_negative_decided_by":42,
        "other_major_issues_decided_by":42,
        "difficulty_decided_by":"[42, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20240820_honeycomb"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-15973",
        "underspecified":1,
        "underspecified_notes":"While the issue provides clear details about the models involved (FonteModel, VariavelModel, and FonteVariavelModel), the specific error (AttributeError: 'str' object has no attribute '_meta') and its context are well-defined. However, there are still ambiguities such as how migrations are configured across different apps (fonte, variavel, fonte_variavel), and any potential dependencies or imports that might affect the through model in the ManyToManyField.\nIt is still relatively clear what a successful solution would look like - it should complete the migrations without any errors.",
        "false_negative":1,
        "false_negative_notes":"The `test_create_with_through_model` test constructs migrations and validates their correctness across different apps (authors, testapp, contract) using a `ManyToManyField` with a through model (Contract). \nIt verifies migration counts, dependencies, and operation types but does not directly simulate or validate the AttributeError: 'str' object has no attribute '_meta' issue during migrations, which is crucial for addressing the reported problem accurately. Therefore, while the test covers related aspects of Django migrations, it does not test the specific error condition described in the issue and there might be solutions which handle the migration error but fail these tests.\nA rating of 1 is therefore suitable here.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":27,
        "false_negative_decided_by":27,
        "other_major_issues_decided_by":40,
        "difficulty_decided_by":"[27, 53]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-16082",
        "underspecified":0,
        "underspecified_notes":"The problem is clearly understandable by the description provided that there is inconsistency in handling the type resolution of results when using the MOD operator in Django queries with mixed numeric types. This information is quite sufficient to deduce the solution, which is to explicitly cast the fields involved in the MOD operation to ensure the result is of the same format as of the query.",
        "false_negative":1,
        "false_negative_notes":"The tests cover the actual mechanism behind the Gold Patch, which is adding the MOD operator to the connectors for Numeric operations with operands of different type. This would be a natural solution to resolve the issue, but there might be some unusual solutions that solve the issue in different ways that would fail the tests. So the section label is 1",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":38,
        "false_negative_decided_by":53,
        "other_major_issues_decided_by":38,
        "difficulty_decided_by":"[38, 53]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":5,
        "solved_by":[
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.86,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"mwaskom__seaborn-3187",
        "underspecified":1,
        "underspecified_notes":"The issue description clearly highlights the issue that the generated legend for large numbers do not include the multiplicative offset value which makes it misleading. The present plot can be generated but the expected plot hasn't been shared which brings in a little ambiguity about the desired outcome. However, there is a sensible interpretation of what is required for a successful solution. Hence, it has been rated as 1.",
        "false_negative":1,
        "false_negative_notes":"The test checks that the legend of a plot does not apply a multiplicative offset to its values. It does this by asserting that each text in the legend shows a value greater than 1e7, confirming that no offset has lowered the display values.\nHowever , unusual solution may solve this issue in a different way. It may not eliminate the offset values from the legend. Such solutions may fail the test. \nThere's also a test for relational plots like lineplots, scatterplot.  Solutions that do not consider such plots would fail. \n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":76,
        "false_negative_decided_by":92,
        "other_major_issues_decided_by":2,
        "difficulty_decided_by":"[2, 92, 76]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-10914",
        "underspecified":0,
        "underspecified_notes":"The issue specifies that in the absence of explicitly configured FILE_UPLOAD_PERMISSIONS, the permissions can vary based on whether a MemoryUploadedFile or a TemporaryUploadedFile is used for temporary storage. It mentions that the use of tempfile.NamedTemporaryFile + os.rename results in file permissions being set to 0o0600 on some systems but the default FILE_UPLOAD_PERMISSION should be set to 0o644.",
        "false_negative":0,
        "false_negative_notes":"The test directly checks the FILE_UPLOAD_PERMISSIONS setting, which is explicitly mentioned in the issue description. Any valid solution that sets the default FILE_UPLOAD_PERMISSIONS to 0o644 and allows for it to be overridden would pass the test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":32,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":32,
        "difficulty_decided_by":"[32, 78, 14]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":23,
        "solved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240820_epam-ai-run-gpt-4o",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.36,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-13658",
        "underspecified":0,
        "underspecified_notes":"The issue you're describing revolves around the way Django's command-line management utility, `ManagementUtility`, handles the program name when executing commands. The issue description is clear on what a good solution would be which is to allow `CommandParser` re-use the program name for `ManagementUtility`",
        "false_negative":0,
        "false_negative_notes":"The test is adequate to verify that `CommandParser` reuses program name from `MangementUtility` and would work for all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":56,
        "false_negative_decided_by":56,
        "other_major_issues_decided_by":56,
        "difficulty_decided_by":"[56]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":31,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_swellama7b",
            "20231010_rag_gpt35",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.14,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-15695",
        "underspecified":1,
        "underspecified_notes":"- The RenameIndex() operation is failing when an unnamed index (specifically one that is auto-generated for unique_together) is being moved backward and then forward again during migrations.\n- The issue includes a traceback which adds more to the context\n- The expected solution involves ensuring that RenameIndex() can correctly handle unnamed, auto-generated index names during backward and forward movements in migrations. But how this solution can be achieved is not entirely clear and leaves some blanks for the engineer to fill in.",
        "false_negative":0,
        "false_negative_notes":"It seems like gold patch resolves the issue by a simple addition: a simple check to prevent unnecessary name alterations when the index name remains unchanged. Test patch seems to follow that solution and asserts that no operation is donewhen the old and new index names are the same (with the exact case from the issue: `new_pony_test_idx`). Therefore we can say that test case covers the issue (which is a single case anyway) and can be labeled as 0.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":26,
        "false_negative_decided_by":55,
        "other_major_issues_decided_by":55,
        "difficulty_decided_by":"[26, 40]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-13033",
        "underspecified":1,
        "underspecified_notes":"The issue description is fairly well-specified but leaves some details open to interpretation. It outlines the problem with self-referencing foreign keys not ordering correctly by a related field and provides specific examples of incorrect and correct SQL queries. However, it does not specify the exact cause or solution. The description provides enough context (e.g., models OneModel and TwoModel, specific query examples) to make an educated guess about what changes might be necessary to fix the ordering issue and reduce unnecessary joins.",
        "false_negative":1,
        "false_negative_notes":"The tests are well-constructed to cover the issue of self-referential foreign keys and ordering by related fields, but does not cover the issues of unnecessary SQL JOINs and odd behavior with inverted sort orders. The tests focus on the correctness of query results rather than the specific SQL structure matching the problem described. However, they might miss unusual solutions such as custom queryset methods, subqueries, or database indexing optimizations that avoid the unnecessary join. Additionally, advanced modifications to the ORM layer or using custom managers\/model methods to adjust the queryset might also be overlooked.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":80,
        "false_negative_decided_by":80,
        "other_major_issues_decided_by":32,
        "difficulty_decided_by":"[32, 69]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sympy__sympy-15017",
        "underspecified":0,
        "underspecified_notes":"- The issue text is very well-specified with a clear problem statement, examples of the current behavior, and a comparison with the expected behavior as seen in NumPy. len returns 0 for rank-0 arrays when it should return 1.\n- There are no significant gaps in the issue description. The examples and comparison provided make it clear what the problem is and what the expected behavior should be.",
        "false_negative":0,
        "false_negative_notes":"- The tests directly check that len(rank_zero_array) returns 1, aligning with the expected behavior as described in the issue.\n- The tests also verify the shape, rank, and indexing behavior of rank-0 arrays, making sure that they work correctly and return the expected values.\n- Any valid solution that makes sure, that the length of rank-0 arrays returns 1 and indexing works correctly, would pass all provided tests. Therefore, tests cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":26,
        "false_negative_decided_by":26,
        "other_major_issues_decided_by":26,
        "difficulty_decided_by":"[26, 13, 23]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-17084",
        "underspecified":1,
        "underspecified_notes":"The issue describes a problem encountered after upgrading to Django 4.2, where using aggregates over Window functions in ORM queries results in a psycopg2.errors.GroupingError. However, the description lacks details on the expected behavior and does not provide sufficient context on what might have changed in Django 4.2 to cause this issue. So far this reason I would rate it as 1. ",
        "false_negative":0,
        "false_negative_notes":"The tests added in the test patch directly address the issue described: ensuring that aggregates over Window functions in Django ORM queries do not result in errors. So i would rate it as 0. \n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":60,
        "false_negative_decided_by":60,
        "other_major_issues_decided_by":60,
        "difficulty_decided_by":"[60, 5]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20241028_agentless-1.5_gpt4o",
            "20240820_honeycomb"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-12262",
        "underspecified":1,
        "underspecified_notes":"The issue the TemplateSyntaxError which occurs when keyword-only arguments with defaults are provided to a custom simple tag or inclusion tag. There are some blanks to fill in but there is sensible interpretation of what constitutes a solution.",
        "false_negative":1,
        "false_negative_notes":"The test would work for most solutions but might fail for some unusual solutions that changes the default exception messages.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":58,
        "false_negative_decided_by":56,
        "other_major_issues_decided_by":58,
        "difficulty_decided_by":"[58, 63, 56]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20241028_solver",
            "20241007_nfactorial"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-12713",
        "underspecified":1,
        "underspecified_notes":"There are some blanks to fill in about the issue though there is a sensible interpretation of what is required for a successful solution. It is clear that when the widget keyword argument is set to a value, it is not used because the source code in django assigns something else to the widget argument in the function. The solution is to get or set the value of the widget argument in that if the widget value is passed in by the user, then that value is used, otherwise the source code gives it a value from the code.",
        "false_negative":0,
        "false_negative_notes":"The tests cover perfectly all possible solutions. The issue is straightforward to use the value set for the widget in the `formfield_for_manytomany`. Otherwise use the default from the code. The test covers this scenario perfectly.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":58,
        "false_negative_decided_by":58,
        "other_major_issues_decided_by":58,
        "difficulty_decided_by":"[56, 52]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":19,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241025_composio_swekit"
        ],
        "empiric_difficulty":0.47,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-15599",
        "underspecified":0,
        "underspecified_notes":"The issue gave all the code that needs to be changed and also with the functions. Thus, the engineer just needs to implement them.",
        "false_negative":0,
        "false_negative_notes":"The test cases will cover all the possible solutions. One test cases were given in the issue description only. The others are also similar to it.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":2,
        "false_negative_decided_by":2,
        "other_major_issues_decided_by":2,
        "difficulty_decided_by":"[39, 55]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-14248",
        "underspecified":1,
        "underspecified_notes":"The issue description outlines a problem with how SymPy prints matrix expressions, specifically with the difference of matrices. It states that expressions are printed as a sum with (-1) as the coefficient for negative values; for example, a-b is printed as a + (-1).b instead of the expected a - b. The issue description includes code to reproduce the error, showing the outputs of three printers (str, pprint, latex). However it does not provide the details on expected outputs and behavior (including ordering) for these printers, which would have provided more context to the developer.\n",
        "false_negative":1,
        "false_negative_notes":"The test patch addresses the issue by adding new tests for SymPy output printers, including Latex, pprint, and str printers. These tests directly check the expected formatting of symbols and ensure that the (-1) coefficient is avoided in outputs. However, the tests also checks for multiple terms expressions (such as A*B*C - A*B - B*C) and expect a specific output string ( such as \"-A*B -B*C + A*B*C\"). There is a slight chance that some solutions might alter these ordering pattern and might not return the same order for the expression terms, which could cause them to fail these tests.\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":82,
        "false_negative_decided_by":82,
        "other_major_issues_decided_by":2,
        "difficulty_decided_by":"[23, 82]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"django__django-16136",
        "underspecified":1,
        "underspecified_notes":"- The issue mentioned is that when a GET request is made to a view that only has an asynchronous POST method defined it causes the server to crash with a 500 error.\n- Django's error handling mechanism incorrectly attempts to use `HttpResponseNotAllowed` in an `await` expression, which is not allowed.\n- It has provided the code on how to reproduce the error and the detailed error traceback.\n- There lack of some description about what needs to be done but a sensible interpretation can be easily made to fix the issue instead of 500 errors it has to show the appropriate method not allowed error.",
        "false_negative":0,
        "false_negative_notes":"- The test code is verifying whether the `http_method_not_allowed` handler in Django views responds correctly.\n- It ensures that the method correctly handles both synchronous and asynchronous views and also verifies that the appropriate HTTP response is given for unsupported methods.\n- The test code is correctly written and should cover all possible solutions, there are no additional cases that can cause missing the solution.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":66,
        "false_negative_decided_by":66,
        "other_major_issues_decided_by":66,
        "difficulty_decided_by":"[66, 32]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":10,
        "solved_by":[
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.72,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-9281",
        "underspecified":1,
        "underspecified_notes":"- The issue described involves the rendering of Python Enum values when using Sphinx. Specifically, when Enum values are used as default arguments in function signatures. The author expects `Enum` values to be rendered cleanly in function signatures, for example, as `MyEnum.ValueA`. However, Sphinx renders them with additional details, such as `<MyEnum.ValueA: 10>`, which is considered ugly and cluttered by the author. The issue occurs with Python version 3.9.5 and Sphinx version 4.0.2, using the `autodoc` extension. \n- The author provided a link to an external git repo and provided steps to reproduce the issue. It is unclear how the user is invoking\/printing the enum without accessing the file. Function `ugly_enum_func` is also not accessible. Hence, the is issue is mostly clear, but there are some blanks to be filled related to the method of invoking the enum.",
        "false_negative":1,
        "false_negative_notes":"The test case provided checks that the object_description function correctly formats an Enum values as EnumClassName.EnumValueName, but it could have ensured Enum with different value types, ensuring non-Enum objects are correctly handled. Hence, rating it 1.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":19,
        "false_negative_decided_by":2,
        "other_major_issues_decided_by":2,
        "difficulty_decided_by":"[2, 19, 52]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":6,
        "solved_by":[
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240824_gru",
            "20240820_honeycomb",
            "20241007_nfactorial",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.83,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-11964",
        "underspecified":1,
        "underspecified_notes":"While the issue description is clear about the problem and the expected behaviour via test cases but it doesn't specify whether the solution should involve changes to the __str__ method, modifications in the model field implementation, or another approach leaving room for interpretation.",
        "false_negative":0,
        "false_negative_notes":"The test test_str iterates through different enum classes (Gender, Suit, YearInSchool, Vehicle) and verifies that the string representation matches the member's value ensuring that various cases are tested, not just a single scenario.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":32,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":32,
        "difficulty_decided_by":"[54, 19]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":3,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20241028_agentless-1.5_gpt4o",
            "20241016_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.92,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-25332",
        "underspecified":0,
        "underspecified_notes":"The issue is that 'align_labels()' uses weak references which can't be pickled. So the expected outcome is that the figure should be successfully pickled without errors. The issue is well-specified and it is clear what is required for a successful solution.",
        "false_negative":1,
        "false_negative_notes":"The tests modifies the code of `_generate_complete_test_figure` function to test handling of `_align_label_groups` Groupers while pickling happens. After analyzing, it is clear that the `align_label` is responsible for throwing the error while pickling and fixing that is the only reasonable solution.  However, there can be some unusual solutions, like removing the `align_label` line altogether to get the pickling done with some side effects. So, rating this as 1. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":59,
        "false_negative_decided_by":73,
        "other_major_issues_decided_by":59,
        "difficulty_decided_by":"[59, 73]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":6,
        "solved_by":[
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240620_sweagent_claude3.5sonnet",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241007_nfactorial",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.83,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-13516",
        "underspecified":0,
        "underspecified_notes":"During the `migrate` command in Django, `flush()` on `stdout` and `stderr` doesn't work properly, delaying relevant information until the migration completes. This results in only the initial status being printed, with no updates until the end when the final status is flushed all at once. The expected behavior is for status updates to print progressively during the migration.\n\nThe issue clearly described the problem, expected behavior, and current behavior, which helps the developer understand what needs to be fixed.",
        "false_negative":1,
        "false_negative_notes":"A solution using a custom output wrapper that automatically flushes after each write would resolve the issue but fail the test, as the test specifically checks for an explicit `flush()` call on `stdout`, which the wrapper avoids by handling flushing internally.\n\nThe tests check if `flush()` is called, but they might miss some unusual cases.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":14,
        "false_negative_decided_by":14,
        "other_major_issues_decided_by":14,
        "difficulty_decided_by":"[14, 35]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":20,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.44,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-16662",
        "underspecified":1,
        "underspecified_notes":"The issue description outlines a problem when Django generates new migration files, where it sorts modules by module, not respecting the order defined by Django's coding style or `isort` defaults.\nThe issue description provides an example of the generated migration file with incorrectly sorted imports.\nIt also provides an example showing expected behavior that aligns with Django's coding style and `isort` defaults; specifically, all `import module` statements should precede `from module import objects` statements within each section of imports.\nHowever, the issues description states that \"Newly generated migrations can fail isort for this reason.\", from this, it is not clear if migrations fail `isort` checks. More over, it does not provide an actual case that can be used to recreate the problem.",
        "false_negative":0,
        "false_negative_notes":"The updated tests add `import time` to a migration and verify that imports are correctly ordered, placing `import` statements before `from ... import ...` statements. The test checks for the sequence `import datetime\\nimport time\\nfrom django.db import migrations, models\\n` in the output.\n\nThe tests cover all successful solutions by targeting the core functionality mentioned in the issue.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":57,
        "false_negative_decided_by":14,
        "other_major_issues_decided_by":14,
        "difficulty_decided_by":"[57, 24]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":22,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.39,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-13647",
        "underspecified":1,
        "underspecified_notes":"The issue is clear and well specified along with the given examples, but it could be better if a possible solution is provided along with the location of the issue.\nSo, for this reason, I will give this section a rating of 1.",
        "false_negative":0,
        "false_negative_notes":"The PR corrects an error in the `col_insert` method of the SymPy matrix module by adjusting the indexing logic for inserting columns. Specifically, it changes the index calculation from `self[i, j - pos - other.cols]` to `self[i, j - other.cols]`, ensuring correct placement of the elements during column insertion. Additionally, new test cases were added to verify this fix, including a test for inserting a 6x2 matrix of twos into a 6x6 identity matrix, which previously resulted in an incorrect shift of the identity matrix elements.\n\nThe tests perfectly cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":10,
        "false_negative_decided_by":20,
        "other_major_issues_decided_by":20,
        "difficulty_decided_by":"[20, 54]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":19,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.47,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-16454",
        "underspecified":0,
        "underspecified_notes":"The issue clearly describes that Django management command subparsers do not retain the error formatting provided by the `CommandParser` class, which is a subclass of `argparse.ArgumentParser`. The missing arguments for subparsers, created via `CommandParser.add_subparsers().add_parser()`, result in stack traces on the command line interface instead of user-friendly error messages. The user wants to correct this issue by ensuring that the subparser action returned by `add_subparsers()` copies the relevant arguments to the constructed subparsers, thereby improving error formatting and providing clearer usage messages.",
        "false_negative":0,
        "false_negative_notes":"The tests `test_subparser_error_formatting` and `test_subparser_non_django_error_formatting` verify the error formatting for invalid integer arguments in subparser commands, ensuring that the error messages are clear and correctly formatted.\nThe tests are testing exactly the issue being raised and I cannot think of any other solution that might fail the tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":44,
        "false_negative_decided_by":44,
        "other_major_issues_decided_by":44,
        "difficulty_decided_by":"[44, 3]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-19346",
        "underspecified":1,
        "underspecified_notes":"The issue is clear and example code with outputs is provided as well. Though it would be better if the description specified the expected output rather than expecting the developer to understand themselves (it is logical to guess that it should print Symbol('x') instead of x but still it shouldn't leave anything to guess)",
        "false_negative":0,
        "false_negative_notes":"Tests cover the solution and the expected outcome (even though it is not properly specified) of the issue raiser. Since it is a high level test (calls the function instead of internal _print or doprint functions) it should work on other solutions as well.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":91,
        "false_negative_decided_by":91,
        "other_major_issues_decided_by":91,
        "difficulty_decided_by":"[23, 10]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":17,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.53,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-25311",
        "underspecified":1,
        "underspecified_notes":"The issue states a problem and gives a code example to draw out the same error, but it does not give any insight or explanation into why the error might be happening. The expected objective for the solution is clear: to be able to pickle a figure with draggable elements (legends, annotations etc). However, there is no info about whether the problem is in pickling or some property of the draggable elements.",
        "false_negative":0,
        "false_negative_notes":"The test checks that the pickled data does not contain any references to 'FigureCanvasAgg' ensuring the figure is independent of the GUI toolkit and is picklable. The tests perfectly cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":31,
        "false_negative_decided_by":59,
        "other_major_issues_decided_by":59,
        "difficulty_decided_by":"[59, 13]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240820_epam-ai-run-gpt-4o"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-13449",
        "underspecified":1,
        "underspecified_notes":"Issue description is clear due to following aspects\n1. Title clearly summarizes the use case when problem occurs: \"Lag() with DecimalField crashes on SQLite\"\n2. Version of Django is shared and a code snippet to reproduce the error is shared. \n3. Detailed traceback is shared which will help the agent to figure out what is going wrong in current codebase.\n4. This involves SQLite DB and the generated SQL query for the example code is also shared. \n5. Eventually, clearly highlights that this problem appears only if `DecimalField` is used from the model `LagTest` and not if other \n\ttypes of fields are used. Then shares example with `FloatField` `data` from `LagTest` class and clearly points out that there is no \n\terror in that case. \n6. Also points out an additional way of overriding the error for `DecimalField` by using `output_field` as `FloatField`.\nHowever,\nThe issue description does not share an expected outcome after the fix. There is no narration about it and even the current output of working \n`FloatField` example is not shared. Thus, no pointers are given towards what a fix should achieve. \nStill, it can be sensibly assumed that the fix should make the error go away and create an output similar to `FloatField`. The agent will have \nto run some trials to understand current behavior with `FloatField` and then ensure `DecimalField` provides similar output.\nThus, there are some minor blanks but it is understood what needs to be fixed.",
        "false_negative":1,
        "false_negative_notes":"The tests cover the majority of correct solutions; however, some unusual solutions may be missed.\n\nThe test test_lag_decimalfield is specifically designed to validate that the Lag function works with DecimalField, which is the core issue described.\nIt effectively tests the expected behavior for the specific solution involving casting to FloatField.\nHowever, the test may not cover all possible solutions that might resolve the issue differently (e.g., a solution that does not involve casting to FloatField). ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":71,
        "false_negative_decided_by":80,
        "other_major_issues_decided_by":79,
        "difficulty_decided_by":"[71, 80]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"django__django-11333",
        "underspecified":0,
        "underspecified_notes":"The issue description clearly explains the problem (abnormal creation of Multiple URLResolvers), why it is problematic, and what the expected behavior should be. Beside, this is a feature optimization that help remove redundancy in expensive storage caused by the abnormal Multiple URLResolvers instances. The proposed solution is very clear and something anyone can take on to fix the issue.",
        "false_negative":1,
        "false_negative_notes":"The Test Patch adds a new test class ResolverCacheTests with a single test method test_resolver_cache_default__root_urlconf. \nThe test uses the override_settings decorator to set the ROOT_URLCONF to a specific value, which is a good practice to ensure the test is isolated and reliable.\nHowever, I wouldn't rate the tests as perfect (0) because they don't cover some edge cases, such as:\nWhat happens if get_resolver is called with an invalid or non-existent urlconf argument?",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":16,
        "false_negative_decided_by":40,
        "other_major_issues_decided_by":16,
        "difficulty_decided_by":"[81, 40]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20241028_agentless-1.5_gpt4o",
            "20240924_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-15930",
        "underspecified":0,
        "underspecified_notes":"- The issue description states that the `Case()` function crashes when `~Q(pk__in=[])` is used as its argument.\n- It notes that the crash occurs due to a syntax error.\n- The description includes sample code to replicate the issue, along with the resulting error message and SQL query.\n- It also specifies the expected behavior, which is to annotate all rows with the value `True` since they all match.",
        "false_negative":0,
        "false_negative_notes":"- The test patch introduces a new test function, `test_annotate_with_full_when`, which checks whether entire records are being pulled.\n- The test operates independently and works for any solution being implemented.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":3,
        "false_negative_decided_by":3,
        "other_major_issues_decided_by":3,
        "difficulty_decided_by":"[3, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":7,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240924_solver",
            "20240820_honeycomb",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.81,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-11603",
        "underspecified":1,
        "underspecified_notes":"the ticket is clear. it asks for adding the distinct support for the Avg and Sum aggregates. the ticket has also asked for the same support for the min and max functions which as the ticket mentioned pointless. For that a software developer would choose to ignore them.",
        "false_negative":0,
        "false_negative_notes":"The `test_distinct_on_aggregate` method verifies the DISTINCT functionality for `Avg` and `Sum` aggregates on the `rating` field of the `Book` model, ensuring the expected results of 4.125 and 16.5, respectively. It uses `self.subTest` to isolate issues and validate core functionality, covering all successful scenarios.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":7,
        "false_negative_decided_by":14,
        "other_major_issues_decided_by":14,
        "difficulty_decided_by":"[14, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":27,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.25,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-17029",
        "underspecified":1,
        "underspecified_notes":"- The issue describes a problem where `Apps.clear_cache()` does not clear the `get_swappable_settings_name` cache.\n- It mentions that `django-stubs` uses `apps.clear_cache()` to reset the state for consecutive `mypy` runs, but Django does not clear all object caches because `get_swappable_settings_name`, which is a `functools._lru_cache_wrapper`, is not cleared.\n- The `clear_cache` documentation states, \"Clear all internal caches, for methods that alter the app registry,\" but this does not clear `get_swappable_settings_name`, which is incorrect.\n- It proposes adding `self.get_swappable_settings_name.cache_clear()` to `def clear_cache`, but it is seeking for confirmation for it.\n- It also provides a link to the original discussion, which is not helpful as it is an external link.\n- Since it is not confirmed whether to implement the proposed solution, the issue description deserves a rating of 1.",
        "false_negative":0,
        "false_negative_notes":"- The new test function `test_clear_cache` verifies that `get_swappable_settings_name` is cleared when calling `apps.clear_cache()`, which aligns with the issue description.\n- The test function does not depend on the specific solution being implemented.\n- Therefore, it should cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":3,
        "false_negative_decided_by":3,
        "other_major_issues_decided_by":3,
        "difficulty_decided_by":"[3, 17, 6]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":27,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20231010_rag_swellama7b",
            "20240820_epam-ai-run-gpt-4o",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.25,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-9591",
        "underspecified":0,
        "underspecified_notes":"The issue is that Sphinx is not automatically cross-referencing type annotations of properties in classes within the generated documentation.\n\nIt's clear what needs to be done.",
        "false_negative":1,
        "false_negative_notes":"The test patch seems to be testing the reasonable solutions. However, there is some unusual solution that might not be using `pending_xref`. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":35,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":35,
        "difficulty_decided_by":"[35, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":3,
        "solved_by":[
            "20240920_solver",
            "20240824_gru",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.92,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-15572",
        "underspecified":1,
        "underspecified_notes":"In Django versions greater than 3.2.3, the way template directories (DIRS) are handled changed due to normalization using `pathlib.Path`. This change causes issues when `TEMPLATES_DIRS` contains an empty string, which breaks the autoreload functionality. An invalid configuration like `\"DIRS\": os.getenv(\"TEMPLATES_DIRS\", \"\").split(\",\")` can lead to `\"DIRS\": ['']`, causing the autoreload to stop working.\n\nEven though it is not explicitly mentioned what a successful solution would look like, it can be interpreted as proposing a solution to filter out empty values: `\"DIRS\": filter(None, os.getenv(\"TEMPLATES_DIRS\", \"\").split(\",\"))`.",
        "false_negative":0,
        "false_negative_notes":"The test `test_template_dirs_ignore_empty_path`,  verifies that Django's autoreload functionality correctly ignores empty strings in the `DIRS` setting of `TEMPLATES`. By ensuring `get_template_directories()` returns an empty set when `DIRS` contains an empty string, it confirms the fix works as intended. This prevents the issue where autoreload stops working due to an empty string being normalized to the project root. The test is perfect and covers all the possible solutions. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":17,
        "false_negative_decided_by":17,
        "other_major_issues_decided_by":17,
        "difficulty_decided_by":"[17, 37, 14]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":17,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.53,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-14534",
        "underspecified":0,
        "underspecified_notes":"- The issue description states that `BoundWidget.id_for_label` ignores the ID set by `ChoiceWidget.options`.\n- It includes relevant code snippets from the `BoundField` and `BoundWidget` classes to illustrate the problem.\n- The issue description proposes modifying the `id_for_label` method of `BoundWidget` as a solution.\n- It also mentions that this issue only occurs with the subwidget of the `CheckboxSelectMultiple` widget type.\n- The issue description is well-detailed and clearly outlines what needs to be done.",
        "false_negative":0,
        "false_negative_notes":"- The newly added test function `test_boundfield_subwidget_id_for_label` doesn't depend on external factors like variables or error messages.\n- Therefore, the test should perfectly cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":3,
        "false_negative_decided_by":3,
        "other_major_issues_decided_by":3,
        "difficulty_decided_by":"[3, 17, 14]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-12193",
        "underspecified":1,
        "underspecified_notes":"- The issue description identifies that SplitArrayField BooleanField widgets become checked incorrectly after the first True value, and specifies the responsible method (CheckboxInput's get_context()) and links to the relevant code line.\n- The issue mentions the problem occurs when providing preexisting data and provides a direction to investigate the issue in the codebase by providing a link to the line of code.\n- However, it lacks specific examples to reproduce the issue and the expected output which is implied in this case, leaving some details for the developer to determine.\n- Therefore, the problem is clear but there are some blanks to fill in about the issue.",
        "false_negative":1,
        "false_negative_notes":"The tests validate that CheckboxInput's get_context method does not mutate the attrs dictionary and that SplitArrayWidget correctly initializes checkbox attributes without carrying over previous values. This ensures proper behavior and prevents unintended attribute modifications.\nIt will work correctly for the gold patch but may fail for some unusual solutions, like changing the flow.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":26,
        "false_negative_decided_by":24,
        "other_major_issues_decided_by":24,
        "difficulty_decided_by":"[24, 26, 14]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":18,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.5,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"sympy__sympy-24443",
        "underspecified":1,
        "underspecified_notes":"The `_check_homomorphism` function is broken for `PermutationGroups` in SymPy. When trying to create a homomorphism for a Dihedral group using its generators, it incorrectly raises a `ValueError` indicating that the given images do not define a homomorphism. The issue lies in the `_image()` function, which incorrectly handles inverted generators due to a flawed membership test (`in gens`). This problem likely requires simplifying the logic to correctly identify and process inverted generators within `PermutationGroups`.\n\nEven though the last line cast some doubts about what the user meant by \"greatly simplified\", we still have a sense of what the solution will look like which is fixing `_check_homomorphism`.",
        "false_negative":0,
        "false_negative_notes":"The test patch tests the code raising error in the description with the expectation that it won't raise `ValueError`, so if the issue is fixed then the test must be passed, hence the test covers all possible solution.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":28,
        "false_negative_decided_by":28,
        "other_major_issues_decided_by":28,
        "difficulty_decided_by":"[28, 9, 12]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":24,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240820_epam-ai-run-gpt-4o",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.33,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"pytest-dev__pytest-5262",
        "underspecified":0,
        "underspecified_notes":"The issue is described in  a clear manner - the write() method from Youtube-dl raises an exception when passed bytes. This behaviour is pinpointed to Youtube-dl looking for b in out.mode to decide whether to writes bytes or str. So the solution should be clear to fix the error.",
        "false_negative":0,
        "false_negative_notes":"The tests check for the situation described in the issue statement, by checking if \"b\" is not in the output anymore. As this was causing the error, I believe all new solutions should be able to pass the tests because they address the element causing the error. I don't think some other unusual way of solving the issue would work and fix the issue correctly",
        "other_major_issues":0,
        "other_notes":"No other issues with the task",
        "difficulty":"<15 min fix",
        "underspecified_decided_by":53,
        "false_negative_decided_by":53,
        "other_major_issues_decided_by":53,
        "difficulty_decided_by":"[15, 78]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":8,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240924_solver",
            "20240820_honeycomb",
            "20241028_solver",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.78,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-15380",
        "underspecified":1,
        "underspecified_notes":"The issue occurs when using Django's migration autodetector to rename a model and a field simultaneously. This process crashes, producing a `KeyError` during the migration creation step (`makemigrations`), specifically when generating renamed fields. The error message indicates that the new model state for the renamed model cannot be found in the migration state dictionary, leading to the crash.\n\nThe issue description does not provide an explicit expected solution or propose anything to fix the problem, but from the description and the error, we can interpret that it can be addressed by ensuring the autodetector correctly updates its internal state to reflect the new model and field names, allowing it to generate the appropriate migration operations without errors.\n",
        "false_negative":0,
        "false_negative_notes":"The test patch introduces a new test case, `test_rename_field_with_renamed_model`, which verifies that the migration autodetector can correctly handle the simultaneous renaming of a model and a field.\n\nIt simulates a scenario where both a model (`Author`) and one of its fields (`name`) are renamed to `RenamedAuthor` and `renamed_name`, respectively. This directly corresponds to the issue where the autodetector failed to handle such simultaneous renaming operations.\n\nIt checks that the autodetector generates a single migration for the `testapp` with the expected operations: `RenameModel` and `RenameField`. This ensures that the autodetector correctly identifies and processes both renaming operations.\n\nThe tests perfectly covers all the possible solutions.\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":17,
        "false_negative_decided_by":17,
        "other_major_issues_decided_by":17,
        "difficulty_decided_by":"[17, 58]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":14,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.61,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-14434",
        "underspecified":1,
        "underspecified_notes":"The issue describes a problem with the '_create_unique_sql' function which incorrectly sets references_column to false. This occurs because an instance of table is passed as an argument to columns when a string is expected. This means that in the function _create_unique_sql, there is a mismatch in the expected argument types for Columns, leading to incorrect behavior. The expected behavior does not explicitly mentions the context or explanation of what 'references_column' should do or represent. However it can be interpreted that the 'Table' instance should be converted or replaced with a string as intended for references_column to be correctly set. Hence a score of 1 is appropriate.",
        "false_negative":0,
        "false_negative_notes":"- The new test function `test_unique_constraint` validates that unique constraints are working properly and `references_column` to be `True`, which is exactly what the issue description is addressing.\n- It also doesn't depend on the specific solution being implemented.\n- Therefore, it should cover all possible solutions effectively.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":6,
        "false_negative_decided_by":3,
        "other_major_issues_decided_by":3,
        "difficulty_decided_by":"[3]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":10,
        "solved_by":[
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240824_gru",
            "20240924_solver",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.72,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-13028",
        "underspecified":1,
        "underspecified_notes":"The problem is identified as a NotSupportedError when filtering ProductMetaData with a metadata_type having a filterable=False attribute and suggests renaming the field from filterable to filterable_test fixes the issue but does not clearly explain why this occurs leaving room for interpretation.",
        "false_negative":1,
        "false_negative_notes":"- Testcases are added for both the cases: first, when `filterable=False` and second, when `filterable=True`. A test function then asserts whether the filtered objects list is equal to `[self.a3, self.a4]` defined earlier. \n- The ambiguity arises from the issue description itself. But the probability of this resulting in a documentation fix is very less. The tests might miss some unusual solutions like using `filterable_test` instead of `filterable` which is a highly unlikely solution as the `filterable` attribute might be used in various places and it would be safer to just handle the part when it evaluates to `False`.  So, rating it 1. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":32,
        "false_negative_decided_by":19,
        "other_major_issues_decided_by":49,
        "difficulty_decided_by":"[49, 32]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":13,
        "solved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.64,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-14631",
        "underspecified":0,
        "underspecified_notes":"The issue description clearly specifies the tasks of modifying BaseForm's _clean_fields() and changed_data to access values through BoundField for consistency, and proposes refactoring the logic of `changed_data` into a method within the `BoundField `class, named `did_change`, to streamline and simplify the implementation.",
        "false_negative":0,
        "false_negative_notes":"The tests precisely check the functionality detailed in the issue description, confirming that the changes to how values are accessed via BoundField and the implementation of the changed_data method perform as expected.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":4,
        "false_negative_decided_by":4,
        "other_major_issues_decided_by":4,
        "difficulty_decided_by":"[4, 5]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20241022_tools_claude-3-5-haiku",
            "20241002_lingma-agent_lingma-swe-gpt-7b"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_0"
    },
    {
        "instance_id":"django__django-15103",
        "underspecified":1,
        "underspecified_notes":"The issue description is clear in its core request: making the `element_id` argument of the `json_script` function optional. This indicates that the task involves modifying the function’s definition to support cases where the `element_id` is not provided. However, some details are left unspecified, such as the exact behaviour of the function when `element_id` is omitted. So, it should be rated as 1.",
        "false_negative":0,
        "false_negative_notes":"The tests are accurate and articulate since they take into account the changed behavior of the json_script function, which makes 'element_id' optional, which was the primary need of the problem.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":62,
        "false_negative_decided_by":38,
        "other_major_issues_decided_by":38,
        "difficulty_decided_by":"[62, 37]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":14,
        "solved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.61,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-10554",
        "underspecified":1,
        "underspecified_notes":"The issue described revolves around problems encountered when using Django's QuerySet union() operation combined with order_by() on derived querysets. This scenario triggers errors and unexpected behavior due to the way SQL is generated by Django's ORM when handling these operations. Although the issue text didn’t provide what a solution would look like, from the example and stack trace contained in the issue description, an experience engineer can make out what a good solution would be.",
        "false_negative":1,
        "false_negative_notes":"The use of ReservedName model is inconsequential as mentioned  in the issue description (`the exact models are not relevant I think`). The test patch actually covered majority of the issue with qs union. We see how union_qs (previously formed from the union of two queryset) was evaluated for different order_by parameters (single and multiple columns) and value_list but seems to miss out order_by without any columns as in the issue description. Thus rated 1.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":56,
        "false_negative_decided_by":16,
        "other_major_issues_decided_by":16,
        "difficulty_decided_by":"[16, 80]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"sphinx-doc__sphinx-7590",
        "underspecified":1,
        "underspecified_notes":"- The issue description states that the problem is related to the parsing of C++ User Defined Literals (UDLs) in Sphinx.\n- It includes sample code to replicate the issue.\n- A link to GitHub is provided, mentioning that Sphinx doesn’t currently support UDLs.\n- The description requests support for UDLs but is uncertain about what the solution should look like, and if the support request will be accepted by maintainers.",
        "false_negative":0,
        "false_negative_notes":"The changes made in this pull request enhance Sphinx to recognize and correctly parse User Defined Literals in C++ code, allowing for accurate documentation generation. This involves updating regex patterns, adding new parsing logic, creating new AST classes for UDLs, and including comprehensive test cases to ensure the feature works as expected.\n\nAs long as the alternate solution correctly handles the parsing, representation, and documentation of UDLs in C++ code, the same tests provided in the pull request should pass. \n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":">4 hours",
        "underspecified_decided_by":3,
        "false_negative_decided_by":20,
        "other_major_issues_decided_by":20,
        "difficulty_decided_by":"[64, 3]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":3,
        "difficulty_slugged":">4_hours",
        "stratify_column":">4_hours_0"
    },
    {
        "instance_id":"pytest-dev__pytest-10081",
        "underspecified":0,
        "underspecified_notes":"-When running `pytest --pdb`, the `tearDown()` method is unexpectedly executed for `unittest.TestCase` classes marked with `@unittest.skip`\n-This behavior deviates from the expected skipping of all class methods when the `skip` decorator is applied\n-For a successful solution, the test should be skipped, as indicated by the output when running `pytest test_repro_skip_class.py` which shows the test as skipped (`s`)\n",
        "false_negative":0,
        "false_negative_notes":"The tests verify that when using `pytest --pdb`, the `setUp` and `tearDown` methods are not executed for both individual test methods and entire classes marked as skipped. The tests perfectly cover all possible solutions. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":64,
        "false_negative_decided_by":64,
        "other_major_issues_decided_by":64,
        "difficulty_decided_by":"[64, 30]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":11,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240824_gru",
            "20240924_solver",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.69,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-11119",
        "underspecified":0,
        "underspecified_notes":"The issue clearly describes a problem with the `Engine.render_to_string()` method in Django’s templating engine, where it fails to respect the `autoescape` attribute of the engine. When this method is called, it creates a Context without considering the engine’s `autoescape` setting, leading to unintended autoescaping of template output. This discrepancy results from an oversight in a specific commit and needs to be addressed by ensuring that the Context respects the autoescape attribute when rendering templates.",
        "false_negative":0,
        "false_negative_notes":"The test `test_autoescape_off` ensures that when `autoescape` is turned off in the templating engine, HTML special characters in the context are rendered as-is, without being escaped.\nSo this `'obj': '<script>'` rendered to this `obj: <script>\\n`. If the `autoescape` is turned on, the output would be `obj:&lt;script&gt;\\n`.\nThe newline char is coming from the templating engine. It's not mentioned anywhere but it's the default behaviour of Django's template engine so any other solutions won't fail the test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":44,
        "false_negative_decided_by":44,
        "other_major_issues_decided_by":44,
        "difficulty_decided_by":"[44, 14, 43]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":31,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.14,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"psf__requests-2931",
        "underspecified":1,
        "underspecified_notes":"The reported issue arises because the `requests` library in version 2.9 introduced a change where `to_native_string` was called, which is not compatible with binary payloads. This method expects a string, but in the example provided, a binary payload (`u\"ööö\".encode(\"utf-8\")`) is used, leading to a failure.\nA solution would handle this conversion correctly.\nThere is a link specified which according to the reporter introduces the problem, but it has not been explained, so this is rated as a 1.",
        "false_negative":0,
        "false_negative_notes":"The `test_binary_put` test creates a request with the same body as specified on the issue, and then asserts that it is correctly converted to a bytes object.\nThis test is equivalent to the issue mentioned and therefore is a suitable test.\nMoreover it is not tied to any implementation, so it should work for all suitable solutions.",
        "other_major_issues":0,
        "other_notes":"No issues were missed.",
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":27,
        "false_negative_decided_by":27,
        "other_major_issues_decided_by":27,
        "difficulty_decided_by":"[27, 15, 64]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":5,
        "solved_by":[
            "20241028_agentless-1.5_gpt4o",
            "20240824_gru",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.86,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"pytest-dev__pytest-7571",
        "underspecified":0,
        "underspecified_notes":"The issue description is clear and to the point: the log levels aren't getting restored after the test ends in pytest version  6.0. The author demonstrates this with two test functions. In the first function `test_foo`, caplog log level is set to 42. In the second test function `test_bar`, the handler's log level is printed. Then, the author elucidates that the output in pytest version < 6 was \"0\", but it is \"42\" now, thus establishing the bug. Hence, the issue is well-specified and a successful solution should fix this bug, or provide an explanation, if it's expected.",
        "false_negative":0,
        "false_negative_notes":"The newly added code adds three independent functions, that each act as a test function from the original description. At the start of each of these functions, we test  whether the caplog handler's log level is set to 0 using an assertion statement `assert caplog.handler.level == 0`. Since this is checked at the start of each function, we are ensuring that log levels from previous functions are not retained. Functions `test1` and `test3` set the log levels 41 and 43, which are ideally not retained after the function is executed completely. The testcases seem fine so all reasonable solutions should be able to pass.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":19,
        "false_negative_decided_by":19,
        "other_major_issues_decided_by":19,
        "difficulty_decided_by":"[19, 18]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":18,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.5,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-23299",
        "underspecified":0,
        "underspecified_notes":"- The description highlights that calling `matplotlib.get_backend()` removes all figures from `Gcf` if the first figure in `Gcf.figs` was created in an `rc_context`.\n- The description provides the code to reproduce the issue.\n- The description also states the expectation that the figure should not be missing from `Gcf`.",
        "false_negative":0,
        "false_negative_notes":"The code in the Gold Patch was updated to prevent the context manager from resetting the `:rc:backend`. This is a valid solution.\nThe Test Patch introduces a new test case to verify the `rc_context()` function as expectation.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":39,
        "false_negative_decided_by":39,
        "other_major_issues_decided_by":39,
        "difficulty_decided_by":"[39, 29]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-13142",
        "underspecified":0,
        "underspecified_notes":"- The issue description mentions a problem with the predict and fit_predict method not behaving consistently when n_init is specified in GaussianMixture.\n- Sample code is provided for better clarification.\n- Actual results are also provided to understand current behavior.\n- Overall the issue is properly described and the requirements for a solution are also quite clear.",
        "false_negative":0,
        "false_negative_notes":"- The test patch validates the behavior of predict and fit_predict methods when n_init is specified in GaussianMixture.\n- All possible solutions should be covered by this patch.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":15,
        "false_negative_decided_by":15,
        "other_major_issues_decided_by":15,
        "difficulty_decided_by":"[15, 59]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":15,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.58,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-13158",
        "underspecified":1,
        "underspecified_notes":"The problem is clear. The issue arises when changing the `queryset` from using the | (bitwise OR) operator to the `union()` method with `ModelMultipleChoiceField `. The problem description give a reproducible example which offers a good start to the programmer working on the solution. However, the language of the ticket is misleading as the user is unsure if it was a bug or not leaving a little ambiguity in the problem. ",
        "false_negative":1,
        "false_negative_notes":"The test `test_union_none` checks that the unioned queryset correctly returns an empty list when `none()` is called.\nHowever, the test additionally checks the expected numbers in the unioned queryset, but this wasn't explicitly mentioned in the issue description and some solutions might fail because of this additional test.\nIf the line `obj.combined_queries = tuple(query.clone() for query in self.combined_queries)` is not put in the solution then the first assertion, the main topic in the issue description will pass but the second one, additional, will fail.\nI think solving only the `none()` with the unioned queryset is a little bit unusual because a senior developer or Django maintainers would expect to solve it as well. So for a senior developer, the additional case should also be realized and fixed, that's why I will say some unusual solutions might be missed by the test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":7,
        "false_negative_decided_by":44,
        "other_major_issues_decided_by":44,
        "difficulty_decided_by":"[44, 35, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20240820_honeycomb",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sphinx-doc__sphinx-8120",
        "underspecified":0,
        "underspecified_notes":"The issue description is well-specified and provides a clear explanation of the problem, including what is expected and the steps to reproduce it. The problem is related to custom translations not being used despite the presence of a `sphinx.po` file in the `locale\/<language>\/LC_MESSAGES\/` directory. The description also mentions the creation of a `sphinx.mo` file and the configurations in `conf.py`. It includes a detailed example project, expected behavior, actual behavior, and environment details. ",
        "false_negative":0,
        "false_negative_notes":"The test verifies that Sphinx correctly converts a custom translation from a `.po` file to a `.mo` file and confirms that the translated text is displayed in the generated HTML. This test directly addresses the issue at hand. Any solution that resolves the issue should successfully pass this test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":13,
        "false_negative_decided_by":13,
        "other_major_issues_decided_by":13,
        "difficulty_decided_by":"[13, 35, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":7,
        "solved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240824_gru",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.81,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-24177",
        "underspecified":0,
        "underspecified_notes":"The issue is well described, it highlights the fact the when using density=true and histtype=\"step\", the autoscaling does not work as expected and the rescaling also affects the y axis, when it should only impact the x axis values. This does not happen with any other histtypes.\nThe issue should be thus clear to solve",
        "false_negative":0,
        "false_negative_notes":"The tests cover the reasonable cases, that a correct solutions should be able to pass. It checks a number of paths with small values and makes sure that the x and y limits are set correctly. Hence the label 0",
        "other_major_issues":0,
        "other_notes":"No other issues with the task",
        "difficulty":"<15 min fix",
        "underspecified_decided_by":53,
        "false_negative_decided_by":53,
        "other_major_issues_decided_by":53,
        "difficulty_decided_by":"[62, 58]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-8269",
        "underspecified":0,
        "underspecified_notes":"The issue description for the Sphinx linkcheck bug is comprehensive, providing a clear understanding of the problem—misreporting HTTP errors as anchor not found. It includes a step-by-step guide to reproduce the error, specifying the necessary commands to set up a Sphinx project and simulate the bug. The comparison between actual and expected outputs is well-defined, highlighting the specific discrepancy in error reporting.",
        "false_negative":1,
        "false_negative_notes":"the tests provided mainly focus on a specific scenario involving an HTTP 500 error, effectively assessing the primary functionality of the patch. This scenario is critical and directly relevant to the reported issue, ensuring that significant HTTP errors are not misrepresented as anchor errors. However, the tests could be expanded to cover a wider range of HTTP errors, such as 404 Not Found, to ensure that the patch handles all relevant error cases, not just server errors. While the existing tests should validate most reasonable solutions to the problem, they might miss edge cases or less common HTTP error scenarios that could also impact the functionality.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":37,
        "false_negative_decided_by":37,
        "other_major_issues_decided_by":37,
        "difficulty_decided_by":"[37, 76, 15]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":12,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240820_honeycomb",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.67,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-16819",
        "underspecified":1,
        "underspecified_notes":"- The issue description suggests that the number of AddIndex\/RemoveIndex operations should be reduced when optimizing migration operations.\n- It describes the problem in general terms but does not provide specific scenarios or examples illustrating the issue. The issue lacks context on the current implementation of migration operations and how AddIndex and RemoveIndex are handled.\n- There are some blanks to fill in about the issue, but there is a sensible interpretation of what is required for a solution.",
        "false_negative":0,
        "false_negative_notes":"- The test specifically covers the issue described, ensuring that redundant AddIndex and RemoveIndex operations are optimized out and verifies that the optimization process correctly identifies and removes the redundant operations.\n- Since the issue specifically requires optimizing out redundant AddIndex and RemoveIndex operations and the tests are designed to verify that the fix works correctly, any reasonable solution should involve modifying the optimization process to handle these operations.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":26,
        "false_negative_decided_by":26,
        "other_major_issues_decided_by":26,
        "difficulty_decided_by":"[26, 32, 14]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":14,
        "solved_by":[
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.61,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-15128",
        "underspecified":1,
        "underspecified_notes":"The issue description provides a clear problem statement and reproduction steps for an AssertionError during the operation of two Django QuerySets, specifying the file and line number involved. The author suggests a potential solution involving alias mapping in Query.join and Query.table_alias to prevent key-value intersections in the change_map. While the description is detailed, the exact implementation details and test cases are not fully specified, requiring further interpretation and exploration by the engineer addressing the issue.",
        "false_negative":1,
        "false_negative_notes":"The tests are well-designed to cover the primary aspects of the issue. The test test_conflicting_aliases_during_combine specifically checks the scenario where conflicting aliases may occur during query set combination, which aligns well with the issue description. It ensures that the combined query results are as expected, addressing the core of the problem. While the test focuses on the expected behavior, it may not cover some unusual solutions like dynamic alias mapping, which resolves conflicts only when necessary, or implementing an alias tracking system that maintains a global registry to prevent conflicts proactively,  creating a custom query combining mechanism that avoids traditional alias mapping by restructuring how query sets are merged, temporary tables to reset alias usage during query combinations could simplify alias management, while an enhanced ORM layer might intelligently predict and avoid alias conflicts.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":80,
        "false_negative_decided_by":80,
        "other_major_issues_decided_by":3,
        "difficulty_decided_by":"[3, 80, 12]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":7,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240924_solver",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.81,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"django__django-13569",
        "underspecified":0,
        "underspecified_notes":"The issue is generally well-described, outlining the unexpected behavior when using order_by('?') with queryset aggregation. It includes detailed steps to reproduce the problem, an example of the erroneous SQL query generated, and a proposed patch to the SQL compiler hence choice 0 is selected.",
        "false_negative":0,
        "false_negative_notes":"The test provided is focused on ensuring that Random() is not included in the GROUP BY clause when used for ordering in an aggregation context. Since it can only be avoided by excluding the random() it will work on all possible correct solutions so choice 0 is selected.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":48,
        "false_negative_decided_by":48,
        "other_major_issues_decided_by":48,
        "difficulty_decided_by":"[48, 39]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":13,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241016_epam-ai-run-gpt-4o",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.64,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-13852",
        "underspecified":1,
        "underspecified_notes":"The first issue is that `polylog.expand(func=True)` does not expand a polylog expression, while `expand_func(polylog())` with other parameters works correctly. The second issue involves the derivative of `polylog(1, z)` using `expand_func`, which gives an incorrect result due to the unnecessary and misleading `exp_polar(-I*pi)`.\n\nThe suggested solution for the first issue is to use `expand_func()` to calculate `polylog()`. Although not explicitly stated, the second issue can be resolved by expressing `expand_func(polylog(1, z))` in terms of `log` instead of `exp_polar`. Therefore, I rate it a 1, as the resolution is not explicitly mentioned.",
        "false_negative":1,
        "false_negative_notes":"test_polylog_expansion() addresses the second issue of the expand_func(polylog(1,z)) and some asserting in the test_polylog_values() address the first issue.\nThis is rated 1 because some unusual solution not expected may be missed especially as with the introduction of S value (Though S values has an equivalent number representation ) in test_polylog_values() and z expressed in complex number format (` z = random.uniform(-5, 5) + I*random.uniform(-5, 5)`)",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":16,
        "false_negative_decided_by":16,
        "other_major_issues_decided_by":21,
        "difficulty_decided_by":"[21, 16, 45]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"sympy__sympy-13798",
        "underspecified":1,
        "underspecified_notes":"The issue description states that - \n- The `latex()` pretty-printing function accepts a `mul_symbol` kwarg that must be one of four choices.\n- The engineer wants to pass custom choice in mul_symbol kwarg which is not present in the list, specifically `\\,`.\nThe issue description also shows the expected behaviour through a code snippet.\nThe root cause of the current restriction, resulting in the issue, is not clear. However, a sensible interpretation can be made about the expected behavior. ",
        "false_negative":1,
        "false_negative_notes":"1. The test `test_latex_basic` checks the function `latex()` for two expressions.\n2. The first expression is same as the one described in issue. And it correctly checks if thinspace '\\\\,' is allowed as input for `mul_symbol`.\n3. Second expression being tested is '1.5*3**x'. It checks for multiplication symbol between two number values. Here, even though the input for `mul_symbol` parameter is '\\\\,', the output is expected to have '\\cdot'. This was not discussed in the issue description. However, having space in between two numbers being multiplied is misleading and any reasonable solution would replace it with some other symbol. The earlier version of codebase preferred '\\cdot' in case of `mul_symbol=None` input which represented a space. Thus, a reasonable solution would implement same behavior for thinspace.  But some unusual solution may use other symbols or even allow use of space between two numbers. Thus, such unusual solutions would fail the second assert statement.\nHence, marked as 1.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":8,
        "false_negative_decided_by":71,
        "other_major_issues_decided_by":13,
        "difficulty_decided_by":"[13, 8, 71]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20240402_sweagent_gpt4"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sympy__sympy-24213",
        "underspecified":1,
        "underspecified_notes":"The issue description is somewhat vague and could use further clarification. However, for someone familiar with the package, the example code does point out the issue (addition fails to see that acceleration*time is equivalent to velocity). The expected outcome is implicit within the title: the function should detect equivalent dimensions in addition.",
        "false_negative":0,
        "false_negative_notes":"The tests perfectly cover the issue highlighted in the issue description. Any successful solution would have to pass them.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":31,
        "false_negative_decided_by":31,
        "other_major_issues_decided_by":31,
        "difficulty_decided_by":"[31, 39]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":28,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240820_epam-ai-run-gpt-4o",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.22,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-12125",
        "underspecified":0,
        "underspecified_notes":"The problem statement explains the Django `makemigration` command issue, which does not correctly handle inner classes when the `makemigrations` command is applied.\nThe user explains how to reproduce the issue; when we define `Outer` class with an inner class `Inner` and use this inner class `Outer.Inner` as a field type in Django model `A`, then run `manage.py makemigrations` command, the generated migration files incorrectly refers to the inner class as if it were a top-level class. The migration file should reference `test1.models.Outer.Inner` instead of `test1.models.Inner`. However, the same issue occurs with fields from external libraries, such as `EnumField` from `django-enumfields`.\nThe problem statement is clear and well explained, and the desired solution is also mentioned in the issue description.",
        "false_negative":0,
        "false_negative_notes":"The gold patch fixes the mentioned issue in the description by replacing the `__name__` attribute with `__qualname__` attribute in the serialize function. The `__qualname__` attribute provides the qualified name of the class, which includes the outer class name correctly.\nThe test patch successfully passes all the test cases of the gold patch code. The function, `test_serialize_nested_class` is added to check that the serialization of nested classes works correctly, including nested enums and nested choices. These test cases ensure that the new `__qualname__` attributes are working and other nested classes are also serialized correctly.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":49,
        "false_negative_decided_by":49,
        "other_major_issues_decided_by":49,
        "difficulty_decided_by":"[49, 32]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":5,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20241022_tools_claude-3-5-haiku",
            "20241016_composio_swekit",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.86,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-16560",
        "underspecified":1,
        "underspecified_notes":"This is more of code improvement request. It is clear about the task requiring one to have customize code attribute to identify validator errors other than the existing violation_error_message.\nThe \"... subclass the constraint to tweak validate to catch and reraise the ValidationError\"  need more context to be better understood. \nAlso, \"...possibility for errors raised by constraints\" requires more information about the other constraints to consider too.",
        "false_negative":1,
        "false_negative_notes":"Since we are not given all the constraints to add the violation_error_code, there is a chance that some other constraints may be missed. This test did clearly cover many constraints ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":16,
        "false_negative_decided_by":16,
        "other_major_issues_decided_by":3,
        "difficulty_decided_by":"[16, 38]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241022_tools_claude-3-5-haiku"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"django__django-16485",
        "underspecified":1,
        "underspecified_notes":"The issue appears to be about the `floatformat()` function in Django crashing when it encounters the value \"0.00\" with a precision of 0. The user provides a minimal reproducible example showing that the function throws a `ValueError` indicating `valid range for prec is [1, MAX_PREC]`. This suggests that the function is not handling the value \"0.00\" correctly when trying to format it with zero decimal places, and this behavior occurs both when the input is a string and a Decimal object. However, the description lacks explicit information about the expected behavior. But based on the provided information, an engineer can easily infer that the `floatformat` function should be able to handle a precision of 0 without throwing an error. So a score of 1 is more appropriate.",
        "false_negative":1,
        "false_negative_notes":"The tests check that the `floatformat` function correctly handles the input \"0.00\" and Decimal(\"0.00\") with a precision of 0 ensuring it returns \"0\". While the tests added do cover the scenarios directly mentioned in the issue there is a possibility that some unusual solutions or additional edge cases such as handling different string formats of zero or very small values near zero that might also be impacted by precision handling are not covered due to the lack of explicit details in the issue description. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":6,
        "false_negative_decided_by":6,
        "other_major_issues_decided_by":6,
        "difficulty_decided_by":"[28, 18]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":23,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.36,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-13820",
        "underspecified":0,
        "underspecified_notes":"The descriptions talk about a feature-request to improve the specificity of the migration loader's check for namespace packages by augmenting the current check of `getattr(m, '__file__', None)` with `and not isinstance(m.__path__, list)`. The reason to do this is well documented and specified that namespace packages are not the only packages that will not contain `__file__` attribute, but they definitely do not have `__path__` attribute as a regular list. \nThe description is well-specified with the issue, reason, expected behavior and solution described properly. ",
        "false_negative":1,
        "false_negative_notes":"While the tests cover the primary scenario, there may be edge cases or unusual implementations that the tests do not account for. For example, if there are alternative ways to handle modules without __file__ that do not follow the pattern assumed in the test, these solutions might be missed. An unusual solution might use a custom loader that does not rely on the __file__ attribute or the __path__ attribute in the conventional way.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":73,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":73,
        "difficulty_decided_by":"[55]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":26,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.28,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-9296",
        "underspecified":0,
        "underspecified_notes":"- The issue proposes adding an __iter__ method in the paginator class which would make iterating over all pages of a Paginator object more intuitive and pythonic\n- The expected solution is clearly mentioned in the description.\n- Overall, the issue is concise and well-specified.",
        "false_negative":0,
        "false_negative_notes":"- The test patch adds a test to verify the new __iter__ method implemented in the paginator class\n- The test verifies that the method works correctly by comparing the output against expected values.\n- The issue proposed an enhancement of adding an iter method. As long as a solution implements an iter method correctly, the test patch would cover it.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":26,
        "false_negative_decided_by":26,
        "other_major_issues_decided_by":26,
        "difficulty_decided_by":"[26, 69, 63]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":30,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.17,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-14580",
        "underspecified":1,
        "underspecified_notes":"The issue in issue description states that Django generates a migration file that is missing an import statement, but its unsure if it's a bug of the module django.db.migrations.writer. It states what a successful solution looks like, Django generates a migration file that is valid Python. Hence, rating it 1.",
        "false_negative":1,
        "false_negative_notes":"The tests correctly check the import statement being included in the migration serializer. However the import is checked as a string. Although this might work on majority of solutions but some solutions might be missed. The import statement might have extra spaces or it could be \"from django.db import *\". These changes are unusual but make up a correct solution. However, the test patch will fail for such solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":2,
        "false_negative_decided_by":38,
        "other_major_issues_decided_by":30,
        "difficulty_decided_by":"[30, 38, 2]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-16502",
        "underspecified":0,
        "underspecified_notes":"The issue description clearly describes a bug with runserver returning response body for HTTP HEAD requests. A justification was provided for the bug report and bug reproduction commands where provided with the expected output specified.",
        "false_negative":0,
        "false_negative_notes":"The test patch is checks that no body is returned in a HEAD request, however, it also checks that the body is correctly returned in a GET request. That makes sense because we have to make sure that the body is not being returned for the HEAD because of some other failure, but because the implementation for the for HEAD request makes it that way.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":72,
        "false_negative_decided_by":72,
        "other_major_issues_decided_by":72,
        "difficulty_decided_by":"[78, 34]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-15809",
        "underspecified":0,
        "underspecified_notes":"The issue is about modifying the behavior of the Min() and Max() functions when they are called with no arguments. Currently, calling Min() or Max() without any arguments results in a ValueError with the message. The suggestion is to change this behavior so that Min() returns positive infinity and Max() returns negative infinity as these values are considered mathematically valid in the context of the extended real number system. An experienced software engineer can easily understand the requirements and implement a solution based on this information. So a score of 0 is appropriate.",
        "false_negative":0,
        "false_negative_notes":"The provided test patch includes checks to ensure that Min() returns positive infinity and Max() returns negative infinity when called with no arguments. It also maintains existing checks to ensure that Min() and Max() handle single and multiple arguments  in different orders and nested structures correctly. The tests effectively validate the main requirements described in the issue. They cover the expected new behavior without arguments and ensure that the functions still operate correctly with arguments maintaining backward compatibility. Hence a score of 0 is appropriate.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":6,
        "false_negative_decided_by":6,
        "other_major_issues_decided_by":6,
        "difficulty_decided_by":"[6, 30, 17]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":10,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240924_solver",
            "20231010_rag_swellama7b",
            "20241028_solver",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.72,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-16333",
        "underspecified":0,
        "underspecified_notes":"- The issue identifies that the UserCreationForm fails to save ManyToManyField data because it omits the self.save_m2m() call in the save(commit=True) method, and highlights the implementation difference from its parent class ModelForm.\n- The reporter proposes a valid solution, making the expected solution clear in terms of addressing the problem.\n- This makes the issue description well-specified.",
        "false_negative":0,
        "false_negative_notes":"- This test patch makes sure that when using a custom User model with a ManyToManyField, the data in the related form fields is saved correctly by calling self.save_m2m() within the save(commit=True) method of UserCreationForm.\n- The tests cover the specific scenario where ManyToManyField data is saved. Any other solution which fixes the UserCreationForm and makes sure that the m2m data is saved, will pass the test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":26,
        "false_negative_decided_by":26,
        "other_major_issues_decided_by":26,
        "difficulty_decided_by":"[26, 12]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":26,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.28,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-12325",
        "underspecified":1,
        "underspecified_notes":"The issue description provides a clear example of the problem, including the model definitions and the error message. It also explains the unexpected behavior and the expected behavior. \nHowever, there are some implicit assumptions and unclear aspects, such as:\nWhat is the exact requirement for the parent_link attribute? Is it only related to the order of the fields, or is there something else at play?",
        "false_negative":1,
        "false_negative_notes":"The tests seem to cover the main scenarios, including:\nA model with a OneToOneField that has parent_link=True (test test_onetoone_with_explicit_parent_link_parent_model)\nA model with a OneToOneField that does not have parent_link=True (test test_onetoone_with_parent_model)\nA model with multiple OneToOneFields, including one with parent_link=True (test test_clash_parent_link)\nHowever, there are some potential edge cases that may not be covered, such as:\nA model with multiple OneToOneFields, none of which have parent_link=True\nA model with a OneToOneField that has parent_link=True, but also has other attributes that may affect the behavior (e.g. related_name, on_delete)",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":40,
        "false_negative_decided_by":40,
        "other_major_issues_decided_by":40,
        "difficulty_decided_by":"[40, 80, 32]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":3,
        "solved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20241001_nfactorial",
            "20240824_gru"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.92,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"sphinx-doc__sphinx-7910",
        "underspecified":1,
        "underspecified_notes":"- The issue highlights that when `napoleon_include_init_with_doc = True`, the `__init__` should be documented, but when the `__init__` method is decorated, it will not show up in docs.\n- The description did not specify the expected behavior.\nTherefore, the preferable choice should be 1.",
        "false_negative":0,
        "false_negative_notes":"The tests are testing the case when there is a decorated special function which is the general case of what is mentioned in the ticket description. Any solution to the problem should pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":1,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 1]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":5,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241022_tools_claude-3-5-haiku",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.86,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sympy__sympy-19954",
        "underspecified":1,
        "underspecified_notes":"The ticket shows reproducible examples of the error shown to the user. However, the bug itself is not clear and it needs some digging to understand what needs to be done here which is considered yet a blank to fill. However, it is a good start to have an example and an error code.",
        "false_negative":0,
        "false_negative_notes":"The tests added specifically target the functionality described in the issue—ensuring the `sylow_subgroup` method works correctly for a `DihedralGroup` of specific orders (18 and 50). This directly addresses the scenario causing the `IndexError` described in the issue. The tests check that not only does the method no longer throw an error, but it also returns groups of the expected order.\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":7,
        "false_negative_decided_by":43,
        "other_major_issues_decided_by":43,
        "difficulty_decided_by":"[7, 44]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":15,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20240820_honeycomb",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.58,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sympy__sympy-23534",
        "underspecified":0,
        "underspecified_notes":"The issue clearly describes that in SymPy version 1.10.1, using the `symbols` function to create `Function` instances fails when an extra layer of parentheses is present, resulting in `Symbol` objects instead. This occurs despite the documentation indicating that the `cls` argument should specify the class type to be created. The problem arises when the extra layer of parentheses is used to deconstruct the output as separate tuples, causing the `symbols` function to not correctly interpret the `cls` argument.",
        "false_negative":0,
        "false_negative_notes":"The test checks exactly the issue being raised with the same example that is provided in the issue description. I cannot think of any other solution that might fail.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":44,
        "false_negative_decided_by":44,
        "other_major_issues_decided_by":44,
        "difficulty_decided_by":"[44, 43, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":12,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20241028_agentless-1.5_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.67,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-13109",
        "underspecified":0,
        "underspecified_notes":"The issue is clear; `ForeignKey.validate() should validate using the base manager instead of the default manager`. A sample code is shared to reproduce the problem. The expected solution is indicated in the issue description.",
        "false_negative":0,
        "false_negative_notes":"test_validate_foreign_key_uses_default_manager and test_FK_validates_using_base_manager ensures that ForeignKey.validate() validates using the base manager.\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":54,
        "false_negative_decided_by":54,
        "other_major_issues_decided_by":54,
        "difficulty_decided_by":"[54, 26, 87]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":28,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.22,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-12973",
        "underspecified":1,
        "underspecified_notes":"The issue description clearly highlights that the presence of two `copy_X` parameters—one at the class level and one at the method level—can lead to conflicting values potentially leading to mixed behavior for the `fit()` method. It also suggests the potential issue to the bug.\nHowever, it does not share the code snippet directly, instead shares a link which would require a browsing tool. Hence, rating it 1.",
        "false_negative":0,
        "false_negative_notes":"The test patch checks if the input data is modified or not based on the `copy_X` parameter in the LassoLarsIC class. It also checks if the value of `copy_X` set in the `fit()` method takes precedence over the default value set during the object's initialization or not. This should cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":"The fix should not take more than 15 minutes because the change is minimal and the issue description also highlighted the potential solution to the bug.",
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":76,
        "false_negative_decided_by":76,
        "other_major_issues_decided_by":76,
        "difficulty_decided_by":"[31, 90]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":14,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241016_composio_swekit",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.61,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-13480",
        "underspecified":1,
        "underspecified_notes":"The issue description is well-specified, with a clear demonstration of the problem, specifically noting that `coth(log(tan(x)))` produces an error for certain integral values. However, there are some gaps regarding the expected solution. Despite these gaps, the general expectation is that the function should display some output. This can be interpreted and addressed by an experienced engineer.",
        "false_negative":0,
        "false_negative_notes":"Even though the test patch tests for one more value i.e. '1 + I*pi\/2', but the code fix that is required is not specific to a particular argument. The issue arises in a particular statement which has a typo. Fixing the typo is key to the fix. Hence any valid solution should pass the given test. The test patch addresses exactly the error that is thrown.Hence marking it as 0.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":67,
        "false_negative_decided_by":61,
        "other_major_issues_decided_by":61,
        "difficulty_decided_by":"[61, 67, 10]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":27,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.25,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-12304",
        "underspecified":0,
        "underspecified_notes":"The issue statement is very clear, the issue is described well: new ​enumeration types can't be used in Django templates due to them being callable. The suggested exact solution is also given: declare \"do_not_call_in_templates = True\". This makes the problem statement clear and the label should be 0.",
        "false_negative":0,
        "false_negative_notes":"The tests perfectly cover the issue raised in the description. Template('{{ Suit.DIAMOND.label }}|{{ Suit.DIAMOND.value }}') is used to illustrate the new ​enumeration types used in templates and it checks that the behaviour is working as intended. So the score can be 0.",
        "other_major_issues":0,
        "other_notes":"No other issues with the task",
        "difficulty":"<15 min fix",
        "underspecified_decided_by":53,
        "false_negative_decided_by":53,
        "other_major_issues_decided_by":53,
        "difficulty_decided_by":"[53, 3, 28]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":7,
        "solved_by":[
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240924_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.81,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-24026",
        "underspecified":0,
        "underspecified_notes":"The issue request addresses a problem with Matplotlib's `stackplot` function, which currently does not support the use of color aliases (`C0`, `C1`, `C2`, etc.) that are supported by other plotting functions like `ax.plot()` and `matplotlib.patches.Rectangle()`. This inconsistency prevents users from maintaining a synchronized color scheme across different plot types, leading to a `ValueError` when attempting to use these aliases with `stackplot`. The user requests that `stackplot` be modified to accept and correctly process color aliases, enabling consistent and visually coherent color usage across varied plot elements.\n\nThe issue is well-specified and it is clear what is required for a successful solution.",
        "false_negative":0,
        "false_negative_notes":"The pull request (PR) enhances the `stackplot` function in Matplotlib to support color aliases (`C0`, `C1`, `C2`, etc.), ensuring consistent color schemes across different plot types. It achieves this by importing `itertools` and using `itertools.cycle` to cycle through provided colors, allowing them to be reused as needed. If no colors are provided, default colors are generated from the axes' line color cycle. The `fill_between` function is modified to use the next color in the cycle, ensuring consistent color usage. Additionally, the test cases are updated to validate the new behavior with labeled data and specified color aliases, enhancing the overall functionality and visual coherence of Matplotlib plots.\n\nThe tests perfectly cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":20,
        "false_negative_decided_by":20,
        "other_major_issues_decided_by":20,
        "difficulty_decided_by":"[20, 25, 17]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":22,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.39,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-21379",
        "underspecified":1,
        "underspecified_notes":"The issue is a `PolynomialError` that occurs when using the `subs()` method on expressions involving `sinh` with piecewise arguments in SymPy. The problem is specific to certain functions and assumptions, making it difficult to pinpoint and debug. The error seems to be tied to the order of assumptions and specific functions like `sinh`, `cosh`, and `tanh`, but it is not clear about it in the issue description. Additionally, the full traceback error is missing, which would help users understand where the problem occurs. Since there are some gaps in the issue description that can be resolved through debugging, it should be rated as 1.",
        "false_negative":0,
        "false_negative_notes":"The test cover the precise case highlighted in the issue statement, which I think is a good, representative case that every correct solution should be passing. Testing expr.subs({1: 1.0}) on the expression with Piecewise arguments\nThe correct label should be 0 for the section.",
        "other_major_issues":0,
        "other_notes":"There are no other issues with the task.",
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":12,
        "false_negative_decided_by":53,
        "other_major_issues_decided_by":53,
        "difficulty_decided_by":"[53, 20]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":3,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20240824_gru",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.92,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-11555",
        "underspecified":1,
        "underspecified_notes":"The problem is clear. The issue arises when using a query expression for ordering in a multi-table inheritance setup. It happens when `order_by` contains a parent model expressions. The description offers a very good start to create reproducible example and tackle the problem. However, there is some ambiguity in the problem description. It is not clear why the bug occurs only during only the test setup or it is an actual problem or only with the user environment. ",
        "false_negative":0,
        "false_negative_notes":"The test patch offers a new test case where a parent model expressions is used in `order_by` which is the exact use case the ticket description is complaining about. Any solution that fixes the problem would pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":7,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 42]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20241028_agentless-1.5_gpt4o",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20241016_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240924_solver",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-11885",
        "underspecified":1,
        "underspecified_notes":"- The issue description states the problem clearly and provides specific examples of models and the resulting SQL queries and explains their inefficiency and the overall impact on database performance.\n- The issue proposes a solution to combine DELETE queries for the same table using the OR operator to reduce the number of roundtrips to the database.\n- The issue description mentions that the deletion process attempts to perform \"fast queries\" (i.e., DELETE FROM table WHERE table.pk IN ...), but it does not specify the conditions under which these fast paths are used and it is unclear whether certain database configurations, specific model attributes, or particular types of foreign key relationships are necessary for the fast path to be taken.",
        "false_negative":1,
        "false_negative_notes":"- The tests cover the primary functionality of combining DELETE queries when multiple foreign key relationships are involved. The test_fast_delete_combined_relationships test explicitly checks that the number of queries is reduced to two, indicating that the queries are combined as expected.\n- While the tests cover the primary use case, they might miss some valid solutions that handle complex relationships or edge cases differently. For example, an engineer might implement a solution that handles nullable foreign keys or different database backends in a specific way, which the current tests do not account for.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":26,
        "false_negative_decided_by":26,
        "other_major_issues_decided_by":26,
        "difficulty_decided_by":"[26, 59, 60]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"matplotlib__matplotlib-22865",
        "underspecified":0,
        "underspecified_notes":"The issue is well-specified, with a clear demonstration of the expected outcome. It describes a bug in colorbar where the black lines at the extremities do not show up on using `extend='both'`.",
        "false_negative":0,
        "false_negative_notes":"The test patch is well-scoped and effectively cover all possible solutions. It checks the ColorbarBase behavior under different extend settings ('both', 'min', 'max', 'neither') and validate the presence of edges at the specified coordinates. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":67,
        "false_negative_decided_by":67,
        "other_major_issues_decided_by":67,
        "difficulty_decided_by":"[67, 53, 66]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":3,
        "solved_by":[
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.92,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-14496",
        "underspecified":1,
        "underspecified_notes":"The problem is clear. The user is asking to enable the `min_sample` to be passed as a float without breaking the code. The actual problem that `min_samples ` should be casted into an integer in the function code. There is one blank to fill that OPTICS was introduced in 0.21 so python2 don't need to be considered.",
        "false_negative":0,
        "false_negative_notes":"The tests are using OPTICS with a float min_sample any solution to the problem should pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":7,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 35, 42]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":30,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.17,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-26323",
        "underspecified":1,
        "underspecified_notes":"The issue is well-explained, highlighting that ColumnTransformer.set_output ignores the remainder value when it’s set to an estimator.\n The description refers to a specific \"if\" condition linked to a GitHub issue, which might make it a bit tricky to fully grasp. \nHowever, it also provides a clear example showing how the remainder gets overlooked. The solution is simple which is to make sure the remainder isn't ignored when it's set to an estimator.",
        "false_negative":1,
        "false_negative_notes":"The test patch properly checks the transformer column when the remainder is set to VarianceThreshold. Any correct solution should pass the first assertion in the pd test.\n However, an unconventional solution might only work if set_output is set to pandas and might not work with the default \"transform\" setting.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":75,
        "false_negative_decided_by":75,
        "other_major_issues_decided_by":67,
        "difficulty_decided_by":"[75]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":17,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.53,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-14315",
        "underspecified":0,
        "underspecified_notes":"The PostgreSQL client sometimes ignores `os.environ`, returning an empty dictionary instead of `None`, which prevents environment variables from being passed to subprocesses. This solution requires modifying the client to correctly handle environment variables.\n\nThe issue is clearly defined, as it outlines both the cause and the potential solution.",
        "false_negative":1,
        "false_negative_notes":"- The Test Patch introduces new test cases to verify the changes in the `settings_to_cmd_args_env()` and `runshell()` functions.\n- While the solution in Gold Patch is effective, the issue can also be fixed without modifying `settings_to_cmd_args_env()`. This means the `test_parameters` test case will fail if the user only modifies the `runshell()` function. Therefore, the preferable choice is 1.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":14,
        "false_negative_decided_by":39,
        "other_major_issues_decided_by":14,
        "difficulty_decided_by":"[14, 58]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"sphinx-doc__sphinx-8265",
        "underspecified":1,
        "underspecified_notes":"The issue in issue description states that docstring default arg is broken in html. Also, it clearly states the expected behavior. But added, links for more reference about the problem. Hence, rating it 1.",
        "false_negative":1,
        "false_negative_notes":"The test cases are okay but to comprehensively test the solution, more test cases are needed. Although, the empty tuple case is already tested, additional variations of empty structures,  such as empty lists, sets, etc. might slip off. Hence, rating it 1. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":2,
        "false_negative_decided_by":2,
        "other_major_issues_decided_by":87,
        "difficulty_decided_by":"[2]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"pytest-dev__pytest-5787",
        "underspecified":0,
        "underspecified_notes":"The issue provides mutiple clear examples of the problem with chained exception serialization in pytest when using the xdist plugin. The provided code snippets demonstrate two test functions that raise chained `ValueError` exceptions, with and without using the `from` keyword, to illustrate differences in exception trace outputs when running tests with and without the `pytest-xdist` plugin. Therefore, it can be said that the issue is clear, provided the expected and actual behaviors as well as the relevant setup details and can be labeled as 0.",
        "false_negative":0,
        "false_negative_notes":"Gold patch here seems to change how serialization is made and catch\/handle `ExceptionChainRepr` which addresses the issue raised. The test ensures that the exception chaining is correctly captured and represented, addressing the issue where chained exceptions were not properly serialized when using xdist. Also, it seems to include equivalent cases to the ones addressed in the issue. Therefore it is labeled as 0, as it covers the cases addressed in the issue.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":55,
        "false_negative_decided_by":55,
        "other_major_issues_decided_by":55,
        "difficulty_decided_by":"[72, 11]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_0"
    },
    {
        "instance_id":"django__django-12143",
        "underspecified":1,
        "underspecified_notes":"The issue description provides a clear context and identifies a specific problem with regex handling in admin\/options.py at line 1634. It suggests a straightforward solution (use re.escape()) and mentions where the problem occurs. However, it lacks detailed instructions on where else this pattern might appear in the codebase, which requires some interpretation and additional searching by the developer. The description indicates that a regression introduced the issue, but it does not specify the impact on the application or any related tests to verify the fix.",
        "false_negative":1,
        "false_negative_notes":"The tests cover the majority of correct solutions by verifying that regex special characters in the prefix do not cause issues in the change_view. However, the tests focus on the specific method of using re.escape to solve the problem that might misses other unconventional solutions like pre-validating prefix values, using non-regex matching methods, or creating an abstraction layer for safe prefix handling. These approaches avoid the need for regex escaping and provide robust handling of the issue.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":80,
        "false_negative_decided_by":80,
        "other_major_issues_decided_by":26,
        "difficulty_decided_by":"[80, 55]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":30,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.17,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-14053",
        "underspecified":1,
        "underspecified_notes":"The ticket has made a good analysis for the problem. But it didn't provide a full reproducible code which is a blank to fill. However, it manages to provide a good start to fix the problem.",
        "false_negative":0,
        "false_negative_notes":"The test patch is testing that there is no duplication in the output of the command. Any solution to fix the problem should pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":7,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[14, 43]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":19,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.47,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"psf__requests-1724",
        "underspecified":0,
        "underspecified_notes":"Even though the repetition in the description affects the presentation, the description of the problem is clear (Unicode method names cause UnicodeDecodeError for some requests in Python 2.7.2). It also gives steps to reproduce it. It gives an error traceback and a hypothesis on the cause of the issue.\nThis makes it straightforward for an engineer to identify and work on a solution.\n\n",
        "false_negative":0,
        "false_negative_notes":"The patch directly addresses the issue raised thereby justifying a 0. It tests the scenario raised in the description (handling Unicode method names in the requests library).",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":18,
        "false_negative_decided_by":18,
        "other_major_issues_decided_by":18,
        "difficulty_decided_by":"[12, 27]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":19,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241025_composio_swekit"
        ],
        "empiric_difficulty":0.47,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-11179",
        "underspecified":0,
        "underspecified_notes":"The issue clearly states that the primary key (PK) should be set to “None” after calling “.delete()” on a model with no dependencies. The reference to specific lines in “Django.db.models.deletion” provides sufficient direction for an experienced engineer to locale and update the necessary code. ",
        "false_negative":0,
        "false_negative_notes":"The tests perfectly cover all possible solutions. They verify that the primary key is set to “None” after calling “.delete()” on a model instance that can be fast-deleted. This directly aligns with the issue’s requirement, ensuring that any valid implementation of the solution will pass these tests. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":81,
        "false_negative_decided_by":81,
        "other_major_issues_decided_by":81,
        "difficulty_decided_by":"[81, 52, 32]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":20,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.44,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-11951",
        "underspecified":1,
        "underspecified_notes":"The issue is clear and detailed apart from one point that it mentioned the link to the file and line number but didn't mention the code, which makes it hard to understand without visiting that link. ",
        "false_negative":0,
        "false_negative_notes":"The test patch is testing that explicit batch size respects max_batch_size which is the same concern of the ticket. Any solution to the problem should pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":24,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 3]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":15,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240824_gru",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.58,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-14373",
        "underspecified":0,
        "underspecified_notes":"- The Y specifier in django.utils.dateformat.DateFormat is expected to return a four-digit year, zero-padded if necessary. However, it fails to do so for years less than 1000.\n- The expected solution is to modify the implementation to zero-pad years less than 1000.\n- Overall, the issue is well-specified.",
        "false_negative":0,
        "false_negative_notes":"- The test verifies that the Y specifier correctly formats years as described in the issue.\n- Any reasonable solution to the problem of zero-padding the year to four digits will pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":26,
        "false_negative_decided_by":26,
        "other_major_issues_decided_by":26,
        "difficulty_decided_by":"[26, 18]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":31,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.14,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-8548",
        "underspecified":0,
        "underspecified_notes":"The core issue presented in the issue description is that autodoc does not check the base class’s namespace for attributes when generating documentation, leading to inherited attributes being undocumented.\nThe issue description is short but clear. The expectation is that the inherited attributes should also be documented when generating docs using autodoc.",
        "false_negative":0,
        "false_negative_notes":"The test patch adds a new test case to verify that instance variables, including inherited ones, are correctly documented. \nThe new tests ensure that both directly defined and inherited attributes with their respective docstrings are included in the generated documentation.\nThe tests are directly targeting the issue description hence any solution targeting the issue description should pass the test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":8,
        "false_negative_decided_by":8,
        "other_major_issues_decided_by":8,
        "difficulty_decided_by":"[3, 39]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_0"
    },
    {
        "instance_id":"sympy__sympy-15976",
        "underspecified":1,
        "underspecified_notes":"The issue is very clear. In the first statement it states  that 'a symbol ending with a number is made invisible when printing with MathML. In the second statement it states that \"A variable with a number, such as x1, is made invisible when printing in a MathML format\". Both statements are not actually the same. This creates a small ambiguity. But in the examples of variable names given, the variables are ending with a number only 'x1' and 'x2'. It also shows with an example that it works as expected with a variable having no number i.e. 'x' 'y'' and 'z'. A developer will have to fill in these gaps himself by experimenting with all kinds of variable names. Marking it as 1 due to the small ambiguity created.\n",
        "false_negative":1,
        "false_negative_notes":"The test patch tries all kinds of variable names including various symbols and including numbers in the variable name in different ways. But the ask of the issue is limited to the variable names ending with a number. Though an experienced developer will take care of all the cases, some very unusual solutions might be missed which fix the specific case of having a number a the end. Hence marking it as 1.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":61,
        "false_negative_decided_by":61,
        "other_major_issues_decided_by":23,
        "difficulty_decided_by":"[54, 61]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-15252",
        "underspecified":0,
        "underspecified_notes":"-In a multi-database Django setup, the `MigrationRecorder` is not respecting the `db_router`'s `allow_migrate` rules, leading to the creation of migration-related tables in non-default databases\n-This behavior conflicts with the user's configuration, which should restrict migrations to the 'default' database only\n-The expectation is that the `MigrationRecorder` should respect the allow_migrate rule defined in the router and not attempt to create or modify tables in databases other than the 'default' one\n",
        "false_negative":0,
        "false_negative_notes":"The tests confirms that the migration system behaves correctly under specific conditions, such as when migrations are disabled for a test database or when there are no migrations to record, preventing unnecessary table creation. The tests perfectly cover all possible solutions. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":64,
        "false_negative_decided_by":64,
        "other_major_issues_decided_by":64,
        "difficulty_decided_by":"[64, 6]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-24562",
        "underspecified":0,
        "underspecified_notes":"The issue raises a bug where the output of `Rational('0.5', '100')` is 1\/100100. The expected value, according to the issue, is 1\/200. We can infer that the output of `Rational('0.5', '100')` should have been 1\/200. Since both the problem and the expectation from the solution are clear, I think the rating should be 0.",
        "false_negative":0,
        "false_negative_notes":"The tests check that the value of `Rational(p, q)` is the same even if `p` and `q` are strings or integers. It also explicitly checks the value of `Rational('0.5', '100')`. Any reasonable solution should pass this test, so I think the tests cover all possible solutions. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":65,
        "false_negative_decided_by":65,
        "other_major_issues_decided_by":65,
        "difficulty_decided_by":"[13, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-14999",
        "underspecified":1,
        "underspecified_notes":"The description mentions that the RenameModel function should not operate with a db_table. Even though we can figure out the requirements, more description was required such as if we are looking for a change in the new state copy of the current project or the current project only.",
        "false_negative":1,
        "false_negative_notes":"The test patch introduces a new test method test_rename_model_with_db_table_noop() which appears to be well-aligned with the issue description.  The test creates a model with a specific db_table name. It then attempts to rename the model. It checks that no database queries are executed during this operation, which aligns with the \"noop\" (no operation) requirement from the issue description. Although there are some unusual solution that performs some lightweight checks (resulting in queries) before deciding not to rename might fail this test, even if it effectively solves the issue. Hence, choice 1 is preferred.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":2,
        "false_negative_decided_by":77,
        "other_major_issues_decided_by":2,
        "difficulty_decided_by":"[2, 26]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":15,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.58,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"matplotlib__matplotlib-24870",
        "underspecified":0,
        "underspecified_notes":"The issue is about plotting the boundary line between True and False regions in a 2d boolean array. The levels argument default was to create 7 levels. The solution is to have a default `0.5` progression in the levels for the boundary lines by default. The issue is clear and well-specified.",
        "false_negative":1,
        "false_negative_notes":"The test is designed to verify that if the height array given to `.Axes.contour` or `.Axes.contourf` is of bool type and `levels` is not specified, `levels` defaults to `[0.5]` for `~.Axes.contour` and `[0, 0.5, 1]` for `.Axes.contourf`. This covers majority of the solutions but some unusual solution that uses a different default value the tests would fail. Recall that the issue text also allow selecting values between 0-1.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":58,
        "false_negative_decided_by":56,
        "other_major_issues_decided_by":58,
        "difficulty_decided_by":"[58, 55, 56]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-13590",
        "underspecified":1,
        "underspecified_notes":"The issue description mentions that while using the range query set in Python 3.0, it raises a `TypeError`. It also mentions which function `django.db.models.sql.query.Query.resolve_lookup_value` is causing the error and the steps the function takes that build to an error. In the last line, it also provides a solution to the issue. But I feel it could have provided more information such as the code snippet causing the error or the traceback.",
        "false_negative":0,
        "false_negative_notes":"The test cases should pass all the solutions as we just need to check in a particular version of Python which all the solutions will surely pass.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":2,
        "false_negative_decided_by":2,
        "other_major_issues_decided_by":2,
        "difficulty_decided_by":"[2, 60]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":13,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.64,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-13212",
        "underspecified":1,
        "underspecified_notes":"The issue is very-well specified, in the sense it asks for validator messages to be propagated up into error messages as they would be helpful, with a useful example.\nThe reporter asks if validators can provide values to `ValidationError` and references a documentation link however, which we cannot access for a clearer example.\nTherefore, it is rated as 1 .",
        "false_negative":1,
        "false_negative_notes":"While a proper solution to this fix SHOULD attempt to address all validators, because of the lack of specificity in the issue description, it is possible only a few validators are addressed.\nTherefore, it might be possible to have solutions which resolve the reporters issues without all the fixes needed to pass the tests added.\nHence, some unusual solutions might be missed here.\nA rating of 1 is therefore selected.",
        "other_major_issues":0,
        "other_notes":"No issued missed.",
        "difficulty":"1-4 hours",
        "underspecified_decided_by":27,
        "false_negative_decided_by":27,
        "other_major_issues_decided_by":27,
        "difficulty_decided_by":"[27, 6]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"django__django-12050",
        "underspecified":1,
        "underspecified_notes":"The issue is clear that the `Query.resolve_lookup_value` coerces the value of type list to tuple which breaks functionality for certain ORM field types like `PickledField` that rely on specific input types.\nIt mentioned the ticket number and link where changes were introduced but no detail is provided about the changes however it iss clear what the issue is and what is required for a successful solution.",
        "false_negative":0,
        "false_negative_notes":"The instance described by the issue is that the input type does not match the return type. In the test patch, there is a provision for the return type matching the input type as a list as well as the values in the list. The test covers all possible solutions. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":24,
        "false_negative_decided_by":58,
        "other_major_issues_decided_by":58,
        "difficulty_decided_by":"[58, 24]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":21,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.42,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-15563",
        "underspecified":1,
        "underspecified_notes":"The issue description clearly outlines the problem with an example, illustrating that when a queryset update is performed on a class that inherits from multiple classes, the update incorrectly affects instances of one of the parent classes instead of the child class instances. The provided code example is clear and demonstrates the problem step by step i.e. creation of 'OtherBase' instances, creation of child instances, performing an update on the Child queryset and observing the incorrect update behavior in the 'OtherBase' instances. The expected behavior is not explicitly stated but it can be interpreted that the 'Child' queryset update should only affect the 'Child' instances not the 'OtherBase' instances. Hence a score of 1 is appropriate.",
        "false_negative":1,
        "false_negative_notes":"- The problem statement is clear and sets proper expectation from desired solution, test case `test_mti_update_parent_through_child` and `test_mti_update_grand_parent_through_child` are verifying the scenarios mentioned in the problem statement and checks whether it returns the updated value or not. In the test case it is checking whether retrieving the data using child class queryset is returning updated values or not.\n- But, based in the issue description, it is evident that both child and parent queryset should return same updated values, and test patch is only testing the scenarios where child queryset is returning is expected value, it should also checks the cases where parent queryset should also return the same updated values.\n- There could be some unusual solutions, which would be missed by this test patch where child queryset query is working properly but parent queryset query is broken.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":6,
        "false_negative_decided_by":69,
        "other_major_issues_decided_by":69,
        "difficulty_decided_by":"[69, 6, 63]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-16116",
        "underspecified":1,
        "underspecified_notes":"The problem is clearly stated: the makemigrations --check command generates migrations instead of just exiting, which is inconsistent with the behavior of migrate --check and optimizemigration --check. It suggests that makemigrations --check should behave similarly to the other --check commands, by exiting without making migrations but there are some blanks as it does not detail the expected logging behavior if any should be implemented when makemigrations --check exits without making migrations.",
        "false_negative":0,
        "false_negative_notes":"The test test_makemigrations_check checks that makemigrations --check exits with a non-zero status when migrations are required and ensures that no migrations are created, directly addressing the stated problem. The tests do not rely on any specific implementation details but they rather focus on the described behavior which should pass all reasonable solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":32,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":32,
        "difficulty_decided_by":"[5, 38]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":15,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241007_nfactorial",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.58,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-15957",
        "underspecified":1,
        "underspecified_notes":"The issue is well specified. The problem with using 'Prefetch' objects on sliced querysets is clearly described including the specific error encountered. The use case is well-explained illustrating the practical need for the feature (displaying a few example objects from each category). However it does not explicitly mention that user wants \"prefetch\" to support slicing of queryset but it is still known what does user wants to achieve.",
        "false_negative":1,
        "false_negative_notes":"The solution patch introduces a new helper function _filter_prefetch_queryset to handle prefetching with sliced querysets. The tests include cases for many-to-many relationships both forward and reverse. Tests includes foreign key reverse relationships and various slicing and ordering scenarios such as \"test_reverse_ordering\". The test cases are consistent with the issue's requirement to handle sliced querysets  and cover many cases thus aligning with the problem described. However, there maybe some unusual solutions which use some other implementation to  slice the querysets instead of filtering the prefetch queryset but it is rare so a score of 1 is appropriate.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":6,
        "false_negative_decided_by":6,
        "other_major_issues_decided_by":26,
        "difficulty_decided_by":"[6, 3]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"pytest-dev__pytest-5809",
        "underspecified":1,
        "underspecified_notes":"The issue references a data.txt file that is inaccessible, and also mentions an issue without further describing it.\nIt clearly describes the problem in using the `python3` lexer with some requests when using the `pastebin` option.\nThe reporter also mentions that using `text ` would more or less be appropriate as that is the required conversion anyway.\nSo inspite of having a few blanks to fill up, it is quite clear what the issue is and what is needed to solve the problem.",
        "false_negative":0,
        "false_negative_notes":"The tests are well-scoped, covering the necessary changes to ensure that the lexer parameter is set to text instead of python3. The test checks the lexer value and confirms the correct behavior, making it suitable for all reasonable solutions to the issue.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":27,
        "false_negative_decided_by":29,
        "other_major_issues_decided_by":29,
        "difficulty_decided_by":"[30, 27]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":30,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.17,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sympy__sympy-21847",
        "underspecified":0,
        "underspecified_notes":"When using the itermonomials function with min_degrees, it should generate all monomials such that their total degree is between min_degrees and max_degrees. However, it incorrectly returns only a subset of these monomials.\n\nThe issue is well-specified and it is clear what is required for a successful solution.",
        "false_negative":0,
        "false_negative_notes":"The primary issue was the incorrect condition checking the maximum degree of any single variable rather than the total degree of the monomial. By changing this to sum the degrees of all variables, the function now correctly generates monomials that meet the min_degrees criterion. The additional tests verify that the function behaves as expected for various inputs, including both commutative and non-commutative variables.\n\nThe tests appear to be well-scoped and focused on the correctness of the function's output rather than the specific implementation details. They cover a broad range of scenarios, including edge cases with both commutative and non-commutative variables.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":20,
        "false_negative_decided_by":20,
        "other_major_issues_decided_by":20,
        "difficulty_decided_by":"[20, 23]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":18,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.5,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-14493",
        "underspecified":1,
        "underspecified_notes":"The issue is clear; `ManifestStaticFilesStorage crashes with max_post_process_passes = 0.` The root cause of the issue is also suggested; `subtitutions is only set if the loop is entered at least once.`However, the expected solution is not clearly stated. But, there is a sensible interpretation of a successful solution.",
        "false_negative":1,
        "false_negative_notes":" The provided tests add a new storage class NoPostProcessReplacedPathStorage with max_post_process_passes set to 0, and a test case to ensure that running collectstatic with this storage does not raise errors and completes as expected.\nThe tests primarily verify that the patch prevents the error by running the collectstatic command without it leading to an exception, which directly addresses the initial issue described. However, they may miss edge cases involving other interactions within post_process method that might still lead to unexpected behavior.\nAdditionally, the test checks for the string 'post-processed' in the output, which might not fully validate the absence of processing as might be intended by setting max_post_process_passes to 0. Thus, while the tests are generally well-scoped for typical solutions, they might not capture some of the unusual solutions",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":54,
        "false_negative_decided_by":37,
        "other_major_issues_decided_by":54,
        "difficulty_decided_by":"[54, 69, 37]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":21,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.42,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-11734",
        "underspecified":0,
        "underspecified_notes":"The ticket description is clear. The problem is that `OuterRef` in `exclude()` or `~Q()` is not working as expected. The ticket has also provided a reproducible example with the error raised message.",
        "false_negative":0,
        "false_negative_notes":"The  test patch is testing having `OuterRef` in `exclude()` and expects it to work properly. Any solution to the problem should pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":7,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 34, 3]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-16950",
        "underspecified":1,
        "underspecified_notes":"The issue is somewhat clear in that the UUIDField default value is not being used correctly in the Django admin interface when adding a SubThing alongside a Thing. However, the description could be improved by explicitly stating that the expected behavior is for the id field to automatically receive a UUID value upon creation. There is a sensible interpretation of what is required for a successful solution.",
        "false_negative":1,
        "false_negative_notes":"The test patch checks to ensure that if form data is provided, a parent's auto-generated alternate key is set correctly in the formset. As the test patch ensures that the UUID field is set correctly appropriately, reasonable solutions that do not address this would fail the test case.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":32,
        "false_negative_decided_by":5,
        "other_major_issues_decided_by":32,
        "difficulty_decided_by":"[32, 6, 5]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sympy__sympy-24539",
        "underspecified":0,
        "underspecified_notes":"The issue is crystal clear in the ticket. It seems that the implementation for `as_expr` is ignoring the parameter symbols. The fix seems to be too easy too.",
        "false_negative":1,
        "false_negative_notes":"The tests specifically check whether the `as_expr()` function correctly substitutes the default polynomial ring symbols (`x, y, z`) with user-provided symbols (`u, v, w`) and whether the polynomial expression computed using the new symbols matches the expected result. This directly aligns with the issue description, which concerns the function's failure to use the provided symbols instead of the default ones. However, the test expects a specific error message: \"Wrong number of symbols, expected %s got %s\". This is derived from the Gold Patch. However, the issue description does not specify the exact error message text. A different but reasonable solution might raise a similar error with a different message.\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":7,
        "false_negative_decided_by":43,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 44, 43]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":25,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.31,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-13568",
        "underspecified":0,
        "underspecified_notes":"The issue clearly describes that the user wants to avoid setting the `username` field as unique directly with `unique=True` in their custom Django user model to prevent the creation of an implicit index on PostgreSQL. Instead, they use a `UniqueConstraint` in the `Meta` class to enforce uniqueness. However, this approach triggers the `auth.E003` system check error, which expects the `username` field to be explicitly unique if it's designated as `USERNAME_FIELD`. The user suggests that the system check should be updated to recognize the presence of `USERNAME_FIELD` in the model's constraints to avoid this error.",
        "false_negative":1,
        "false_negative_notes":"The tests validate the behavior of Django system checks for custom user models with unique constraints on the `username` field. The first test (`test_username_partially_unique`) ensures that a partially unique `username` triggers an error (`auth.E003`) and a warning (`auth.W004`) with a custom authentication backend. The second test (`test_username_unique_with_model_constraint`) confirms that a globally unique `username` defined through a model constraint passes all checks without errors or warnings. So the tests check exactly the issue being raised. However, both the test `test_username_partially_unique` checks a very specific warning message from the Django core code, so the exception messages were already there before the solution but still a very unusual solution can decide to change the exception message and fail the test. This is super unusual and not meaningful but a solution can fix the main issue and change the exception message as an extra.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":44,
        "false_negative_decided_by":44,
        "other_major_issues_decided_by":44,
        "difficulty_decided_by":"[44, 5]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-12155",
        "underspecified":0,
        "underspecified_notes":"The issue description is clear and detailed. It explains the problem that occurs when the first line of a docstring is not empty, providing an example and the exact error message encountered. \nThe cause of the problem is pinpointed to a specific line of code that incorrectly calculates indentation. The suggested solution—to skip the first line when determining indentation—addresses the issue directly. This makes it easy for an engineer to understand and implement the fix.",
        "false_negative":1,
        "false_negative_notes":"The fix involves changing how docstrings are cleaned and interpreted. The tests check for the absence of crashes and correct rendering of docstrings without leading line feeds. However, they might not fully cover cases where the docstring might include special characters or formatting that could influence rendering or parsing differently after the application of cleandoc.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":18,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":18,
        "difficulty_decided_by":"[18, 26]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":32,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.11,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sympy__sympy-12481",
        "underspecified":0,
        "underspecified_notes":"The issue clearly describes the problem with 'permutation' constructor when it encounters non-disjoint cycles and also demonstrates with the help of 'Permutation([[0,1], [0,1]])' raising a 'ValueError' instead of producing the identity permutation. The user also says that there is no logical reason to forbid such joints in permutations, hence this shows what a successful solution should look like.",
        "false_negative":0,
        "false_negative_notes":"The tests are well scoped because they check for both the non - raising of errors with disjoint cycles and the correctness of the resultant permutation, also the user in issue desc mentioned that logically there is no reason why disjoint cycles should be forbidden shows that there is an unexpected behavior due to which these sets were behaving unintended but now all the solutions will pass these tests successfully.\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":13,
        "false_negative_decided_by":13,
        "other_major_issues_decided_by":13,
        "difficulty_decided_by":"[13, 67]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":10,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.72,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"psf__requests-2317",
        "underspecified":1,
        "underspecified_notes":"1. The issue raises a potential problem in a specific line in \"requests\/sessions.py\" file of `requests` library stating that the function `builtin_str()` when applied on bytes object `b'GET'` returns a literal string `\"b'GET'\"`.\n2. It further states that if `requests` tries to use `\"b'GET'”`, it gets a \"404 Not Found\" response which is obvious for `\"b'GET'”` input.\n3. Even though not clearly stated, it is sensibly understood that the method be considered as \"GET\" for this input to have a valid OK response from the request. Thus, the conversion of `\"b'GET'”` into \"GET\" is needed.\n4. It shares that the bug does not exist in python 2.6 and also brings in the context of python-neutronclient to explain the bigger problem, but also shares that the core problem might be the stated one.\nWhile it is not known if solving the `requests` bug would solve the bigger problem, the agent may proceed with this assumption and focus on solving the potential core problem.\nHence, marked as 1.",
        "false_negative":0,
        "false_negative_notes":"The test confirms that the requests work even when passing a binary string and that suffices regardless of approach\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":71,
        "false_negative_decided_by":78,
        "other_major_issues_decided_by":78,
        "difficulty_decided_by":"[78, 71, 15]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":20,
        "solved_by":[
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241025_composio_swekit"
        ],
        "empiric_difficulty":0.44,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-11133",
        "underspecified":0,
        "underspecified_notes":"The issue description is well-specified because it clearly describes the problem with HttpResponse not handling memoryview objects as expected, compared to strings and bytes. The provided code examples illustrate the expected and actual behavior, making it easy to understand the discrepancy. The task involves ensuring HttpResponse properly converts memoryview content to bytes, similar to how it handles string and bytes content, eliminating ambiguity about what needs to be fixed.",
        "false_negative":0,
        "false_negative_notes":"The tests are well-scoped and perfectly cover all possible solutions for the issue. The test test_memoryview_content directly addresses the problem of handling memoryview objects in HttpResponse, ensuring that the content is correctly converted to bytes. The test does not rely on specific implementation details and verifies that the expected behavior aligns with the issue description, allowing for any reasonable solution that correctly handles memoryview objects to pass.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":80,
        "false_negative_decided_by":80,
        "other_major_issues_decided_by":80,
        "difficulty_decided_by":"[26, 13]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":28,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20231010_rag_swellama7b",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.22,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-21568",
        "underspecified":0,
        "underspecified_notes":"This issue description is well specified with reproduction example and  sufficient details on what a suitable solution would be.\n",
        "false_negative":1,
        "false_negative_notes":"The edits made to expected values for test functions align with changes implemented in gold patch. Although, the spacing issue with '-' is not demonstrated, it is intuitive when fixing spacing issue with ':' and 'numbers'. There may be some unusual solutions missing this.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":56,
        "false_negative_decided_by":21,
        "other_major_issues_decided_by":56,
        "difficulty_decided_by":"[56, 12, 21]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-10844",
        "underspecified":0,
        "underspecified_notes":"The issue description states that `fowlkes_mallows_score` function returns a `RuntimeWarning` when variables get too big. Specifically, the author is referring to the intermediate variables `pk` and `qk` getting too big. Since \"too big\" is a bit vague, the author has provided the actual Warning text received, and we can see that the overflow limit is int32 here: \"RuntimeWarning: overflow encountered in int_scalars when (pk * qk) is bigger than 2**32, thus bypassing the int32 limit\". The author has also provided the expected and actual result of the code snippet. A solution has also been proposed to set expectations and help the programmer. Hence, the issue is well-specified and it is clear what is required for a successful solution.",
        "false_negative":0,
        "false_negative_notes":"The test patch initially creates two large numpy arrays `x` and `y` with specific patterns to test the functions with large values that might cause an overflow. The arrays are constructed to simulate large input sizes that might result in `pk` and `qk` exceeding the int32 limit. It then calls `mutual_info_score(x, y)` and `fowlkes_mallows_score(x, y)` to ensure these functions handle large inputs without resulting in overflows. `fowlkes_mallows_score` is the internal function that was causing errors, as per the issue description, and this test patch is checking its output. Hence, the tests perfectly cover all possible solutions. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":19,
        "false_negative_decided_by":19,
        "other_major_issues_decided_by":19,
        "difficulty_decided_by":"[19, 29]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":31,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.14,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-8621",
        "underspecified":0,
        "underspecified_notes":"The `:kbd:` role in Sphinx produces incorrect HTML when using compound-key separators (`-`, `+`, or `^`) as standalone keystrokes or within compound keystrokes. Specifically, the separators are mistakenly treated as separators for blank keystrokes, resulting in malformed HTML output. To solve the issue, modification of the algorithm is required to correctly handle `-`, `+`, and `^` characters, differentiating between their roles as separators and as part of keystrokes.",
        "false_negative":1,
        "false_negative_notes":"The test patch are testing that the symbols (-, + and ^) are not mixed up between being separators or keystroke positions in two different scenarios. However, some unusual solutions may change the format and won't pass the tests. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":42,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":42,
        "difficulty_decided_by":"[42, 14, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-13328",
        "underspecified":0,
        "underspecified_notes":"The issue description clearly identifies a problem with the HuberRegressor, where it raises a TypeError when fitting the model with boolean predictors. The expected behavior, as demonstrated, is that the boolean array should be converted to float by the HuberRegressor.fit method, similar to the behavior of LinearRegression. The provided code allows for easy reproduction of the issue, making it straightforward for an engineer to address and fix the problem. This makes it fall under category 0.",
        "false_negative":1,
        "false_negative_notes":"test_huber_bool is directly related to the issue in the description. It confirms that the code doesn't crash with the bool data. The other changes are not related to testing and do not impact it.\nAll solutions that address the issue should pass the test as they will prevent the code from raising an error. However, I will have to rate as 1, as some bad solutions might pass (e.g those are just bypass the error raising). It would have been better to test for the expected output.  \nThe test is not totally bad though as part of the expected result from the issue description is \"No error is thrown when `dtype` of `X` is `bool` \".",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":18,
        "false_negative_decided_by":18,
        "other_major_issues_decided_by":18,
        "difficulty_decided_by":"[18, 15, 57]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":25,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.31,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-16256",
        "underspecified":0,
        "underspecified_notes":"- The issue description states that the async methods `create()`, `aget_or_create()`, and `aupdate_or_create()` don’t work as intended on related managers.\n- It mentions that an async-compatible interface was added to `Queryset` in a specific commit `58b27e0dbb3d31ca1438790870b2b51ecdb10500`, which unintentionally added async `acreate()`, `aget_or_create()`, and `aupdate_or_create()` to related managers.\n- These methods are now calling the corresponding methods from `Queryset` instead of the related manager, which is not the intended behavior.\n- The expected behavior is to add proper versions of `acreate()`, `aget_or_create()`, and `aupdate_or_create()` to related managers, with these methods calling the corresponding sync versions.\n- Sample code for the proposed behavior is also provided.\n- It is clear what needs to be done.",
        "false_negative":1,
        "false_negative_notes":"The tests provided in the Test Patch cover various scenarios for the acreate, aget_or_create, and aupdate_or_create methods, including testing with and without defaults, and testing the created flag. The tests also cover both forward and reverse many-to-many relationships.\nHowever, it's possible that some unusual solutions may be missed by these tests. \nFor example, the tests may not cover edge cases such as testing with invalid input, or testing the behavior when the related model is not yet created. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":3,
        "false_negative_decided_by":40,
        "other_major_issues_decided_by":3,
        "difficulty_decided_by":"[3, 5]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"matplotlib__matplotlib-22871",
        "underspecified":0,
        "underspecified_notes":"When plotting a date range of less than one year using Matplotlib's `ConciseDateFormatter`, the year is not displayed on the x-axis if January is excluded from the range. The expected outcome is for the year (e.g., \"2021\") to be shown in the offset text to the right of the x-axis, ensuring the year is always visible regardless of the specific months included in the plot.\n\nThe issue is well-defined, detailing both the cause and the expected outcome.",
        "false_negative":0,
        "false_negative_notes":"The updated `ConciseDateFormatter` tests ensure the year is displayed when the date range excludes January. By setting x-axis limits from 7 to 30 weeks after the start date and checking for the offset '1997', the tests verify correct year display. \n\nThe tests ensure that the `ConciseDateFormatter` behaves correctly in all relevant scenarios, confirming that any successful solution handles these cases appropriately.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":14,
        "false_negative_decided_by":14,
        "other_major_issues_decided_by":14,
        "difficulty_decided_by":"[52, 75]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-11815",
        "underspecified":1,
        "underspecified_notes":"When using an Enum object as the default value for a CharField in Django models, the generated migration file incorrectly uses the Enum's value instead of its name. This causes issues when translating the Enum's value into different languages, as the translated value no longer matches the Enum's original value, resulting in migration errors. For instance, if \"Good\" is translated to another language, the migration will fail with a \"ValueError: 'Good' is not a valid Status.\" The correct approach is to use the Enum's name (e.g., `Status['GOOD']`) to avoid this issue.\n\nSome clarity might be needed on the user's part, as there is ambiguity in the question: \"Shouldn't the code generated by the migration use the name of the Status Enum 'GOOD', not the value of it, since it is changeable?\" Nevertheless, we have an interpretation of what the successful solution should look like.",
        "false_negative":1,
        "false_negative_notes":"The test patch checks if the serialized migration uses the enum's name rather than its value, including translations. It effectively covers typical use cases by testing different Enum types (text, translated text, binary, integer) for serialization, ensuring the default value and choices are serialized with enum names. However, this tests could miss some unconventional solutions like creating a custom migration field that serializes enums by name, implementing an enum wrapper class that overrides serialization behavior, and adding a migration hook to adjust files post-generation (or) handle enums before saving ensuring names are used instead of values  (or) metaprogramming can dynamically adjust enum serialization logic at runtime. Additionally the test patch includes a test for the serialization of RegexValidator flags, which checks that regex flags are serialized by name ('DOTALL') instead of by numeric value.\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":28,
        "false_negative_decided_by":80,
        "other_major_issues_decided_by":80,
        "difficulty_decided_by":"[28]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":12,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.67,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-14559",
        "underspecified":0,
        "underspecified_notes":"Issue description is very clear as this is a small and easy request. Any developer would immediately debug bulk_update function to see if affected rows can be calculated\/fetched from what is already there, and then return it if possible.",
        "false_negative":0,
        "false_negative_notes":"Tests should cover all possible solutions since the solution is one dimensional and does not really have multiple inherently different shapes, it also tests the main function so as long as the solution is inside the bulk_update function, it should be covered.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":91,
        "false_negative_decided_by":91,
        "other_major_issues_decided_by":91,
        "difficulty_decided_by":"[91, 10]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":17,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240820_honeycomb",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.53,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"psf__requests-1142",
        "underspecified":1,
        "underspecified_notes":"- The issue description is well-specified, and the expected behavior is implied that GET requests should not include the Content-Length header automatically, and provides enough context for an engineer to understand the problem and why it needs to be addressed.\n- The issue does not provide a specific code example to explain the problem and lacks information about the environment, such as the version of the requests library being used.\n\n",
        "false_negative":1,
        "false_negative_notes":"The issue description specifies that `requests.get` should not automatically add a `content-length` header. The test patch verifies that `content-length` is not present in the headers for `GET` and `HEAD` requests. This directly aligns with the issue's requirement. While this aligns with the issue description that GET requests should not automatically include a 'Content-Length' header, the tests may not cover some unusual implementations that might handle the 'Content-Length' behavior differently. For example, a solution might implement a way to configure this behavior (as suggested by the original issue), rather than outright removal in all cases.\n\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":26,
        "false_negative_decided_by":43,
        "other_major_issues_decided_by":2,
        "difficulty_decided_by":"[43, 2, 26]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":7,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240824_gru",
            "20240820_honeycomb",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.81,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"matplotlib__matplotlib-24627",
        "underspecified":1,
        "underspecified_notes":"The issue is well described that is `cla()` and `clf()` should unset the `.axes` and `.figure` attributes of deparented artists, but while removing an artist from its axes (using remove method) unsets its `.axes` attribute. The solution is to update `cla()` and `clf()` to ensure these attributes are unset when clearing axes or figures. Did not include the case example for figure, here the fuction to be updated is the cla that handles clear of axes only after researching the two functions. There are blanks to fill about this issue as the two functions have different use case, the issue describes well the problem in cla",
        "false_negative":0,
        "false_negative_notes":"The Test Patch introduces the new test case `test_cla_clears_children_axes_and_fig()` to verify that `.axes` and `.figure` are cleared as expected. This test case is well-designed and can be used to validate other solutions as well. The preferred rating is 0.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":68,
        "false_negative_decided_by":39,
        "other_major_issues_decided_by":39,
        "difficulty_decided_by":"[39, 68]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":7,
        "solved_by":[
            "20240920_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.81,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"pytest-dev__pytest-7521",
        "underspecified":0,
        "underspecified_notes":"- The problem statement is clear, concise and explains the issue with proper example. the description clearly explains regression issue using multiple example with different pytest versions.\n- The issue is clear that when using pytest 6, `capfd.readouterr()` converts `\\r` to `\\n`, which works as expected with pytest 5.\n- With all the information, error traces and test case failure logs mentioned in the issue description, the issue is clear and it is evident for an experience developer to fix the reported regressed issue, with an expectation that `capfd.readouterr()` should not convert `\\r` to `\\n`.",
        "false_negative":1,
        "false_negative_notes":"- The problem statement is clear and sets proper expectation from desired solution, and test case `test_cafd_preserves_newlines` verifies the fix for the mentioned regressed issue in the problem statement with different newline inputs `(\"\\n\", \"\\r\\n\", \"\\r\")` with the expectation that the newline should be preserved and should not be modified while using `capfd.readouterr()`.\n- Majority of solution resolving the issue mentioned in the description should be covered using given test patch, however test patch is not verifying both the scenarios using pytest 5 and pytest 6, due to which there could be some unusual solution that can be missed.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":69,
        "false_negative_decided_by":69,
        "other_major_issues_decided_by":69,
        "difficulty_decided_by":"[60, 53]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":8,
        "solved_by":[
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.78,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"sphinx-doc__sphinx-10614",
        "underspecified":1,
        "underspecified_notes":"While the issue description is clear and informative, it lacks some details that could be useful. For example, it does not specify the expected behavior when the links are clicked—should they navigate to a different page, open a new page, or perform some other action? Additionally, it does not mention whether there are any custom configurations or settings in the Sphinx project that might be relevant to the issue.",
        "false_negative":1,
        "false_negative_notes":"If a solution addresses the relative link issue through alternative methods, such as using a custom link resolver or altering the SVG file's XML structure, the test might not account for these approaches. The test primarily checks for the presence of intersphinx links and the correctness of URLs, but it may not cover solutions that achieve the same result through different means.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":70,
        "false_negative_decided_by":70,
        "other_major_issues_decided_by":15,
        "difficulty_decided_by":"[15, 55, 70]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sympy__sympy-16766",
        "underspecified":0,
        "underspecified_notes":"The issue description is clear and well defined.\nIt gives an example code which run into error for pycode.\nIt also give output and the expected behavior\nIt further give code to add in PythonCodePrinter that can fix this issue.",
        "false_negative":0,
        "false_negative_notes":"It checks for PythonCodePrinter that it returns correct result for IndexedBase.\nThe main issue in Section 1 is that PythonCodePrinter generates an error for IndexedBase and so this test case will cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":23,
        "false_negative_decided_by":23,
        "other_major_issues_decided_by":23,
        "difficulty_decided_by":"[23, 13, 76]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":29,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.19,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-24570",
        "underspecified":1,
        "underspecified_notes":"The issue description describes the problem perfectly - that `top` value of the `align` parameter in `HPacker` acts as the `bottom` value, and vice-versa. While the expected behavior is hidden behind a link, it can sensibly be interpreted that the request is for the two behaviors to be interchanged.",
        "false_negative":1,
        "false_negative_notes":"1. The new test `test_packers` checks behaviour of classes `HPacker` and `VPacker` with `align` parameter parametrized to six values `[\"baseline\", \"bottom\", \"top\",\"left\", \"right\", \"center\"]`\n2. The issue description highlights the problem in `HPacker` class only. However, the alignment is being implemented in existing codebase in the function `_get_aligned_offsets` which is not part of any of the classes `HPacker` and `VPacker` but being called from these both classes. Thus, any reasonable solution that fixes the problem will naturally fix it for `VPacker` as well. However, some unusual solution that fixes the problem only for `HPacker` by making the changes in `HPacker` or by using a new separate function for `HPacker` would fail to pass the `VPacker` tests.\n3. Additionally, an unusual solution that alters the behavior of other `align` values like \"baseline\", \"left\", \"right\" or \"center\" unintentionally will also fail the test. \nThus, most of the reasonable solutions will pass the test. But some unusual approaches might fail. Hence marked as 1\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":85,
        "false_negative_decided_by":71,
        "other_major_issues_decided_by":71,
        "difficulty_decided_by":"[71, 85]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":21,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.42,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"pytest-dev__pytest-10051",
        "underspecified":1,
        "underspecified_notes":"The issue description is mostly well specified highlighting the asynchronization between `caplog.get_records()` and `caplog.clear()` functions. It identifies that  `caplog.clear()` replaces the `caplog.records` list with a new empty list instead of clearing the existing list. Although the issue description doesn't specify the expected outcome, it does imply that  `caplog.clear()` should empty the existing list instead of replacing it with a new one.",
        "false_negative":0,
        "false_negative_notes":"The test patch uses the `.clear()` method to ensure that `caplog.clear()` correctly clears the call stage records and that new logs can be captured correctly afterward. It verifies that `caplog.get_records()` reflects the cleared state as expected. The tests are comprehensive and aligned with the issue description, ensuring that any valid solution will pass.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":90,
        "false_negative_decided_by":90,
        "other_major_issues_decided_by":90,
        "difficulty_decided_by":"[90, 88]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-26291",
        "underspecified":1,
        "underspecified_notes":"The issue description explains that in matplotlib, the `inset_locator.inset_axes` function fails to insert axes into a plot. \nIt describes the problem, includes code to reproduce the issue, and details the actual and expected outcomes, along with environment versions.\nWhile the issue is well-documented, the description also refers to an additional example provided via an external link, which could potentially cause important details necessary for debugging or fixing the issue to be overlooked.\nAlso, the desired solution is not provided in the description.",
        "false_negative":1,
        "false_negative_notes":"The test checks if the error is raised when the `bbox_inches` is set to `tight` and if the inset axes is created successfully. However, the test does not check if the error is raised when the renderer is set to `None`. This is a possible solution to the issue and the test should be updated to include this case.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":9,
        "false_negative_decided_by":74,
        "other_major_issues_decided_by":34,
        "difficulty_decided_by":"[34, 74]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":6,
        "solved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240617_factory_code_droid"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.83,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"pytest-dev__pytest-7205",
        "underspecified":1,
        "underspecified_notes":"The issue description provides almost everything that would be required. It has example along with a stacktrace. This is a reasonable understanding as to what a good solution would be. The only missing detail here is if this fix should be applied globally or just for bytes `—bb`.",
        "false_negative":1,
        "false_negative_notes":"The test ensures that running purest with `—setup-show` parameter does not show BytesWarning. This fulfils the issue documentation requirement and will work for most correct solutions. But for some unusual solution that would make this update global i.e not for only bytes, this test won’t be adequate to test those solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":56,
        "false_negative_decided_by":56,
        "other_major_issues_decided_by":56,
        "difficulty_decided_by":"[78, 62]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":21,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.42,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"matplotlib__matplotlib-20826",
        "underspecified":1,
        "underspecified_notes":"Considering that we can just run the code locally to see the plots, there is no issue with the external links to the images provided (to explain the expected and actual outcome) not being accessible. \nThe engineer can decide which tick and tick labels to be made hidden based on the different plot of the code under the different versions.\nWould still rank as 1 though because of the external links.",
        "false_negative":1,
        "false_negative_notes":"We are assuming that the engineer can generate the plot himself so as to fully understand the issue and how to resolve it. They can just run the code for the different module versions and then compare.\nSolutions would normally pass the tests. However, unusual workarounds that fix the issue only visually but do not address the underlying problem in ax.clear() might not pass the test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":18,
        "false_negative_decided_by":18,
        "other_major_issues_decided_by":18,
        "difficulty_decided_by":"[18, 29, 20]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":3,
        "solved_by":[
            "20240924_solver",
            "20240620_sweagent_claude3.5sonnet",
            "20240918_lingma-agent_lingma-swe-gpt-7b"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.92,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-13346",
        "underspecified":1,
        "underspecified_notes":"The issue description highlights a problem with the `__in` operator when used in conjunction with `models.JSONField` on certain databases. The issue description provides sample cases which suggest that the queryset results would differ. There is however no clear indication on how to address this issue and further information would be needed.",
        "false_negative":1,
        "false_negative_notes":"An approach that implements the `__in` lookup recursively could fail the test, while a solution utilizing custom JSON encoding or decoding schema might not pass the test.\nEg of `__in` lookup  implemention recursively: \ndef __in_lookup(value, lookup_value):\n if isinstance(value, list):\n   for item in value:\n      if __in_lookup(value, lookup_value):\n        return True\n     elif isinstance(value,dict):\n       for key, item in value.items():\n         if key in lookup_value or __in_lookup(item, lookup_value):\n           return True\n         else:\n           return value in lookup_values\n         return False\nJSON encoding or decoding schema means using no standard way to convert teh data to or from JSON format which will cause the test to fail.",
        "other_major_issues":0,
        "other_notes":"No other issues with the task",
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":5,
        "false_negative_decided_by":70,
        "other_major_issues_decided_by":53,
        "difficulty_decided_by":"[5, 70]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":3,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240824_gru",
            "20241028_solver"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.92,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sympy__sympy-20154",
        "underspecified":1,
        "underspecified_notes":"The issue is clearly raised.  The `partitions()` function is yielding the output in the same dictionary. Since it does not copy the dictionary,  list(partitions()) of a number would  produce wrong answers(probably, the same elements several times). \nHowever, the contributor may not understand what is mean't by \"would produce wrong answers\". A simple illustration would have helped to understand what is happening. \nA suggested solution is implicitly given. The dictionary should be copied .",
        "false_negative":1,
        "false_negative_notes":"The test patch validates that the `partitions()` function correctly calculates the partitions of an integer under various constraints and that the returned results are correct . However some of the constraints used were not mentioned in the issue description. A valid solution that does not consider this constraint would fail . For instance,  `test_uniq()` function checks if no duplicates are returned. Solutions that do not consider  duplicates since it was not mentioned in the description would fail. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":92,
        "false_negative_decided_by":92,
        "other_major_issues_decided_by":92,
        "difficulty_decided_by":"[92, 84]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":17,
        "solved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.53,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sympy__sympy-15349",
        "underspecified":1,
        "underspecified_notes":"The issue description clearly shows that there's a sign error in the Quaternion.to_rotation_matrix() method's output. However, it doesn't provide the original equations ( \"What was the reference of the original equations\") needed to verify the correct rotation matrix, leaving some gaps to fill in. Thus selecting choice 1. \n",
        "false_negative":1,
        "false_negative_notes":"The test directly targets the issue and ensures that the 'to_rotation_matrix' function generates the correct matrix, but as the issue mentions \"One of the sin(x) functions should be negative.\", it's possible that a solution might ensure that the result is different but that's mathematically incorrect so it would count as an unusual solution. \n",
        "other_major_issues":0,
        "other_notes":"No issed missed.",
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":60,
        "false_negative_decided_by":13,
        "other_major_issues_decided_by":27,
        "difficulty_decided_by":"[27, 60]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":14,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241001_nfactorial",
            "20240824_gru",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.61,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sympy__sympy-20916",
        "underspecified":0,
        "underspecified_notes":"The problem is clear. It seems that `pprint` Unicode does not format subscripts on Greek letters. The ticket description is well-structured and clear.",
        "false_negative":1,
        "false_negative_notes":"The tests are testing some of the unicode characters passed to the split_super_sub funciton which is a function called by pretty print functions. This is the reasonable solution, However, there seems to be some unreasonable solutions that wouldn't pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":7,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 43]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-12741",
        "underspecified":0,
        "underspecified_notes":"The `DatabaseOperations.execute_sql_flush()` method requires a `using` argument to specify the database connection alias, but this can be inferred from `self.connection.alias`. To simplify the method, remove the `using` argument and determine the alias internally, aligning with existing usage patterns and reducing redundancy.\n\nThe issue is clearly defined as it specifies the cause and the necessary changes.",
        "false_negative":0,
        "false_negative_notes":"The tests for `DatabaseOperations.execute_sql_flush()` have been updated to remove the `using` argument, ensuring the method correctly infers the database alias from `self.connection.alias`, maintaining functionality and validating the simplification.\n\nThe tests cover all successful solutions as they target core functionality.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":14,
        "false_negative_decided_by":14,
        "other_major_issues_decided_by":14,
        "difficulty_decided_by":"[14, 26]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":15,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.58,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sympy__sympy-22080",
        "underspecified":0,
        "underspecified_notes":"The issue provides a complete, step-by-step example that reproduces the problem. This includes the necessary imports, symbol definitions, expression construction, and the invocation of lambdify with different settings. This makes it easy for developers or contributors to replicate the issue and verify the bug.\nBy including the output of the functions and the source code generated by lambdify, the issue demonstrates precisely how the output differs depending on the modules parameter. This effectively highlights the unexpected behavior and provides a clear contrast between the expected and actual outputs.\nThe use of comments in the code snippets helps clarify the purpose of each step, making the explanation accessible even to those who may not be immediately familiar with the lambdify function or the Mod operation.",
        "false_negative":1,
        "false_negative_notes":"The test patch add test cases for dotprint, lambdify and some refactoring in existing test cases for power optimization.\nThe gold patch handles the issue by assigning weight instead of adding a class for unary minus. This is reasonable solution.\nBut there can be unususl solution that implement class for unary minus and may not be covered for power optimization test cases.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":84,
        "false_negative_decided_by":23,
        "other_major_issues_decided_by":23,
        "difficulty_decided_by":"[84, 23]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"psf__requests-1766",
        "underspecified":1,
        "underspecified_notes":"The issue description specifies that the qop-options directive should be quoted with double quotes according to RFC2617 and mentions that curl handles this correctly. However, it does not describe the current behavior of the requests library or provide specific steps to reproduce the issue. While the required change is reasonably clear, the lack of details about the current implementation means there are some blanks to fill in. An experienced engineer would need to investigate the current behavior of the requests library regarding qop-options to understand the exact changes needed.",
        "false_negative":0,
        "false_negative_notes":"The tests are well-scoped and cover all reasonable solutions to the issue. They specifically check for the correct quoting of the qop value in the Authorization header, ensuring that the change meets the requirements outlined in the issue description. The test ensures that the qop value is correctly quoted with double quotes, which directly addresses the problem described. This makes the tests appropriate for verifying any correct implementation of the solution.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":29,
        "false_negative_decided_by":29,
        "other_major_issues_decided_by":29,
        "difficulty_decided_by":"[59, 74]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":23,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240820_epam-ai-run-gpt-4o",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.36,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sympy__sympy-21612",
        "underspecified":0,
        "underspecified_notes":"- The issue description highlights a problem with the LaTeX parsing of fractions in the Sympy library.\n- The expression `\\\\frac{\\\\frac{a^3+b}{c}}{\\\\frac{1}{c^2}}` is incorrectly parsed as `((a**3 + b)\/c)\/1\/(c**2)` instead of the expected `((a**3 + b)\/c)\/(1\/(c**2))`. \n- The missing brackets in the denominator lead to an incorrect expression.\n- The provided information includes the tested versions and steps to reproduce the issue and it is well specified and clear for the successful solution.",
        "false_negative":0,
        "false_negative_notes":"- The test case is ensuring that the multiplication of 𝑥 and the inverse of 1\/𝑦 (with evaluation turned off) results in the expected string representation ′𝑥\/(1\/𝑦)′.\n- The test case confirms that the bracket is maintained in the expression which is what the issue is about.\n- The test case is correct and should handle the `Mul` and `Pow` operations correctly with `evaluate=False`, ensuring that the solution which resolved the issue is covered.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":66,
        "false_negative_decided_by":66,
        "other_major_issues_decided_by":66,
        "difficulty_decided_by":"[66, 20]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-10097",
        "underspecified":0,
        "underspecified_notes":"The `URLValidator` incorrectly accepts URLs with unencoded `\":\", \"@\", \"\/\"` in usernames and passwords, violating RFC 1738. Updating the validator to enforce percent-encoding for these characters will resolve this issue.\n\nThe issue is clearly defined, stating both the cause and the possible solution.",
        "false_negative":0,
        "false_negative_notes":"The updated tests ensure the `URLValidator` rejects URLs with unencoded `\":\", \"@\", \"\/\"` in usernames and passwords, confirming compliance with RFC 1738 by adding such invalid cases and correcting a valid URL to have encoded characters.\n\nThe tests comprehensively cover all successful solutions by targeting core functionality.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":14,
        "false_negative_decided_by":14,
        "other_major_issues_decided_by":14,
        "difficulty_decided_by":"[14, 44, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":7,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20241028_agentless-1.5_gpt4o",
            "20241001_nfactorial",
            "20240824_gru",
            "20231010_rag_swellama7b",
            "20241007_nfactorial",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.81,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-11728",
        "underspecified":1,
        "underspecified_notes":"The ticket is complaining about a bug with the replace_named_groups() function failing to replace the final named group in a URL pattern if the pattern is missing a trailing \/. The reproducible example `r'entries\/(?P<pk>[^\/.]+)\/relationships\/(?P<related_field>\\w+)'` made it easier to figure out the issue. The ticket only mentions the issue in `replace_named_groups` but it also exists in `replace_unnamed_groups` and any professional developer would notice the issue in both of them. It is clear what needs to be done here.",
        "false_negative":1,
        "false_negative_notes":"The tests are comprehensive and align well with the issue description, focusing on ensuring regex patterns without a trailing '\/' are correctly simplified, there remains a possibility that some unconventional yet valid solutions could be overlooked. These solutions might employ different methodologies or regex constructions to achieve the required functionality but might not match the precise expected output patterns defined in the tests. This slight variance in approach could lead to failing the tests despite correctly addressing the issue, which supports a rating.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":7,
        "false_negative_decided_by":13,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 18, 13]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-13315",
        "underspecified":1,
        "underspecified_notes":"While the issue description clearly states that using a Q object as “limit_choices_to” on a ForeignKey can lead to duplicate options in a form, it lacks specific details about how this issue manifests and under what conditions it occurs. The reference to a “regression test in patch” suggests there is existing code that demonstrates the problem, but without viewing that code or further examples, it may be challenging to fully understand the scope of the issue. ",
        "false_negative":0,
        "false_negative_notes":"The test checks that providing a Q object as the `limit_choices_to` option of a foreign key involving a join does not lead to duplication of the options on the form for the model.. This is exactly what the issue description was about.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":81,
        "false_negative_decided_by":63,
        "other_major_issues_decided_by":63,
        "difficulty_decided_by":"[81]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":9,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20241028_solver",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.75,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-18189",
        "underspecified":1,
        "underspecified_notes":"The issue description provides clear examples of inconsistent behavior in the diophantine function when using the `permute=True` option with different orderings of the symbols. There is some clarity needed on the point about expected behavior which is not explicitly stated although we can infer that solution would likely return same number of solution despite of ordering of symbols. hence, choice 1 is preferred.",
        "false_negative":1,
        "false_negative_notes":"The test patch provided for the issue checks whether the diophantine function returns consistent results regardless of the order of the symbols when permute=True. The tests are designed to ensure that the set of solutions is the same for both symbol orders (x, y) and (y, x), which directly addresses the issue described. But there are some unusual solution like if someone do internal sorting or normalisation that changes the order of solution in such a way that it doesn't match specific output format. Hence, choice 1 is preferred.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":77,
        "false_negative_decided_by":77,
        "other_major_issues_decided_by":77,
        "difficulty_decided_by":"[77, 17]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":8,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20240924_solver",
            "20240820_honeycomb",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.78,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"sympy__sympy-15875",
        "underspecified":0,
        "underspecified_notes":"It is clear that simplify should return None for is_zero assumption on complex numbers if it cannot be determined that but should not give the wrong answer.\nFull code is given which make it easy to reproduce the issue along with outputs.\nThere is another issue mentioned but that is the impact of this issue as it effects matrix rank, this is not causing any confusion in understanding the issue description. That's why I'm giving it a score of 0.",
        "false_negative":0,
        "false_negative_notes":"The test case check if is_zero assumption on complex numbers returns None.\nIt only checks for the issue described in issue description and does not add any irrelevant test case so It will cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":23,
        "false_negative_decided_by":23,
        "other_major_issues_decided_by":23,
        "difficulty_decided_by":"[23, 30, 60]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":8,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20241028_agentless-1.5_gpt4o",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.78,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-12273",
        "underspecified":1,
        "underspecified_notes":"The issue description concerning resetting the primary key in a child model derived from Django's `Item` model is generally well-defined. The example provided includes specific class definitions (`Item` and `Derived`) and a test case (`SaveTestCase`) to demonstrate the unexpected behavior. However, there are some blanks regarding the exact outcome of the operation when the primary key is set to `None` and the object is saved—specifically, whether it throws an error or incorrectly updates an existing record without creating a new one. ",
        "false_negative":1,
        "false_negative_notes":"The tests verify that new instances are correctly created in both single and multi-table inheritance contexts without overwriting existing data, directly testing the changes implemented via `_set_pk_val` method adjustments. This focus makes the tests highly effective for the specific solution implemented but could potentially overlook other valid approaches that also ensure the primary key is reset and a new instance is created but do not utilize the exact handling of `_meta.parents` or other specific attributes manipulated in the Gold Patch. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":13,
        "false_negative_decided_by":13,
        "other_major_issues_decided_by":13,
        "difficulty_decided_by":"[13, 18]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-16032",
        "underspecified":1,
        "underspecified_notes":"The issued description highlights an error when trying to perform a subquery using Django Querysets. It indicates that using the `__in` filter when an alias is applied after an annotation generates an SQL `OperationError` with the error message \"django.db.utils.OperationalError: sub-select returns 10 columns - expected 1\". The issue description presents a test case and indicates the fact that an error occurred. It however failed to demonstrate the root cause of the error or explicitly suggest a potential solution. Although the issue description title states that the `alias()` does not correctly clear the selected fields from the annotated QuerySet when used in a subquery suggesting a potential issue with `Queryset` selected fields, further investigation is needed to better understand the problem at hand and derive an appropriate solution.",
        "false_negative":0,
        "false_negative_notes":"One of the tests are the same as the one provided in the ticket. So the solution to this ticket should pass this test. The other test case are testing having annotation and alias in subquery. Any solution to this problem should pass both of the tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":5,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 5, 55]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20240924_solver",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-15127",
        "underspecified":1,
        "underspecified_notes":"While it is clear that the LEVEL_TAGS should be updated to reflect new settings, the exact steps to achieve this are not detailed which leaves some room for interpretation.",
        "false_negative":0,
        "false_negative_notes":"The test validates that base.LEVEL_TAGS updates correctly when MESSAGE_TAGS is overridden.\nsince it is comparing base.LEVEL_TAGS with the message_tags it will work for the gold patch and alternate solutions as well.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":32,
        "false_negative_decided_by":24,
        "other_major_issues_decided_by":24,
        "difficulty_decided_by":"[24, 14]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":3,
        "solved_by":[
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_solver"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.92,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sympy__sympy-23824",
        "underspecified":0,
        "underspecified_notes":"The issue description title clearly state the problem with physics.hep.kahane_simplify() incorrectly reversing the order of leading uncontracted gamma matrices.\nfrom the code example, we see that this is a case of having similar gamma product expression (difference only in arrangement) not yielding the same result.\n Thus, we know what the expected behaviour should be, i.e ensuring kahane simplification of Gamma product expression give the correct result irrespective of the arrangements of the Gamma matrices. Hence, it is rated 0.\n\n",
        "false_negative":0,
        "false_negative_notes":"The test seems to check the kahane_simplify() when the Gamma matrices expression are arranged in different orders of product (i.e t = (G(mu)*G(-mu)*G(rho)*G(sigma)) & t = (G(rho)*G(sigma)*G(mu)*G(-mu)))  and yield the same correct results. Thus, it is rated 0 because it perfectly cover all the solutions to the issue mentioned in the issue description",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":16,
        "false_negative_decided_by":16,
        "other_major_issues_decided_by":16,
        "difficulty_decided_by":"[16, 53]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":19,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.47,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-20428",
        "underspecified":0,
        "underspecified_notes":"The issue is well-specified with a clear problem statement, root cause analysis, and a suggested solution. It details the inconsistent behaviour of `clear_denoms()` with examples and identifies the unstripped leading zero in the polynomial's internal representation. This makes it clear what is required for a successful solution, So it should be rated as 0.",
        "false_negative":0,
        "false_negative_notes":"The test code cover the issue by verifying the `clear_denoms()` correctly produces a zero polynomial, ensuring consistent behaviour with `is_zero` and `as_expr().is_zero`,  and checking the methods like `terms_gcd()` and `primitive()` work without any exceptions. So it should be rated as 0.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":62,
        "false_negative_decided_by":62,
        "other_major_issues_decided_by":62,
        "difficulty_decided_by":"[53, 12]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-7757",
        "underspecified":0,
        "underspecified_notes":"The problem is clear and easy reproducible. The user also specified the environment info. The problem is clearly that the default value for positional only argument is not being documented.",
        "false_negative":0,
        "false_negative_notes":"The test patch are testing the given prototype in the ticket description which is `foo(a, b=0, \/, c=1)`. Any fix for the problem should pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":7,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 35, 42]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":3,
        "solved_by":[
            "20240924_solver",
            "20241028_solver",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.92,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-15467",
        "underspecified":0,
        "underspecified_notes":"The issue is clearly stated: when using ModelAdmin with radio_fields defined, the custom empty_label set in formfield_for_foreignkey is overridden by the default empty_label and the specific change needed to fix the issue is provided.",
        "false_negative":0,
        "false_negative_notes":"The test test_radio_fields_foreignkey_formfield_overrides_empty_label specifically targets the issue by checking if the custom empty_label set in the formfield_overrides is correctly applied and does not rely on any new function, variable name, or error message introduced in the Gold Patch that was not mentioned in the issue description.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":32,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":32,
        "difficulty_decided_by":"[32, 5, 52]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":30,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.17,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-10449",
        "underspecified":0,
        "underspecified_notes":"The problem statement claims using `autodoc_typehints = \"description\"` option causes Sphinx's autoclass to include the class's `return type` where it is not required. It provides sample code to reproduce the issue, the current behaviour and the expected behaviour. This information seems helpful in understanding what a successful solution would look like.",
        "false_negative":1,
        "false_negative_notes":" The golden patch resolves the issue by ensuring the return type is suppressed for class object types. The test eliminates the return type from the list of expected items. This is helpful but may fails for unusual solutions that may change the wording of the return type to show the class does not return anything. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":11,
        "false_negative_decided_by":11,
        "other_major_issues_decided_by":11,
        "difficulty_decided_by":"[11, 59]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":6,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240824_gru",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.83,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"sympy__sympy-13372",
        "underspecified":1,
        "underspecified_notes":"The issue is that when using `Mul` with `Max` and calling `evalf`, changing the order of the arguments leads to an `UnboundLocalError`. To fix this issue, as described, the `elif` clauses that define `reprec` and `imprec` should include an `else` statement that raises a `NotImplementedError`. However, it is unclear why raising a `NotImplementedError` solves the issue, but an experienced programmer may be able to find out.",
        "false_negative":0,
        "false_negative_notes":"The test case is added to ensure that `Mul(Max(0, y), x, evaluate=False).evalf()` does not produce an `UnboundLocalError` and instead evaluates correctly. This is directly related to the issue, and any reasonable solution will pass the test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":42,
        "false_negative_decided_by":42,
        "other_major_issues_decided_by":42,
        "difficulty_decided_by":"[42, 18, 41]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":18,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.5,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-11299",
        "underspecified":0,
        "underspecified_notes":"- The issue description highlights incorrect SQL generation for `CheckConstraint` with a combination of `OR` and `AND` clauses in Django, particularly for SQLite and Oracle.\n- It explains that the problem arises from the use of fully qualified names, such as `’mytable’.’my_field’`, in a check constraint.\n- It mentions that the `AND` operator uses fully qualified names, while the `OR` operator uses only the SimpleCol name.\n- The issue occurs because the fully qualified field name causes migration failures. When the old table is dropped and the staging table is renamed, the constraints fail with a malformed schema exception (on SQLite), indicating the field doesn’t exist on the table.\n- It provides sample migrations and the underlying SQL.\n- The expected behavior is for the underlying SQL query to use only the SimpleCol name without the table name.",
        "false_negative":0,
        "false_negative_notes":"- The new test function `test_simplecol_query` checks whether the generated query uses SimpleCol, aligning with the issue description's requirements.\n- The new test function `test_add_or_constraint` ensures that adding complex constraints with `AND` and `OR` operations works correctly.\n- Therefore, the test cases address the issue described. Additionally, the test functions do not depend on the specific solution implemented.\n- Thus, the tests should cover all possible scenarios effectively.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":3,
        "false_negative_decided_by":3,
        "other_major_issues_decided_by":3,
        "difficulty_decided_by":"[32, 12]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-16493",
        "underspecified":1,
        "underspecified_notes":"The reporter mentions that issue arises because Django's migration framework deconstructs the `storage` argument of a `FileField` based on whether `self.storage` equals `default_storage`. However, if `storage` is a callable that returns `default_storage`, the deconstruction fails to correctly identify it as a callable, resulting in intermittent inclusion or omission of `storage=myapp.models.get_storage` in generated migrations. This occurs due to the incorrect evaluation of `self.storage` when checking against `default_storage` within the `deconstruct` method.\nThe issue itself is extremely well-specified, and it is clear from the description that a successful solution would include the `storage=myapp.models.get_storage` in migrations but stay consistent.",
        "false_negative":0,
        "false_negative_notes":"The test is well-scoped and covers the specific scenario described in the issue description. It does not rely on any information not present in the issue description, and it does not introduce any new function names, variable names, or error messages that are not mentioned in the issue description.\nThe test is also specific to the issue at hand and does not test any unrelated functionality. It is a targeted test that ensures the deconstruct method behaves correctly when the storage argument is a callable that returns default_storage.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":27,
        "false_negative_decided_by":40,
        "other_major_issues_decided_by":40,
        "difficulty_decided_by":"[27]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":23,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.36,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-8551",
        "underspecified":0,
        "underspecified_notes":"- The description highlights that the implicit cross-references created by the info fields `:type:` and `:rtype:` seem to perform lookups differently than explicit cross-reference roles. For unqualified names, it appears they search for the name in every (sub)module instead of in the current module and its parent modules.\n- The description provides the code to reproduce the issue, along with the actual results and the expectation that there should be no warnings, and the two mentioned types should resolve to `mod.submod.A`.\n- Since the expectation is clear, the issue is well-defined, and the description includes the code to reproduce it, the preferable choice is option 0.",
        "false_negative":0,
        "false_negative_notes":"The Test Patch provides a new test case, `test_info_field_list()`, to verify the info fields `:type:`. The new test case is proficient at verifying the requirements. We can also use this test to validate other solutions. Since the tests can cover all possible solutions, the preferable choice is option 0.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":39,
        "false_negative_decided_by":39,
        "other_major_issues_decided_by":39,
        "difficulty_decided_by":"[39, 20]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-7748",
        "underspecified":1,
        "underspecified_notes":"The issue description points out that for C++ classes using SWIG (Simplified Wrapper and Interface Generator), the docstring currently only includes the signature of the first overloaded method, with the signatures of other overloaded methods missing.\n\nWhile the description doesn’t specify how to handle the presentation of overloaded methods—such as whether to use text like \"Overloaded\" or to only include the signatures—it is clear that the solution should ensure that the signatures of all overloaded methods are listed at the beginning of the docstring.",
        "false_negative":1,
        "false_negative_notes":"The test patch evaluates how docstrings are generated for overloaded functions within a class. Specifically, it examines a C++ class and its functions after they have been wrapped by SWIG to see if the docstrings are correctly formatted.\n\nIn some cases, unusual solutions might label overloaded functions with text such as \"Overloaded function foo\" or, depending on the number of overloads, use designations like \"Overloaded 1.\" For example, a docstring might appear as 'E(foo: str, bar: str, baz: str) Method overload 1 -> None'. While this approach is not typical, it is possible that some implementations could use it to differentiate between methods with the same name but different signatures.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":75,
        "false_negative_decided_by":75,
        "other_major_issues_decided_by":75,
        "difficulty_decided_by":"[75, 73]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-13810",
        "underspecified":1,
        "underspecified_notes":"The issue description provides a clear explanation of the problem, including the error message and the steps to reproduce it. It also provides a link to an example project that demonstrates the issue. \nHowever, there are some unclear points, such as the role of django-debug-toolbar in the issue and the exact requirements for the middleware to work correctly in an ASGI context.",
        "false_negative":1,
        "false_negative_notes":"The Test Patch adds a new test test_async_and_sync_middleware_chain_async_call that verifies the correct behavior of the middleware chain when using both async and sync middlewares. The test checks that the middleware is adapted correctly and that the MiddlewareNotUsed exception is raised as expected.\nHowever, it's possible that some unusual solutions might not be caught by this test. For example, if a solution modifies the middleware chain in a way that's not exactly like the Gold Patch, the test might not detect it.\nThe test relies on the specific implementation details of the Gold Patch, such as the use of adapted_handler and the logging messages. While this is not necessarily a problem, it might make the test less flexible and more prone to breaking if the implementation changes in the future.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":40,
        "false_negative_decided_by":40,
        "other_major_issues_decided_by":40,
        "difficulty_decided_by":"[32, 5]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":16,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.56,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-13344",
        "underspecified":1,
        "underspecified_notes":"In this case, the issue describes the problem with enough specificity by pointing out how the first middleware behaves differently from others, expecting a coroutine instead of an HttpResponse. This provides a clear problem statement and an indication of what needs fixing (ensuring consistent response handling across middlewares), even though it doesn't specify how to adjust the code. The developer has enough context to start investigating and testing solutions, making rating 1 a fitting choice.",
        "false_negative":1,
        "false_negative_notes":"These tests effectively validate fundamental middleware initialization and functionality, ensuring that standard solutions correcting the initialization process will result in proper handling of both synchronous and asynchronous responses. However, they might not capture highly unconventional solutions that address the specific coroutine handling issue in an ASGI setup without altering initialization patterns. This scope ensures that the tests are broadly applicable and support most reasonable fixes to the described problem, but they might overlook more unique or indirect methods that achieve compliance with the desired middleware behavior in less typical ways.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":13,
        "false_negative_decided_by":13,
        "other_major_issues_decided_by":13,
        "difficulty_decided_by":"[26, 39]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"sympy__sympy-12489",
        "underspecified":1,
        "underspecified_notes":"The issue description clearly outlines the problem with subclassing combinatorics.Permutation and suggests an elegant solution by using classmethods and proper Python instance creation mechanisms. However, it does not provide a reproducible example or the expected output, which would help in fully understanding the issue and verifying the solution. An experienced engineer can still interpret the necessary changes to the __new__ and _af_new methods, but having a concrete example would make the task clearer.",
        "false_negative":0,
        "false_negative_notes":"The tests are well-designed to verify the subclassing issue is resolved. They introduce a CustomPermutation class that extends Permutation and include various operations to ensure the subclass behaves correctly. These tests check equality, function calls, and operator overloading, covering all necessary aspects to confirm that Permutation can be subclassed properly. The tests do not rely on specific implementation details that would unfairly penalize other correct solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":29,
        "false_negative_decided_by":29,
        "other_major_issues_decided_by":29,
        "difficulty_decided_by":"[29, 13, 56]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_0"
    },
    {
        "instance_id":"django__django-13012",
        "underspecified":1,
        "underspecified_notes":"The issue is related to the Django `ExpressionWrapper` function. When this function is used with constant expression then Django includes this constant with `GROUP BY` clause and Postgres DB does not allow aggregate functions in the GROUP BY clause, leading to the \"ProgrammingError\".\nThe problem statement is clear and explains the issue in detail. However, the desired solution is not mentioned in the description, but it is mostly clear which function needs changes to fix this issue.",
        "false_negative":1,
        "false_negative_notes":"1. A new test class `ExpressionWrapperTests` is introduced. \nThe method `test_empty_group_by` perfectly checks the exact code example shared in the issue description. It uses a method `get_group_by_cols` in class `ExpressionWrapper` which was introduced in the gold patch and asserts if wrapped constant expression is given, it returns empty list `[]`.\n3. The naming of the method `get_group_by_cols` follows\nthe convention so that it would get called by Django dynamically. It is a standard\napproach and anyone approaching the problem with this method does not have a choice to use a different function name. \n4. The other test `test_non_empty_group_by` checks if wrapped incorrect expression is given, it returns a non empty list containing the expression.\n5. The standard approach will use the same methodology to solve this problem and hence would have same function names. Thus, reasonable approaches will pass the test. However, there could be some unusual methodologies to approach this problem that might not introduce the method `get_group_by_cols`. Thus, the test will be failed by such unusual approaches.\nHence, marked as 1.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":49,
        "false_negative_decided_by":71,
        "other_major_issues_decided_by":49,
        "difficulty_decided_by":"[49, 71, 32]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":13,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20241028_solver",
            "20241016_composio_swekit",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.64,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-11099",
        "underspecified":0,
        "underspecified_notes":"- The issue clearly describes the problem with ASCIIUsernameValidator and UnicodeUsernameValidator allowing trailing newlines in usernames.\n- The expected solution is to replace r'^[\\w.@+-]+$' regex with r'\\A[\\w.@+-]+\\Z'.\n- Overall, the issue is well-specified.",
        "false_negative":0,
        "false_negative_notes":"- The test patch adds new strings in the test case inputs having trailing newline, and verifies the validity of the usernames as described in the issue description.\n- As long as the solution addresses the described problem, the test patch would cover it.\n- Therefore, the tests perfectly covers all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":26,
        "false_negative_decided_by":26,
        "other_major_issues_decided_by":26,
        "difficulty_decided_by":"[26, 18, 19]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":31,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.14,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-11400",
        "underspecified":1,
        "underspecified_notes":"The issue description is fairly clear but leaves some details ambiguous. It specifies that RelatedFieldListFilter does not fallback to Model._meta.ordering and that RelatedOnlyFieldListFilter does not apply any ordering at all. The issue references specific lines in filters.py where the ordering is set to an empty tuple and where the ordering kwarg is omitted, providing a good starting point. However, it does not explicitly state what the final ordering behavior should be, especially in cases where multiple orderings might be defined. The issue assumes knowledge of how ModelAdmin and Meta.ordering interact, requiring the engineer to fill in these gaps with reasonable interpretations based on the code and Django's documentation.",
        "false_negative":1,
        "false_negative_notes":"The tests cover the majority of correct solutions by checking the ordering behavior of RelatedFieldListFilter and RelatedOnlyFieldListFilter based on ModelAdmin.ordering and Meta.ordering. They are comprehensive in validating various scenarios, such as ForeignKey relationships and default ordering. However, there is a possibility that some unusual solutions, such as alternative methods to set or override ordering within custom filters or different handling of dynamic ordering, may not be fully captured.  Additionally, it includes tests for ensuring the get_choices method respects Model._meta.ordering, which is a related but not explicitly mentioned problem in the original issue description.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":80,
        "false_negative_decided_by":80,
        "other_major_issues_decided_by":80,
        "difficulty_decided_by":"[80, 62]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"django__django-14404",
        "underspecified":0,
        "underspecified_notes":"`FORCE_SCRIPT_NAME` is a Django setting that specifies a prefix for all URL paths. For example, setting `FORCE_SCRIPT_NAME = '\/myapp'` ensures all URLs start with `\/myapp`.\n\nThe issue states that the `catch_all_view` function does not redirect to the path including the script name, leading to incorrect redirects. The redirect should use the value in the request.path variable instead of request.path_info.",
        "false_negative":0,
        "false_negative_notes":"These tests ensure that the `catch_all_view` function correctly redirects to a url which contains the script name specified by `FORCE_SCRIPT_NAME` or `SCRIPT_NAME`. They directly target the issue.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":35,
        "false_negative_decided_by":35,
        "other_major_issues_decided_by":35,
        "difficulty_decided_by":"[35, 7, 42]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-10466",
        "underspecified":0,
        "underspecified_notes":"The description is clear to highlight the issue that the location of the message is duplicated. It shares an example for the same and also points to the source of the error with a potential solution. Further, it shares a way to reproduce the error and the expected behavior. Thus, the issue is well-specified.",
        "false_negative":0,
        "false_negative_notes":"The test checks for duplication of locations by adding duplicate locations for the message which is specifically the issue highlighted in the description. Thus the test should be able to cover all possible solutions aimed at removing the duplicates.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":76,
        "false_negative_decided_by":76,
        "other_major_issues_decided_by":76,
        "difficulty_decided_by":"[76, 39]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":16,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240820_honeycomb",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.56,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-13343",
        "underspecified":0,
        "underspecified_notes":"The issue is well-specified and clearly describes the problem and expected behavior for FileField with a callable storage parameter. It outlines the current incorrect behavior where the callable is evaluated during deconstruction, and specifies the correct behavior, which is to return a reference to the original callable. It also references relevant documentation and previous implementations. An experienced engineer can understand the problem and work on a solution based on this information.",
        "false_negative":1,
        "false_negative_notes":"The test only verifies a specific type of callable (presumably simple and directly returning a storage instance). If the callable storage involves more complex logic or conditional paths, the behavior during deconstruction might differ. For instance, a callable that returns different storage types based on the environment or other runtime conditions might not behave as expected. While unlikely and perhaps outside the intended use case, if the callable were to return None or an invalid value, the current setup might not handle or report this clearly.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":29,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":29,
        "difficulty_decided_by":"[29, 32]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":12,
        "solved_by":[
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240820_honeycomb",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.67,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-16642",
        "underspecified":1,
        "underspecified_notes":"- The issue description states that there is a problem with guessing the MIME type for “br” and “Z” file types, causing them to be incorrectly identified as text\/html.\n- It provides a sample code snippet that can be used to reproduce the issue.\n- While the issue description is short and well-specified, it does not mention which MIME type to use. However, this information can be easily found in the standard MIME type chart list.\n- Hence, it deserves a rating of 1.",
        "false_negative":1,
        "false_negative_notes":"-There are no tests that validate the exact code snippet mentioned in the issue description\n-The gold patch fixes the mechanism that will fix the issue\n-Although most correct solutions will align with the same strategy, some unusual solutions that fix the issue with a different mechanism may fail the tests. However, this is less likely",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":3,
        "false_negative_decided_by":64,
        "other_major_issues_decided_by":3,
        "difficulty_decided_by":"[3, 64, 69]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":14,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20241016_composio_swekit",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.61,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-25931",
        "underspecified":0,
        "underspecified_notes":"- The issue text clearly specifies that when Isolation forest is fitted using a pandas data frame, it generates a warning saying “X does not have valid feature names, but IsolationForest was fitted with feature name”. This is said to occur only when value other that ‘auto’ is provided for the contamination parameter.\n- The issue text also provides the code\/steps to reproduce the issue\n- The expected results that no such warning should be raised has been communicated properly\n- The potential root cause of the issue is also mentioned to be passing contamination!=‘auto’ causes estimator to call predict on the training data to determine the `offset_` params. This should provide a good headstart to the developer.",
        "false_negative":0,
        "false_negative_notes":"- The test are designed to fail when a UserWarning is raised when IsolationForest is fitted using a dataframe and pass only when no such warning is raised\n- This should cover all the potential solutions of the problem mentioned in the issue text",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":34,
        "false_negative_decided_by":34,
        "other_major_issues_decided_by":34,
        "difficulty_decided_by":"[34, 15, 39]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":11,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.69,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-22914",
        "underspecified":0,
        "underspecified_notes":"I would rate this 0. The issue description mentions that the PythonCodePrinter in SymPy doesnt support generating Python code for Min and Max functions, resulting in unsupported output. Adding _print_Min and _print_Max methods to the printer, which convert these functions to Python's min and max, resolves this issue. This is pretty clear and well specified and it is clear what is required for a successful solution.  ",
        "false_negative":1,
        "false_negative_notes":"The tests cover the majority of solutions however it could miss some unusual solutions that implement the methods differently by using different argument types etc thus I would choose 1 for this. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":60,
        "false_negative_decided_by":60,
        "other_major_issues_decided_by":60,
        "difficulty_decided_by":"[60, 30, 10]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":27,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.25,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sphinx-doc__sphinx-9461",
        "underspecified":1,
        "underspecified_notes":"The issue description states a list of methods that are not documented when trying to produce documentation using sphinx doc. It suggests that sphinx does not seem to document any such class methods that wrap other descriptors such as `property()` and this shouldn't be the case as it is expected that \"Methods that are decorated with both `@classmethod `and `@property` should be documented appropriately\". The issue description is thorough in stating \"What\" the problem however the issue description could have went on to state \"How\" to arrive at a desired reasonable solution.  Nonetheless, there is reasonable expectation that using an `@property` decorator on a `@classmethod` shouldn't hinder document generation.",
        "false_negative":0,
        "false_negative_notes":"The solution appends `classmethod` and `property ` and handles the logic of their addition to the docstring. The tests seem to align with the expected behaviour by checking for various properties in the docstring. The test seem to cover a wide range of possible solutions that align with the expected output\/behaviour.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":5,
        "false_negative_decided_by":11,
        "other_major_issues_decided_by":11,
        "difficulty_decided_by":"[5, 3]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_0"
    },
    {
        "instance_id":"sympy__sympy-18698",
        "underspecified":1,
        "underspecified_notes":"The issue is mostly clear but some gaps needs to be filled. The `sqf_list` function in SymPy produces inconsistent results, failing to group polynomial factors correctly by multiplicity but only 2 examples are provided, its not clear when exactly this happens, meaning the nature of the failure is not known. Due to this, reader will have to find the nature of the failure himself hence its rated 1. ",
        "false_negative":1,
        "false_negative_notes":"The tests cover the some of the examples provided in the issue description and ensure that valid solutions will pass for that specific case. However, the tests work for sqf_list, but the absence of tests dedicated for sqf might affect the completeness of the solution.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":30,
        "false_negative_decided_by":18,
        "other_major_issues_decided_by":18,
        "difficulty_decided_by":"[18, 30, 29]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-14752",
        "underspecified":0,
        "underspecified_notes":"The description explains that adding new attributes to autocomplete field results in Django currently requires a lot of work. It suggests a solution: creating a new method serialize_result in the AutocompleteJsonView class to make it easier to customize results.  Since the issue is well-specified and it is clear what is required for a successful solution,  selecting 0 here would be appropriate.  ",
        "false_negative":1,
        "false_negative_notes":"The tests cover most correct solutions but miss some unusual examples from the problem statement, such as adding a notes field to the results. They only check the addition of a posted field, not other potential customizations. This means some valid solutions might not be covered. Including tests for different types of customizations, like the notes field. Thus selecting 1 here. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":30,
        "false_negative_decided_by":30,
        "other_major_issues_decided_by":30,
        "difficulty_decided_by":"[6, 14]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":26,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240820_epam-ai-run-gpt-4o",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.28,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-15499",
        "underspecified":0,
        "underspecified_notes":"The ticket is asking for a new feature to have CreateModel + AlterModelManagers become just CreateModel as the same behavior of CreateModel + AlterModelOptions. The ticket is very clear and it is clear what needs to be done starting from there.",
        "false_negative":0,
        "false_negative_notes":"The test patch is testing that CreateModel + AlterModelManagers become CreateModel which is the same ticket request. Any solution to the problem should pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":7,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 5, 14]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":19,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.47,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-25122",
        "underspecified":0,
        "underspecified_notes":"The issue description states that there is a bug in the windows correction method within the function \"mlab._spectral_helper(...)\". The requested change is to remove `np.abs()` at lines 427 and 430 in file: “matplotlib\/mlab.py” because it gives wrong results for Windows with the negative values. The description also provides the implementation of the same method from `scipy` library, which validates the bug.  A minimal example code is also provided.\nOverall, the description is clear and includes all the necessary details to resolve the problem.",
        "false_negative":0,
        "false_negative_notes":"In the test patch two existing tests have been modified, and a new  test is added. In the newly added test case “test_psd_window_flattop” window will contain negative values, and for this window it compares `psd` values obtained with: `scale_by_freq = True` and `scale_by_freq = False`. The `assert_allclose` will confirm that both lhs and rhs are equal to 1, and if the issue is not resolved properly, then one or both will deviate from 1.\nThis is a similar case mentioned in the issue description and it confirms whether the issue is resolved or not. The modifications in other two tests are also checking the `psd` mode. therefore, if the issue is resolved properly then these two test cases will also pass.\nThe test cases are general, and any potential solution to the problem will pass these test cases.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":88,
        "false_negative_decided_by":88,
        "other_major_issues_decided_by":88,
        "difficulty_decided_by":"[17, 12]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":23,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.36,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-16901",
        "underspecified":0,
        "underspecified_notes":"- The issue description clearly identifies the problem with XOR operations on databases that do not natively support XOR, such as PostgreSQL, and provides an example which demonstrates the incorrect behavior and the expected results.\n- The context is clear, and the expected outcome is specified, making it clear what needs to be fixed i.e XOR should return true if an odd number of conditions are true\n- This issue needs to be fixed to ensure consistent and correct behavior across all databases, regardless of whether they natively support XOR.\n- Overall, the issue description is well-specified",
        "false_negative":0,
        "false_negative_notes":"- The test patch verifies that the XOR operation works correctly for multiple conditions and not only checks the queryset but also verifies the actual values returned, ensuring the correctness of the operation.\n- There is a low likelihood of false negatives because the test comprehensively checks the behavior for a range of input conditions and covers all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":26,
        "false_negative_decided_by":26,
        "other_major_issues_decided_by":26,
        "difficulty_decided_by":"[24, 18]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":12,
        "solved_by":[
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.67,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-16597",
        "underspecified":1,
        "underspecified_notes":"The issue description suggests that defining a symbol as even should imply that it is finite.\nThe description could be more elaborate by elaborating that in mathematics, infinity is not considered an even or odd number, thus defining a symbol as even (`Symbol('m', even=True`) or odd should imply it is finite.",
        "false_negative":1,
        "false_negative_notes":"The added tests verify that attributes like `is_finite` are correctly set for various symbolic definitions, such as `even`, `odd`, `integer`, `nonnegative`, `nonpositive`, `rational`, and `irrational` symbols.\nThe tests also include updates for clarifying properties of `Infinity` and `NegativeInfinity` defined symboles with several atributtes changed to `False` from None`.\nThe tests cover expected behavior on a larger scale based on the issue description. Reasonable solutions to the issue should pass the tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":57,
        "false_negative_decided_by":57,
        "other_major_issues_decided_by":57,
        "difficulty_decided_by":"[57, 58]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-13496",
        "underspecified":0,
        "underspecified_notes":"The issue description is well-written and thorough. It clearly and briefly explains the purpose of `warm_start` in Isolation Forest. It mentions that `warm_start` can be used after being set to true during initialization. The description also provides a way to use it in the Isolation Forest.",
        "false_negative":0,
        "false_negative_notes":"The test patch is well-defined and covers the main aspects of the fix. It includes warnings that might occur, such as 'ignore:behavior=\"old\"' and 'ignore:default contamination'. The test patch creates a synthetic dataset 'X' and an instance of Isolation Forest, applying it to the dataset by passing parameters like `n_estimators`, `warm_start`, etc. It then increases the number of estimators and passes them again. Finally, it checks if the first tree in the fitted estimators is the same as the tree that was fitted first.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":38,
        "false_negative_decided_by":38,
        "other_major_issues_decided_by":38,
        "difficulty_decided_by":"[65, 21]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":17,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20240824_gru",
            "20240924_solver",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.53,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"pallets__flask-5014",
        "underspecified":1,
        "underspecified_notes":"There are some gaps in the issue description. The issue concerns raising a `ValueError` when an empty name is given to a `Blueprint`. However, the issue creator did not provide a minimal reproducible example, which would have been helpful for understanding the problem more clearly.",
        "false_negative":1,
        "false_negative_notes":"-The test checks that a `ValueError` is raised when an attempt is made to create a Blueprint with an empty name\n-Majority of the correct solutions are covered but since the description only mentioned that \"it would be helpful if a `ValueError` was raised\", an unusual solution may exist",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":74,
        "false_negative_decided_by":64,
        "other_major_issues_decided_by":74,
        "difficulty_decided_by":"[74, 69]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":27,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.25,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-13401",
        "underspecified":1,
        "underspecified_notes":"The issue description is clear. It talks about two classes that inherit an abstract model class (A). A field \"fieldx\" defined under class A, when compared using equality, called from two distinct inheritors of A, return equal which is unintuitive. That is \"B.fieldx == C.fieldx\" is strange, assuming B and C inherit A.\nThe issue also advises adjusting the hash and __lt__ but the details for hash can only be inferred. It \"advises\" the use of the creation_counter for __lt__ which is intuitive",
        "false_negative":1,
        "false_negative_notes":"The test confirms the inequality using a raw \"==\" check and comparing the hash values as well. It confirms that __lt__ works as expected as well. Since the issue only advises the adjustment of __lt__ and __hash__, some unusual solutions will ignore them and fail",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":78,
        "false_negative_decided_by":78,
        "other_major_issues_decided_by":34,
        "difficulty_decided_by":"[34]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":14,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.61,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-13112",
        "underspecified":0,
        "underspecified_notes":"The `ValueError` during `migrate` in Django 3.1b1 occurs because `DJ_RegLogin.Content.category` references `dj_reglogin.category`, but `dj_reglogin` isn't recognized due to mixed-case app name.\n\nThe issue mentions the reason for the error, which should be sufficient for an experienced developer to find the solution.",
        "false_negative":0,
        "false_negative_notes":"The test ensures that mixed-case app labels in ForeignKey and ManyToManyField relationships are correctly handled and do not cause migration errors, covering all successful solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":14,
        "false_negative_decided_by":14,
        "other_major_issues_decided_by":14,
        "difficulty_decided_by":"[14, 43, 44]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sympy__sympy-22456",
        "underspecified":1,
        "underspecified_notes":"The description clearly communicates the discrepancy between the current implementation using keyword argument invariance (`expr.func(**expr.kwargs()) == expr`) and the desired implementation using positional argument invariance (`expr.func(*expr.args) == expr`). However, it does not provide explicit technical steps or methods for achieving this behavior; it only states the desired outcome.",
        "false_negative":1,
        "false_negative_notes":"The test specifically verifies that the `String` class supports argument invariance by using the `func` method as implemented in the Gold Patch. While it effectively checks the solution provided, the test is tightly tied to this specific implementation (using a lambda function in `func` that returns `self`). ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":13,
        "false_negative_decided_by":13,
        "other_major_issues_decided_by":17,
        "difficulty_decided_by":"[17, 23, 13]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":13,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.64,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-14087",
        "underspecified":1,
        "underspecified_notes":"- The issue description mentions a problem with the Logistic Regression CV throwing a Index error with refit set to False.\n- Code to reproduce the error is provided.\n- Current error description is also provided.\n- Solely based on the issue description, the requirements for a solution are not quite clear but there is a sensible interpretation that it revolves around investigating the Logistic Regression classifier. \n",
        "false_negative":1,
        "false_negative_notes":"The tests seem to be well-structured and cover different scenarios, including:\nDifferent penalties \nDifferent multi-class strategies \nThe tests also check the attribute shapes of the LogisticRegressionCV object when refit is False, which is relevant to the issue at hand.\nHowever, I notice that the tests do not explicitly check for the IndexError that was reported in the issue. While the tests do cover the scenario where refit is False, they do not directly verify that the error is not thrown.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":15,
        "false_negative_decided_by":40,
        "other_major_issues_decided_by":15,
        "difficulty_decided_by":"[15, 55]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":6,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.83,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-13406",
        "underspecified":0,
        "underspecified_notes":"- The issue describes a problem with Django's querysets when using values() or values_list() methods combined with annotate() for a GROUP BY functionality, and then pickling and unpickling the query. The result after unpickling does not match the expected structure, causing errors.\n- The issue is well-explained with a clear problem statement, detailed reproduction steps, and a specific error traceback. This helps in understanding the problem's context and the impact.\n- The last line correctly explains the cause of this issue but doesn't provide the technical reason behind it which is upto the engineer to find.",
        "false_negative":0,
        "false_negative_notes":"- The tests provided effectively ensure that querysets using values() and annotate() return the correct data structure (dict instead of model instances) after being pickled and unpickled. This is the core issue described, and the tests validate that the intended behavior is maintained.\n- The tests verify the end result, which is the intended behavior according to the issue description. They ensure that the queryset maintains the correct data structure, which implicitly verifies that _iterable_class is set correctly.\n- There are no significant gaps or edge cases that are not covered by the tests. The primary goal is to ensure that the queryset behaves correctly after pickling and unpickling, which the tests achieve.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":26,
        "false_negative_decided_by":26,
        "other_major_issues_decided_by":26,
        "difficulty_decided_by":"[26, 17]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-11310",
        "underspecified":1,
        "underspecified_notes":"The issue description clearly states the problem and the desired outcome, to retrieve the time it takes to refit the best model on the full data after doing grid\/random search. The author provides a code example and explains the limitations of the current implementation. \nHowever, there are some details that are not explicitly specified, such as:\nHow the refit_time_ attribute should be implemented and should be exposed (e.g., as a public attribute or through a method)?",
        "false_negative":0,
        "false_negative_notes":"The Test Patch adds three new assertions to the test_search_cv_timing test:\nassert_true(hasattr(search, \"refit_time_\")): Verifies that the refit_time_ attribute is present.\nassert_true(isinstance(search.refit_time_, float)): Verifies that the refit_time_ attribute is a float.\nassert_greater_equal(search.refit_time_, 0): Verifies that the refit_time_ attribute is a non-negative value.\nThe tests do not rely on implementation details that are not specified in the issue description, and they do not assume a specific implementation of the refit_time_ attribute. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":40,
        "false_negative_decided_by":40,
        "other_major_issues_decided_by":40,
        "difficulty_decided_by":"[17, 83]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":18,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.5,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-11445",
        "underspecified":0,
        "underspecified_notes":"This issue is that top-level headings containing a domain directive (like `:mod:`) fail to render properly if `rst_prolog` is set in the configuration. When this setting is active, headings with domain directives are not displayed correctly and are also omitted from the table of contents (toctree).\n\nThe issue is clear and we even have a reproducible example.",
        "false_negative":0,
        "false_negative_notes":"The tests ensure the `rst_prolog` is correctly prepended to documents with Sphinx domain directives like `:mod:` without disrupting their structure.\n\nThis directly targets the issue. Any solution which ensures that the prolog and headings are rendered correctly will pass the tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":35,
        "false_negative_decided_by":35,
        "other_major_issues_decided_by":35,
        "difficulty_decided_by":"[35, 42]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-14141",
        "underspecified":1,
        "underspecified_notes":"The issue description is brief but clear about what needs to be done: adding joblib to the dependencies listed in show_versions or to the issue template when the scikit-learn version is greater than 0.20. \nHowever, there are some implicit assumptions and unclear details, such as:\nWhat is the exact location of the show_versions function or module?\nHow should joblib be added to the dependencies list? Is it a simple append or are there specific formatting requirements?",
        "false_negative":1,
        "false_negative_notes":"Gold patch updates the `_get_deps_info` function in `_show_versions` to include `joblib` in the list of dependencies which perfectly aligns with the first suggestion of the author. Test patch follows that and adds an assertion to verify that `joblib` is listed when the `show_versions` function is called which covers the first suggestion of the author perfectly. Yet, as there is another suggestion from the author which is to add it to the issue template when sklearn version is > 0.20, the test patch would fail to cover that. Hence it is also rated as 1 just like the issue.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":40,
        "false_negative_decided_by":55,
        "other_major_issues_decided_by":15,
        "difficulty_decided_by":"[15, 40, 55]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":27,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20231010_rag_swellama7b",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.25,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"sphinx-doc__sphinx-8721",
        "underspecified":1,
        "underspecified_notes":"The issue description highlights an unwarranted behaviour in the sphinx library. It suggests that if `viewcode_enable_epub` is set as `viewcode_enable_epub=False` and the command `make html epub` is run, pages are created for ePub. This shouldn't be the case as `viewcode_enable_epub` is set to false. The issue description does not suggest the likely cause of page generation and thus there are some additional blanks to fill in to get a clearer picture of the problem at hand. Nonetheless, there is a sensible interpretation of what is required for a successful solution (i.e. pages should not be generated when `viewcode_enable_epub = False`).",
        "false_negative":0,
        "false_negative_notes":"The test patch performs a check to determine what happens when the parameter `viewcode_enable_epub` is set to either `False` or `True`. When set to `False` it checks to determine that pages were not created whereas when set to `True` it checks to determine that pages were created. Reasonable solution should pass the test patch.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":5,
        "false_negative_decided_by":5,
        "other_major_issues_decided_by":5,
        "difficulty_decided_by":"[3, 19]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":21,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240402_rag_claude3opus",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.42,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-11551",
        "underspecified":0,
        "underspecified_notes":"The issue clearly describes that after upgrading Django from `2.0.7` to `2.2.1`, a previously functioning `ModelAdmin` `list_display` setup now triggers an `admin.E108` validation error, preventing Django from starting. This error arises due to a change in the `_check_list_display_item` function, which misinterprets the presence of `PositionField`, a field from the `django-positions` library, and incorrectly flags it as an invalid field type for `list_display`. The `PositionField` fails because it is a descriptor, and the current implementation uses `hasattr(obj.model, item)`; when this returns False, the code no longer attempts to access the instance, leading to the validation error.\nThe issue is super detailed and explains the situation clearly. It has some redundant and confusing details but they are okay.\nThe issue even proposes a solution that removes the check for `hasattr(model, item)` and correctly handles field validation, fixing the erroneous `admin.E108` message.\nFor a senior developer, there is enough information to understand the issue and also the possible fix.",
        "false_negative":0,
        "false_negative_notes":"So it checks exactly the issue being raised and I cannot think of any other solution that might fail the test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":44,
        "false_negative_decided_by":44,
        "other_major_issues_decided_by":44,
        "difficulty_decided_by":"[44, 42, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":24,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20240824_gru",
            "20231010_rag_swellama7b",
            "20240820_epam-ai-run-gpt-4o",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.33,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-14349",
        "underspecified":1,
        "underspecified_notes":"The issue description points out that the unit tests for URLs are failing. It highlights that a recent patch changes the URL splitting behaviour to strip all instances of LF, CR and tab characters before splitting and thus it never reaches the validator. The issue description is however not certain of a possible fix although it provides some ways to mitigate the issue. There are some blanks to fill in as the issue description could have elaborated more on the actual fix that caused this. This could have shed more light on how a potential reasonable solution could have been crafted.",
        "false_negative":1,
        "false_negative_notes":"This rating is chosen because while the tests are comprehensive and align well with the typical cases expected to be handled by the URLValidator, there is always the possibility of unusual or edge cases not covered by the standard test scenarios. \nFor example, complex URLs that might include encoded characters or combinations of unsafe characters with other URL components might behave differently. \nThe current tests focus on straightforward insertions of newline, carriage return, and tab characters in various parts of the URL, which covers most practical scenarios but might miss some more complex or less common variations.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":5,
        "false_negative_decided_by":37,
        "other_major_issues_decided_by":5,
        "difficulty_decided_by":"[37, 32]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":20,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.44,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-15732",
        "underspecified":0,
        "underspecified_notes":"The description is clear in detailing the problem where there's a difficulty in dropping a unique_together constraint involving the primary key because the migration system expects only one unique constraint per column, but two are present — the primary key constraint and the unique_together constraint.",
        "false_negative":1,
        "false_negative_notes":"The tests designed for verifying the removal of unique_together constraints are specific and directly related to the issue described, focusing on ensuring that such constraints can be removed without affecting other unique constraints on the same field. However, they assume the presence of certain database features (allows_multiple_constraints_on_same_fields) and specific behaviors that may not be universally applicable across all database systems or configurations. This could potentially exclude some valid solutions that use different methods or database capabilities to achieve the same outcome.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":13,
        "false_negative_decided_by":13,
        "other_major_issues_decided_by":13,
        "difficulty_decided_by":"[13, 3, 14]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sympy__sympy-23262",
        "underspecified":1,
        "underspecified_notes":"The issue description is clear and includes specific examples that make it easy to understand and reproduce. The expected behaviour is also clearly understandable.\nThe goal is to ensure that the SymPy Python code printer correctly generates code for single-element tuples. The only blank is that  the description states uncertainly about if the issue is a regression or not.",
        "false_negative":0,
        "false_negative_notes":"The test case address the root cause and directly check for lambdify function. It will cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":18,
        "false_negative_decided_by":23,
        "other_major_issues_decided_by":23,
        "difficulty_decided_by":"[19, 18]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":10,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241007_nfactorial",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.72,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-7530",
        "underspecified":1,
        "underspecified_notes":"The makemigrations command in Django incorrectly calls router.allow_migrate() for each app with all the models in the project, rather than with the app's own models. This behavior breaks certain routers because it passes invalid combinations for shards. The description lacks details on what the correct behavior should be, i.e., how the allow_migrate() method should be correctly called for each app, leaving room for interpretation.",
        "false_negative":1,
        "false_negative_notes":"The tests verify that the allow_migrate method is called with the correct arguments (connection_alias, app_name, model_name), which directly addresses the issue described. Extending or customizing router logic with additional validation steps may also be slightly unusual but valid approaches that the tests might not fully cover.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":32,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":32,
        "difficulty_decided_by":"[32, 6]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":22,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20240402_sweagent_claude3opus",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240728_sweagent_gpt4o",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.39,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-15916",
        "underspecified":0,
        "underspecified_notes":"The issue is clear and well-specified. The problem is concerning the `django.forms.modelform_factory` that takes a class and a callback. If the callback is specified in the form class passed the the `modelform_factory` but not in the `modelform_factory` itself, it does not inherit the callback from the form class to use. This is a regression as the issue was once worked on but got missing in the various updates.",
        "false_negative":0,
        "false_negative_notes":"The tests cover perfectly all possible scenarios. The problem is about the callback being accessed from the `modelform` class passed to the `modelform_factory`.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":58,
        "false_negative_decided_by":58,
        "other_major_issues_decided_by":58,
        "difficulty_decided_by":"[39]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-17655",
        "underspecified":0,
        "underspecified_notes":"- The problem statement is clear, descriptive and explains the issue with proper example where `point1 + point2 * sympy.sympify(2.0)` works as expected, but changing the order of the values like `point1 + sympy.sympify(2.0) * point2` raises TypeError.\n- With the given information, it is evident to fix the issue so that both the given statements should work similarly without raising any exceptions. ",
        "false_negative":0,
        "false_negative_notes":" - The problem statement is clear and provided enough information to understand the issue and what a successful solution would look like, where irrespective of the order of variables in multiplication operations, it should not raise any exception and works similarly.\n - test case `test_point` and `test_point3D` are modified to verify the scenarios mentioned in the problem statement, like result of `a * b` and `b * a` is similar and does not raise any exceptions.\n - With all possible solution based on the problem statement, given test patch should work and cover all cases.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":69,
        "false_negative_decided_by":69,
        "other_major_issues_decided_by":69,
        "difficulty_decided_by":"[20, 54]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":13,
        "solved_by":[
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.64,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-14311",
        "underspecified":1,
        "underspecified_notes":"The issue is about allowing the autoreloading functionality in Django when running a module using the python -m custom_module runserver command. Specifically, the problem arises with the handling of dotted module names. The original fix addressed cases where the module name is in the format -m foo.bar and __main__.py exists under `foo\/bar`. However, it did not properly handle cases where a module name is in the format `-m foo.bar.baz` (where `baz.py` resides under `foo\/bar`). However there are some missing blanks such as: The issue does not specify what the correct behavior should look like in precise terms. For example should the module `baz` be detected and reloaded independently or should the entire module hierarchy starting from foo be considered? However a successful solution is known to correct the detection and handling of such dotted module names to ensure proper autoreloading functionality.",
        "false_negative":0,
        "false_negative_notes":"The test “test_run_as_non_django_module” verifies that Django's autoreloader handles the `-m` option correctly for non-package modules, ensuring that the correct full module name is detected and passed as an argument. This specifically ensures that the new logic in the patch is working as intended by simulating the scenario and verifying the arguments.\n\nThe test checks if the `autoreload.get_child_arguments()` method correctly identifies and includes the full module name when running a non-package module with `-m`, confirming that the patch successfully resolves the issue of incorrect argument processing, ensuring the correct module is reloaded. The tests perfectly covers all the possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":6,
        "false_negative_decided_by":17,
        "other_major_issues_decided_by":17,
        "difficulty_decided_by":"[17, 6, 26]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":3,
        "solved_by":[
            "20240920_solver",
            "20241028_solver",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.92,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-14983",
        "underspecified":0,
        "underspecified_notes":"- The issue specifies that `RepeatedKFold` and `RepeatedStratifiedKFold` do not show correct `__repr__` string. \n- The steps to reproduce the issue have been provided and the expected behavior has been communicated properly",
        "false_negative":0,
        "false_negative_notes":"- The tests simply check if the __repr__ string is as expected for `RepeatedKFold` and `RepeatedStratifiedKFold`\n- This should cover all the possible solutions of the problem",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":34,
        "false_negative_decided_by":34,
        "other_major_issues_decided_by":34,
        "difficulty_decided_by":"[34, 15, 38]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240924_solver"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-16801",
        "underspecified":0,
        "underspecified_notes":"Removing the unnecessary `post_init` signal handler from `ImageField` in Django, when `width_field` and `height_field` are not set, led to a 30-40% improvement in model initialization performance. The handler was redundant and caused significant slowdowns.\n\nThe issue is clearly defined, including the reason for the problem and its potential solution.",
        "false_negative":0,
        "false_negative_notes":"The test verifies that the `post_init` signal is not connected for the `PersonModel` when `width_field` and `height_field` are not set on the `ImageField`.\n\nThe test ensures all successful solutions, confirming the implementation of the core functionalities mentioned in the issue.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":14,
        "false_negative_decided_by":14,
        "other_major_issues_decided_by":14,
        "difficulty_decided_by":"[14, 44, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":30,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.17,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-15554",
        "underspecified":1,
        "underspecified_notes":"The problem is clear. When using multiple `FilteredRelation` with the same name, Django's ORM only generates a single SQL JOIN, ignoring the others. This behavior causes issues when trying to conditionally use different filtered relations for annotations, as only one JOIN is considered in the query. However, the user is not sure if that is a problem or the intended behavior which introduces a blank to fill. But a senior developer will know that this is a problem with Django and need to be fixed.",
        "false_negative":0,
        "false_negative_notes":"The shared tests verify that Django's ORM correctly handles multiple `FilteredRelation` instances with different filters on the same relation. They ensure correct alias mapping, validate filtering of book titles containing \"Alice\" and \"Jane\" for an author named \"Jane,\" and confirm accurate query results even when some filters have no matches. The tests confirm the ORM properly applies and differentiates between the filters, handling null values as expected.\n\nThe tests ensure that the core functionality is addressed, so we can say that they cover all successful solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":7,
        "false_negative_decided_by":14,
        "other_major_issues_decided_by":14,
        "difficulty_decided_by":"[14, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-13128",
        "underspecified":1,
        "underspecified_notes":"There are some blanks to fill in about the issue, but there is a sensible interpretation of what is required for a successful solution.\n\nThe issue specifies that there is a problem with performing temporal subtraction between DateTimeField and DurationField in a Django query without using ExpressionWrapper. It also mentions the error encountered due to mixed types. While it is clear that the goal is to make this operation work without using ExpressionWrapper, the exact details of how this should be achieved or if any specific constraints apply are not fully clear from the description alone. The problem is identifiable and interpretable, but the specifics of the implementation are not detailed.",
        "false_negative":1,
        "false_negative_notes":"The tests cover the majority of correct solutions, however some unusual solutions may be missed.\n\nThe tests in the Test Patch cover a broad range of scenarios for temporal subtraction without using ExpressionWrapper. They check various cases including date subtraction, time subtraction, and datetime subtraction, ensuring that these operations work correctly with F expressions. However, the tests are focused on ensuring the removal of ExpressionWrapper. The scope is well-defined for common solutions but could potentially overlook more unconventional approaches like custom wrapper functions, alternative ORM expressions, and dynamic field determination. Also, complex query combinations, database-specific implementations, and solutions involving middleware or signals could be overlooked.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":80,
        "false_negative_decided_by":80,
        "other_major_issues_decided_by":80,
        "difficulty_decided_by":"[80, 39, 77]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240617_factory_code_droid"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-12585",
        "underspecified":0,
        "underspecified_notes":"The issue description is well-specified enough for a meaningful attempt at a solution. It clearly explains that the clone function in scikit-learn fails when parameters are estimator types (classes instead of instances). The description provides context about the problem, steps to reproduce it, the expected and actual results, and even suggests a possible fix. This detailed information allows developers to understand the problem, replicate it, and consider potential solutions effectively.",
        "false_negative":0,
        "false_negative_notes":"The tests are well-scoped to ensure all reasonable solutions to the issue should pass. The test_clone_estimator_types function specifically checks cloning when a parameter is a class type, directly addressing the issue. It ensures the clone function correctly handles the class type parameter by asserting it remains unchanged after cloning. Additionally, the new test is integrated into test_base.py, making it part of the broader test suite to catch any side effects. Overall, this test directly targets the issue and verifies that any solution modifying how clone handles class types is effective. If a solution passes this test without breaking others, it is likely a robust fix.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":44,
        "false_negative_decided_by":44,
        "other_major_issues_decided_by":44,
        "difficulty_decided_by":"[44, 43, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":31,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.14,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-17087",
        "underspecified":1,
        "underspecified_notes":" The issue clearly describes a problem related to how Django's migration mechanism handles defaults specified via a method from a nested class. The example code and explanation outline the model structure and the problematic migration behavior. However, the issue does leave some blanks, particularly in how the migration mechanism should ideally interpret nested class method paths without error. ",
        "false_negative":1,
        "false_negative_notes":"The tests check if the serialization changes for methods of nested classes are effective by specifically checking the serialized outputs. This directly addresses the issue of incorrect references in migration scripts when default methods are from nested classes. While the tests cover the direct changes made in the Gold Patch, they might miss scenarios where nested class methods are used in slightly different contexts or configurations that aren't as straightforward. For example, if there are additional layers of nesting or other attributes that could influence serialization behavior, these tests might not catch issues arising from those complexities but the test would cover most of the correct solutions. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":32,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":14,
        "difficulty_decided_by":"[14, 17]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":11,
        "solved_by":[
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.69,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-16429",
        "underspecified":1,
        "underspecified_notes":"The description effectively identifies a specific problem with the timesince() function in Django when USE_TZ=True is set, leading to a TypeError involving offset-naive and offset-aware datetimes. It also provides a link to the specific section of the code that likely needs modification. However, while the user suggests adding timezone information (tzinfo) to a datetime object instantiation, they don't specify exactly how or where to integrate this change within the function, leaving some gaps about the implementation details. This lack of precise modification details means that while the issue is generally clear, the exact steps for the solution might require some interpretation to ensure correctness and completeness.",
        "false_negative":1,
        "false_negative_notes":"The tests cover most correct solution, but some unusual ones might be missed. The tests do address the issue of handling timezones in the timesince correctly. However, they assume a specific fix by including tzinfo in the pivot datetime creation which might miss other valid solutions that handle timezone differences a bit differently.  So for this reason I would rate this as 1. ",
        "other_major_issues":0,
        "other_notes":"No other issues with the task",
        "difficulty":"<15 min fix",
        "underspecified_decided_by":37,
        "false_negative_decided_by":60,
        "other_major_issues_decided_by":53,
        "difficulty_decided_by":"[53, 60]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":29,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.19,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"sphinx-doc__sphinx-8638",
        "underspecified":0,
        "underspecified_notes":"The issue description outlines the problem of unintended linking of instance variables to other variables with the same name across different parts of a project. It provides a clear example, steps to reproduce the behavior, and an expected behavior for a successful solution. The provided example and expected behavior further clarify the requirements. The reproducible example is linked externally, but an experienced engineer should be able to reproduce the issue based on the detailed description and accompanying image provided in the issue.",
        "false_negative":0,
        "false_negative_notes":"The tests added in the Test Patch are well-scoped to ensure that the issue of incorrectly linking instance variables to other variables with the same name is resolved. The test test_info_field_list_var specifically checks that the :var directive properly documents instance variables without incorrectly linking to other variables, which aligns with the issue described. The tests do not rely on any details that were not mentioned in the issue description, ensuring that any reasonable solution to the problem would pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":29,
        "false_negative_decided_by":29,
        "other_major_issues_decided_by":29,
        "difficulty_decided_by":"[29, 20]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"psf__requests-1921",
        "underspecified":1,
        "underspecified_notes":"The issue clearly articulates the problem—setting a header's value to None results in the header being sent with \"None\" as its value, contrary to expectations. This discrepancy is well-documented with example code and references to discussions and documentation. However, the issue does not explicitly dictate whether the solution should involve modifying the library's code to change how None is handled or simply enhancing the documentation to clarify the expected behavior. This ambiguity leaves room for a sensible interpretation of the required solution, allowing an engineer to decide on the best approach to align the library's functionality with user expectations. This rating recognizes the clarity of the problem description while accounting for the slight flexibility in determining the exact nature of the solution.",
        "false_negative":0,
        "false_negative_notes":"The decision to assign rating 0 to the test concerning the handling of headers set to `None` in the Python `requests` library is based on the precise alignment of the test with the issue's described problem and its focus solely on verifying the correct outcome. The test specifically checks that headers with `None` values are not sent in requests, directly addressing the behavior highlighted as problematic in the issue description. This test does not assume any particular internal implementation details or methods; it simply verifies that the end result—the absence of `None` values in the headers of a prepared request—meets the user's expectations and resolves the described issue. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":13,
        "false_negative_decided_by":13,
        "other_major_issues_decided_by":13,
        "difficulty_decided_by":"[13, 7, 26]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":18,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240820_epam-ai-run-gpt-4o",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.5,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-11790",
        "underspecified":1,
        "underspecified_notes":"The issue text specifies that the username field's maxlength attribute is missing. It indicates that the desired outcome is for the AuthenticationForm to include this maxlength attribute again. This gives an indication of what the end state should be but the specific value for the maxlength attribute is not mentioned and does not state whether the maxlength should be a configurable parameter or a hardcoded value, leaving room interpretation.",
        "false_negative":1,
        "false_negative_notes":"- The test code ensures that the `maxlength` HTML attribute is correctly set on the username field's widget for both custom and default user model.\n- It ensures that the `maxlength` attribute in the username field's widget attributes is set similarly to the user model's username field.\n- The test code is correct and should almost all possible solutions as there are no other extra conditions added rather than those mentioned in the issue description.\n- However, there can exist some unusual solutions that can solve the issue without passing the test this is due to a lack of clarity in the issue description, the solution like injecting max length in middleware.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":32,
        "false_negative_decided_by":66,
        "other_major_issues_decided_by":32,
        "difficulty_decided_by":"[32, 66]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":11,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.69,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sphinx-doc__sphinx-8475",
        "underspecified":0,
        "underspecified_notes":"The description clearly explain a issue involves a bug in the linkchecker tool, where some websites enter infinite redirect loops with HEAD requests, resulting in a \"Too Many Redirects\" error. Previously, the fallback to GET requests was not applied to this error type, causing the links to be reported as broken. This bugfix extends the exception handling logic to include \"Too Many Redirects\" errors, allowing the linkchecker to retry with a GET request in such cases. This change restores the functionality that worked prior to Sphinx 3.2.0, ensuring URLs that previously passed the linkcheck continue to do so.",
        "false_negative":0,
        "false_negative_notes":"The test simulates a scenario where a HEAD request causes an infinite redirect loop. By verifying that the link checker retries with a GET request and successfully processes the link, the test ensures that the new exception handling logic (extended to cover TooManyRedirects) is functioning as expected. This confirms that the bug fix is effective, allowing the link checker to handle such cases correctly and report the link as working. This test focus on the controlling mechanism to control the issue. The description already specify how the solution will look  like i.e. falling on GET request, which was what the testpatch does. The test case covers all the required solution possible based in the issue description.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":28,
        "false_negative_decided_by":28,
        "other_major_issues_decided_by":28,
        "difficulty_decided_by":"[88, 13]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":16,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240820_honeycomb",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.56,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-13821",
        "underspecified":1,
        "underspecified_notes":"- The description mentions the need to drop support for SQLite versions older than 3.9.0. For more details, indexes on expressions and the `SQLITE_ENABLE_JSON1` compile-time option are supported on SQLite 3.9.0 and above. Ubuntu Xenial ships with SQLite 3.11.0 (which will still be supported by Django) and will reach EOL in April 2021. Debian Jessie ships with 3.8.7 and reached EOL on June 30, 2020. SQLite 3.9.0 was released in October 2015. SQLite version support is similar to GEOS libraries, which are generally supported for about 5 years after their release.\n- The issue  is clear, but it is not clear that which version should be supported.",
        "false_negative":1,
        "false_negative_notes":"- The source code in the Gold Patch modifies the minimum SQLite version to 3.9.0, meeting the requirement.\n- The test case in the Test Patch verifies that the minimum version is 3.9.0.\n- The current solution is a good approach, but since the minimum version is not clearly defined, users might choose a different version (e.g., 3.11).",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":39,
        "false_negative_decided_by":39,
        "other_major_issues_decided_by":2,
        "difficulty_decided_by":"[2, 59, 39]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":24,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.33,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-15161",
        "underspecified":1,
        "underspecified_notes":"- The issue text requests for simplified paths to be used for deconstruct of expressions\n- It mentions that other expressions should also be deconstructed like F() is being deconstructed to django.db.models.F() after a recent PR\n- However, it doesn’t specify which other expressions need to be sampled. This leaves some blanks to fill.\n",
        "false_negative":1,
        "false_negative_notes":"- The tests thoroughly check if deconstructed paths have been simplified for multiple expressions which should cover all the reasonable solutions of the problem\n- However, there could be other unusual solutions which only simply a fraction of the expressions. Such solutions would potentially fail the tests.  ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":34,
        "false_negative_decided_by":34,
        "other_major_issues_decided_by":59,
        "difficulty_decided_by":"[34, 38]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240728_sweagent_gpt4o",
            "20240820_epam-ai-run-gpt-4o",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-13794",
        "underspecified":1,
        "underspecified_notes":"The issue is clear enough to make a sensible interpretation of what is required for a successful solution. However, some blanks need to be filled in as the issue description is short and there is no sample demonstration.",
        "false_negative":0,
        "false_negative_notes":"The test covers all possible solutions. test_lazy_add test case ensures that the underlying issue - empty string because the add filter generates an exception - is resolved. While test_add08 and test_add09 test cases ensure that the add filter can concatenate strings with lazy string",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":54,
        "false_negative_decided_by":54,
        "other_major_issues_decided_by":54,
        "difficulty_decided_by":"[54, 24]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20240820_epam-ai-run-gpt-4o",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-11066",
        "underspecified":1,
        "underspecified_notes":"The `RenameContentType._rename()` method in Django fails to save the content type to the correct database when using a dynamic database router, resulting in an `OperationalError` with the message \"no such table: django_content_types\". To resolve this, modify the `save` call within the method to `content_type.save(using=db, update_fields=['model'])`, ensuring the content type is saved to the correct database and addressing the issue with dynamic database routing. However, there are assumptions about understanding dynamic database routing and specific commit context, especially since external links are not accessible. So, it should be rated as 1.",
        "false_negative":0,
        "false_negative_notes":"The test code are designed to confirm that the `RenameContentType._rename()` method accurately renames content types across different databases when using a dynamic database router. These tests aim to ensure that the method functions properly by verifying the correct renaming of content types in an alternative database and that the migration command effectively manages both the renaming and resetting of content types under this configuration. So it should be rated as 0.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":62,
        "false_negative_decided_by":62,
        "other_major_issues_decided_by":62,
        "difficulty_decided_by":"[62, 59, 49]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":30,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.17,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-13837",
        "underspecified":0,
        "underspecified_notes":"The given issue description is well-specified, detailing both the problem that `django.utils.autoreload.get_child_arguments` only detects when `-m` is passed specifically to django and the solution, making it clear what changes are needed.",
        "false_negative":1,
        "false_negative_notes":"The tests cover the majority of correct solutions, however some unusual solutions may be missed. For example, instead of using __main__.__spec__.parent, a solution could check __main__.__package__ directly. If __package__ is set, it indicates the module is part of a package and likely started with -m thought being an unusual approach.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":90,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":90,
        "difficulty_decided_by":"[32, 80]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":15,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241016_composio_swekit",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.58,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"django__django-13121",
        "underspecified":1,
        "underspecified_notes":"The issue description does not specify the expected behavior when using durations-only expressions with SQLite and MySQL.",
        "false_negative":1,
        "false_negative_notes":"The test is closely tied to the gold patch, as it assumes the use of `F('estimated_time') + delta` to create annotations, which is a specific implementation detail of the gold patch. If another solution employs a different approach, the test would fail.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":70,
        "false_negative_decided_by":70,
        "other_major_issues_decided_by":70,
        "difficulty_decided_by":"[54, 28]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":3,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240820_honeycomb",
            "20241016_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.92,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-16899",
        "underspecified":0,
        "underspecified_notes":"The issue is about improving the error messages for `readonly_fields` in 'ModelAdmin'. Currently the error message specifies the index of the problematic field but does not include the field's name. This is inconsistent with error messages for other fields such as list_editable, raw_id_fields and list_display which do include the field name. The request is to update the error message for `readonly_fields` to include the field name for better clarity and consistency. It also explains why this change is beneficial as it eases the understanding of the error when using the framework. The issue is well specified so a score of 0 is appropriate.",
        "false_negative":0,
        "false_negative_notes":"The tests are updated to reflect the expected change in the error message format. They include the field name in the `readonly_fields` error message exactly as specified in the issue description. The tests cover scenarios where `readonly_fields` contains non-existent fields. This ensures that the new error message format is correctly implemented. While the issue primarily focuses on `readonly_fields` the tests ensure that the format of the error message for `readonly_fields` is consistent with other fields like list_editable, raw_id_fields and list_display. Tests ensure that any solution that includes the field name in the `readonly_fields` error message will pass. Therefore a rating of 0 is appropriate.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":6,
        "false_negative_decided_by":6,
        "other_major_issues_decided_by":6,
        "difficulty_decided_by":"[6, 69]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":18,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240920_solver",
            "20231010_rag_claude2",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.5,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-16661",
        "underspecified":1,
        "underspecified_notes":"The issue explains that the ModelAdmin.lookup_allowed() method in Django's admin interface incorrectly raises a DisallowedModelAdminLookup exception when a foreign key is used as a primary key. This happens because the admin system mistakenly interprets the foreign key field as concrete inheritance and incorrectly simplifies the lookup from restaurant__place__country to restaurant__country, which doesn't exist on the Restaurant model, leading to a disallowed lookup.\n\nThe expected behaviour is not explicitly mentioned in the issue description but we can deduce that the admin logic needs to correctly handle cases where a foreign key is used as a primary key without confusing it with inheritance.",
        "false_negative":0,
        "false_negative_notes":"- The introduced test function, `test_lookup_allowed_foreign_primary`, was already working in the older Django version 1.8.\n- Additionally, the test case does not rely on external factors.\n- Therefore, it should now perfectly cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":17,
        "false_negative_decided_by":3,
        "other_major_issues_decided_by":3,
        "difficulty_decided_by":"[3, 17]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":8,
        "solved_by":[
            "20240920_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.78,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-14351",
        "underspecified":0,
        "underspecified_notes":"The issue arises from a change in Django 3.2, where subqueries must return only one column, causing errors when using `Q` objects with `agent__property_groups__in=property_groups`. The solution is to ensure the subqueries must return only one column.\n\nThe issue clearly identifies the cause of the problem and provides a potential solution.",
        "false_negative":0,
        "false_negative_notes":"The tests ensures queries using `Q` objects with subqueries in the `GROUP BY` clause work correctly by filtering `Author` objects, annotating `Book` objects with author counts, and applying a combined subquery and count condition. It confirms the correct set of books, verifying query functionality in Django 3.2.\n\nThe tests cover all successful solutions as it properly addresses the one-column subquery requirement.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":14,
        "false_negative_decided_by":14,
        "other_major_issues_decided_by":14,
        "difficulty_decided_by":"[14, 3]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-12308",
        "underspecified":0,
        "underspecified_notes":"The issue is clear in its description. It outlines a specific problem with the display of JSON fields in Django's admin interface when they are set to readonly. It notes the difference in the display format between JSON and Python dictionaries, which could potentially lead to confusion or errors. The issue description provides enough technical insight by pinpointing the probable location where the fix should be applied (`django.contrib.admin.utils.display_for_field`). It suggests that the method for preparing the value of a JSON field should handle serialization differently by potentially using the `prepare_value` method of the `JSONField`.\n\n",
        "false_negative":0,
        "false_negative_notes":"The tests ensure that `JSONField` values are correctly displayed as valid JSON when readonly in the admin, which is the core problem described.The test cases cover various scenarios including nested dictionaries, lists, strings, and invalid JSON, ensuring comprehensive coverage. They use `display_for_field`, which is the function suggested to be modified according to the issue description. The tests include an edge case for invalid JSON (`{('a', 'b'): 'c'}`), ensuring that solutions handle unexpected or erroneous inputs gracefully. Null values are also tested, which is a common edge case. The tests verify the output rather than the internal workings of the `display_for_field` function, allowing for different implementation approaches as long as they produce the correct results.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":43,
        "false_negative_decided_by":43,
        "other_major_issues_decided_by":43,
        "difficulty_decided_by":"[43, 14]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240820_honeycomb",
            "20240617_factory_code_droid"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-14915",
        "underspecified":1,
        "underspecified_notes":"The issue clearly identifies the problem of ModelChoiceIteratorValue being unhashable, which leads to a TypeError however, the issue does not provide any guidance on how to resolve the problem, which leaves some room for interpretation.",
        "false_negative":0,
        "false_negative_notes":"The test case test_choice_value_hash directly addresses the issue by checking the hashability of ModelChoiceIteratorValue. This aligns perfectly with the problem described in the issue. The tests would pass any valid solution that makes ModelChoiceIteratorValue hashable.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":32,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":32,
        "difficulty_decided_by":"[63, 18]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":26,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.28,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-15741",
        "underspecified":1,
        "underspecified_notes":"The issue is generally well-specified, as it clearly identifies the problem with `django.utils.formats.get_format` not accepting lazy parameters and the resulting `TypeError`. However, there are some details that could be more explicitly defined such as it's written that `get_format` should handle lazy parameters, the exact expected behavior  how they should be processed isn't explained and there is no direct suggestion on how to modify `get_format` to handle lazy parameters so choice 1 is selected.",
        "false_negative":1,
        "false_negative_notes":"These tests correctly checks the behavior according to the provided solution but some unusual solution can also alter the format of the time because its not well specified in the problem description that there should be some exact format, in that case this test would fail hence choice 1 is selected.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":48,
        "false_negative_decided_by":48,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 18]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":21,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.42,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-16263",
        "underspecified":1,
        "underspecified_notes":"The issue is about optimising Django's ORM to strip unused annotations from count queries. \nThe query `Book.objects.annotate(Count('chapters')).count()` includes unnecessary annotations that don't impact the count result but still contribute to query complexity. \nAs per the reporter, by removing these extraneous annotations, Django can generate more efficient SQL statements, thereby speeding up `count()` operations when complex annotations are involved. \nThere are still some blanks about what the implications of doing this would be, so it is not very clearly well-specified.\nThere is also a link to a precedent, which has not been explained further.\nHence a rating of 1 is apt.",
        "false_negative":1,
        "false_negative_notes":"The tests cover the primary scenarios described in the issue but may not capture every possible valid solution. They specifically check for Unused Aliased Aggregates: Ensures that annotations like authors_count are pruned if they are not referenced elsewhere. Non-Aggregate Annotations: Ensures that non-aggregate annotations (e.g., name_lower) are also pruned if not used. Referenced Aggregates: Ensures that annotations referenced in further aggregations are retained and thus not pruned. Unusual solutions to optimizing count queries might include using selective pruning strategies or custom query compilation techniques to handle annotations differently. They could also involve advanced SQL features or deferred execution approaches to manage unused annotations. Additionally, handling complex aggregates or multiple count queries with dynamic adjustments could offer alternative ways to address the issue. The test patch does not include tests for the get_refs methods added to Expression and WhereNode classes to collect and manage references within expressions.",
        "other_major_issues":0,
        "other_notes":"No issues were missed.",
        "difficulty":"1-4 hours",
        "underspecified_decided_by":27,
        "false_negative_decided_by":80,
        "other_major_issues_decided_by":27,
        "difficulty_decided_by":"[27, 80, 5]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"django__django-11141",
        "underspecified":0,
        "underspecified_notes":"The issue description is detailed and clear that Django's migration command checks for the `__file__` attribute, which is not present in Python 3 namespace packages, blocking migrations.\nIt proposed to remove the check, as `pkgutil.iter_modules()` now handles module discovery using the `__path__` attribute.",
        "false_negative":1,
        "false_negative_notes":"- The test checks that a migration directory without an __init__.py file is correctly loaded, ensuring that the changes made in the gold patch are verified.\n- It confirms that the migration loader can process namespace packages correctly.\n- However, it might not fully cover all possible alternative solutions that a developer might implement to solve the issue. For example:\nIf a developer implements a solution that changes how the __file__ attribute is handled rather than simply bypassing the check, the current test does not cover this approach. The test focuses on ensuring that directories without __init__.py files are loaded, but does not check other potential changes in the handling of the __file__ attribute.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":24,
        "false_negative_decided_by":26,
        "other_major_issues_decided_by":24,
        "difficulty_decided_by":"[24, 26, 32]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20240920_solver",
            "20240924_solver",
            "20240620_sweagent_claude3.5sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-12276",
        "underspecified":0,
        "underspecified_notes":"In Django, the `use_required_attribute()` method is not applied to `FileInput`, causing the `required` attribute to be incorrectly shown when initial data exists. To fix this, the `use_required_attribute()` method should be moved from `ClearableFileInput` to `FileInput`.",
        "false_negative":0,
        "false_negative_notes":"One test ensures that the `required` attribute is present when no initial data exists and is absent when initial data exists. Another test verifies that the `use_required_attribute()` method returns `True` when there is no initial data and `False` when initial data exists. This is directly related to the issue, and all reasonable solutions will pass the test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":42,
        "false_negative_decided_by":42,
        "other_major_issues_decided_by":42,
        "difficulty_decided_by":"[42, 14, 35]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":23,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.36,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-15731",
        "underspecified":1,
        "underspecified_notes":"The issue description outlines a problem where the `inspect.signature` function in Python returns incorrect signature information when used on query set methods in Django. This affects the documentation displayed in interactive environments like IPython and Jupyter, which rely on `inspect.signature` to show method signatures.\nThe issue description clarifies this with an example inspecting the `bulk_create` method of a Django model manager, where `inspect.signature` returns a generic signature: `(*args, **kwargs)`.\nThe description defines the expected signature as `(objs, batch_size=None, ignore_conflicts=False)`. Moreover, it clearly outlines the expected solution to use `functools.wraps` instead of manually assigning `name` and `docstring`, which takes care of all the metadata.\nHowever, the issue description includes a link to code files and refers to specific lines that may change as other changes are made to the repository.",
        "false_negative":0,
        "false_negative_notes":"The tests ensure that Django model manager methods have the correct attributes and signatures, i.e., that the method signature of `bulk_create` on the manager is correctly reported by comparing the actual signature of Article.objects.bulk_create with the expected signature string.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":57,
        "false_negative_decided_by":57,
        "other_major_issues_decided_by":57,
        "difficulty_decided_by":"[32]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":24,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.33,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-9288",
        "underspecified":0,
        "underspecified_notes":"The issue is precisely explained, and the description has all the specific versions of the environment components mentioned, which is a plus point. The problem is mainly regarding the inconsistency in the results produced by the KMeans clustering algorithm when using different values for the n_jobs parameter. While the ideal behavior should be that if the random state is set, all inertias should be same irrespective of the number of jobs. All in all, the explanation is rather detailed.",
        "false_negative":1,
        "false_negative_notes":"The test relies on the random state intialization of Kmeans to be the same. If there's any non-deterministic behavior within the implementation itself, it might not be enough. Also, the test uses a fixed random seed, testing with multiple seeds might catch an edge case. Hence, rating it 1.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":38,
        "false_negative_decided_by":2,
        "other_major_issues_decided_by":38,
        "difficulty_decided_by":"[38, 29]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":15,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.58,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sphinx-doc__sphinx-8056",
        "underspecified":0,
        "underspecified_notes":"The issue description clearly outlines the problem of rendering errors in Sphinx when combining multiple input parameters in a docstring. It provides a reproducible example, the expected behavior, and a description of the incorrect output. Additionally, it includes the environment details, which are helpful for debugging. The steps to reproduce the issue and the expected outcome are clearly defined, making it well-specified enough for a successful solution.",
        "false_negative":1,
        "false_negative_notes":"The test patch includes tests for handling multiple parameters in a docstring, which aligns with the issue description. However, it does not cover the case where the parameters are marked as optional, which was mentioned in the issue description. Therefore, while the tests cover the main aspects of the issue, they might miss some specific cases involving optional parameters.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":29,
        "false_negative_decided_by":29,
        "other_major_issues_decided_by":29,
        "difficulty_decided_by":"[29, 13]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sympy__sympy-20590",
        "underspecified":1,
        "underspecified_notes":"The issue describes that `Symbol` instances have a `__dict__` attribute since version 1.7 which did not exist in prior versions.\nThe issue gives an example of a previous version throwing an error, and says in the current version this might be because some parent class might have stopped defining `__slots__`.\nFrom the requirements, it seems like the issue is expecting that this behaviour should be reverted. However, it is not clear what are the implications or problems caused because of this, hence there are a few blanks to fill up. \nHence option 1 is suitable.",
        "false_negative":1,
        "false_negative_notes":"The test added here is `test_immutable`, which checks that `__dict__` is not a valid attribute, and also tries modifying `b1` which is an instance of `Basic` class.\nWhile this does ensure that `Symbol` classes will also work correctly given that it inherits from `Basic`, there might be reasonable solutions which only address the `Symbol` class itself as mentioned in the issue and these tests would fail for such solutions.",
        "other_major_issues":0,
        "other_notes":"No issues missed.",
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":27,
        "false_negative_decided_by":27,
        "other_major_issues_decided_by":27,
        "difficulty_decided_by":"[27, 20]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20240620_sweagent_claude3.5sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-16145",
        "underspecified":0,
        "underspecified_notes":"- The problem statement is clear, concise and explains the issue properly, where development server link provided in the output of `python manage.py runserver 0:8000` command is incorrect `http:\/\/0:8000\/`.\n- Also, proper expected output message is mentioned in the issue description, which makes it clear to understand and gives proper idea what successful solution would look like.",
        "false_negative":0,
        "false_negative_notes":"- The problem statement is clear and sets proper expectation, test case `test_zero_ip_addr` is checking for the exact issue as per the problem statement, and all possible solutions for given problem statement should be covered with given test patch.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":69,
        "false_negative_decided_by":69,
        "other_major_issues_decided_by":69,
        "difficulty_decided_by":"[69, 26]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":20,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241025_composio_swekit"
        ],
        "empiric_difficulty":0.44,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-10435",
        "underspecified":1,
        "underspecified_notes":"The issue description states that enhancement #10251 activates syntax highlighting for the Docutils code role in LaTeX output but inserts a space character at the start and end of inline code blocks in the PDF output.\n\nThe expected output is not explicitly mentioned but it can be interpreted that the inline code should not have extra spaces in the PDF output. The proposed solution uses the % character at the start and end of \\sphinxupquote{...} to prevent spaces from being included. The link to screenshots provided show the differences before and after the enhancement, highlighting the added spaces. \n\nThe description mentions that \"But I have no strong opinion if good or bad,\" indicating uncertainty about implementing the solution. The \"How to Reproduce\" section is unclear what to do to reproduce the issue.",
        "false_negative":0,
        "false_negative_notes":"The test patch modifies an existing test, `test_latex_code_role`, in `tests\/test_build_latex.py` to verify that the issue has been fixed by the gold patch. The test checks that the LaTeX output for inline code does not include extra spaces at the start and end. By asserting that the content includes the expected string with `%` characters, it verifies that the LaTeX markup is correct. This ensures that the gold patch's changes (adding `%` to the start and end of `\\sphinxupquote{...}`) are effective in preventing extra spaces in the inline code blocks. The updated test perfectly covers all possible scenarios.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":17,
        "false_negative_decided_by":17,
        "other_major_issues_decided_by":17,
        "difficulty_decided_by":"[17, 7, 59]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-13513",
        "underspecified":0,
        "underspecified_notes":"- The issue description mentions that the debug error view shows no traceback if `exc.__traceback__` is `None` for the innermost exception.\n- It provides sample code and mentions that the issue can be replicated by uncommenting two lines inside the except block.\n- It also list out the file and line of the issue through the github link.\n- It explains that the cause of this issue is in `django.views.debug.get_traceback_frames()`, which stops when it encounters the first exception with a `None` valued `exc_value.__traceback__`.\n- It also provides a solution code sample to fix the issue by iterating through all the exceptions.\n- It is well specified, and it is clear what is required for a successful solution.",
        "false_negative":0,
        "false_negative_notes":"- the test doesn't depend on the solution being implemented, hence, it shall cover all the solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":3,
        "false_negative_decided_by":3,
        "other_major_issues_decided_by":3,
        "difficulty_decided_by":"[6]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-14170",
        "underspecified":0,
        "underspecified_notes":"The ticket is clear. It seems that Query optimization in YearLookup breaks when filtering by \"__iso_year\". Reproducible examples are provided in the ticket description where we can see that the annotation works but it doesn't work with `filter`, also, the issue happens also with implicit lookup.",
        "false_negative":0,
        "false_negative_notes":"The tests are mimicking the same test cases in the ticket where it uses filtering on  \"__iso_year\". Any solutions to this problem should Pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":7,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 5, 3]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-12965",
        "underspecified":0,
        "underspecified_notes":"The issue description is clear about the problem and the expected behavior. It also provides a clear example of the performance regression and the SQL query generated by Django 3.0 and 3.1. This information is enough to understand the problem and work on a solution.",
        "false_negative":1,
        "false_negative_notes":"The test case `test_fast_delete_all` checks if the generated SQL query does not contain the `SELECT` keyword. This is a good test to verify that the subquery is not used when performing a full delete. However, the test does not check the performance of the deletion operation. The performance regression is a critical part of the issue description, and the test does not cover this aspect. A new test case should be added to check the performance of the deletion operation. Additionally, an engineer might use an alias for the subquery instead of ensuring the base table is in aliases. This solution would not be detected by the current test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":74,
        "false_negative_decided_by":74,
        "other_major_issues_decided_by":74,
        "difficulty_decided_by":"[74, 60]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-10973",
        "underspecified":1,
        "underspecified_notes":"The issue describes the need to use \"subprocess.run\" and set the PGPASSWORD environment variable in the \"django.db.backends.postgresql.client\". While the description mentions the relevant function (subprocess.run) and the version of Python in which it was added, some details are not explicitly mentioned, such as the exact changes required in the codebase or what the ideal solution should look like. Therefore, the preferred choice should be option 1.",
        "false_negative":1,
        "false_negative_notes":"The tests added in the Test Patch are well-scoped for the most part, and cover various scenarios to ensure that the subprocess.run() function is correctly setting the PGPASSWORD environment variable instead of using the previous .pgpass file method. The tests check for the correct command line arguments and ensure the password is set correctly in the environment. They also verify that special characters and accents in usernames and passwords are handled appropriately. However, the tests are tied to the specific implementation of using subprocess.run() with an environment variable, which means that if a solution deviates from this method, the tests might not recognize it as correct. For example, if a solution implemented a different way to manage environment variables or subprocess handling that did not rely on subprocess.run(), it might be considered valid but fail these tests. Thus, while the tests are comprehensive for the specified approach, they may not account for other correct methods not explicitly described in the issue",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":89,
        "false_negative_decided_by":80,
        "other_major_issues_decided_by":80,
        "difficulty_decided_by":"[91]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":18,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.5,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-15569",
        "underspecified":1,
        "underspecified_notes":"- The issue description clearly states that the _unregister_lookup method in Django's RegisterLookupMixin class does not clear the lookup cache, whereas the register_lookup method does, but it doesn't mention why is it necessary OR if it is causing any issue.\n- The issue description points to the specific code lines with provided links. Although an engineer can find the relevant functions in query_utils.py, these links can mislead the engineer to other line of code if that file changes.\n- The description mentions that minor changes are needed in the tests but does not specify what these changes are.\n- Apart from some minor blanks to fill in about the issue, it is clear what is required for a valid solution.",
        "false_negative":1,
        "false_negative_notes":"The test in `tests\/custom_lookups\/tests.py` ensures that the lookup cache is correctly updated when a custom lookup is registered and unregistered.\nThe change in `tests\/model_fields\/test_jsonfield.py` removes a redundant call to `_clear_cached_lookups` verifying that the cache is cleared by the modified `_unregister_lookup` method.\nThe `schema.tests.SchemaTests.test_func_unique_constraint_lookups` test checks that the unique constraint behaves correctly, ensuring that the changes to the `_unregister_lookup` method do not affect this functionality.\nHowever, there is no test to ensure that the cache clearing mechanism behaves correctly when trying to unregister a non-existent lookup or there is no test for scenarios where only part of a lookup is unregistered. These are unusual as majority of the tests have been covered in the test patch hence a rating of 1 is feasible.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":26,
        "false_negative_decided_by":6,
        "other_major_issues_decided_by":26,
        "difficulty_decided_by":"[26, 24]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":26,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.28,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-12774",
        "underspecified":0,
        "underspecified_notes":"The description mentions a `ValueError` thrown when `QuerySet.in_bulk()` is used for fields with `UniqueConstraints`. An example code is provided. The expected behavior is that the `in_bulk` works and doesn't throw an error. The issue is well-defined. ",
        "false_negative":1,
        "false_negative_notes":"The tests are mostly aligned with the issue, the test patch includes several key tests. The test_in_bulk_meta_constraint and test_in_bulk_non_unique_field tests address issues identified in the Gold Patch by checking if in_bulk() correctly handles unique constraints and raises errors for non-unique fields. The test_in_bulk_non_unique_meta_constaint also relates to the Gold Patch by testing the handling of non-unique fields with constraints. However, they might not cover edge cases involving composite unique constraints, conditional unique constraints, or complex model configurations with multiple unique constraints. Additionally, the test_values test, although useful, does not pertain to the Gold Patch issues and is unrelated to the changes introduced.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":73,
        "false_negative_decided_by":80,
        "other_major_issues_decided_by":73,
        "difficulty_decided_by":"[73, 69]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20240824_gru"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-15863",
        "underspecified":1,
        "underspecified_notes":"- The issue description mentions that the `floatformat` filter drops precision in `Decimal` numbers.\n- It provides sample code to replicate the issue.\n- It explains that the problem arises from the incorrect conversion of `Decimal` numbers in the `floatformat` implementation, which doesn’t work correctly for `Decimal` numbers. Instead, Decimal numbers are being converted to float, causing data loss.\n- It is clear that the conversion from Decimal to float should be avoided, but the description does not specify what the solution should be.",
        "false_negative":0,
        "false_negative_notes":"The test patch adds a new assertion within the `test_inputs` method, verifying that a `Decimal` number with high precision is formatted correctly by the `floatformat` filter, retaining all the specified significant digits. This confirms that the applied patch, which changed the conversion from `repr(text)` to `str(text)`, successfully fixes the precision loss issue with `Decimal` numbers. Updated tests perfectly covers all the possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":3,
        "false_negative_decided_by":17,
        "other_major_issues_decided_by":17,
        "difficulty_decided_by":"[17, 27, 3]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":13,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241016_composio_swekit",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.64,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"pytest-dev__pytest-7982",
        "underspecified":1,
        "underspecified_notes":"The issue description identifies a problem with symlinked directories not being collected in `pytest 6.1.0` and suggests removing `follow_symlinks=False`. While i can't access the external link to know the exact code location and error produce by the codebase. So, it better to rate as 1.",
        "false_negative":0,
        "false_negative_notes":"The test creates a directory and a file and does the symbolic links, then runs the test against them to assert the symlink is working. This will cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":62,
        "false_negative_decided_by":58,
        "other_major_issues_decided_by":58,
        "difficulty_decided_by":"[58, 15, 62]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":25,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240820_epam-ai-run-gpt-4o",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.31,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-14155",
        "underspecified":1,
        "underspecified_notes":"The issue description clearly states the problem, ResolverMatch.__repr__() doesn't handle functools.partial() nicely, and it provides a suggestion for a solution, unwrapping functools.partial objects in ResolverMatch.__init__(). \nHowever, it doesn't provide specific details on what the expected output of __repr__() should be.\nDespite this blank, the issue description provides a clear direction for a solution, and an experienced software engineer can make a sensible interpretation of what is required to resolve the issue.",
        "false_negative":1,
        "false_negative_notes":"The tests provided in the Test Patch are specific to the Gold Patch solution, which unwraps functools.partial objects in ResolverMatch.__repr__(). \nThe tests check that the __repr__() output includes the underlying function and arguments provided to the partial function.\nHowever, the tests may not cover all possible solutions to the issue. \nFor example, a solution that handles functools.partial objects differently, such as by using a different representation or by recursively unwrapping partial functions, might not pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":40,
        "false_negative_decided_by":40,
        "other_major_issues_decided_by":40,
        "difficulty_decided_by":"[5, 13]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"pytest-dev__pytest-7324",
        "underspecified":1,
        "underspecified_notes":"The issue is that Pytest crashes the interpreter on debug build for 3.8+. The crash happens becaue an internal check fails when trying to compile an expression using reserved keywords like 'False'. This cause the interpreter to abort. So the expectation is that the interpreter should handle the expression without crashing. It's not clear why the crash occurs or what causes this crash. There are some blanks to fill in about the issue, but there is a sensible interpretation of what is required for a successful solution.",
        "false_negative":0,
        "false_negative_notes":"The test is quite accurate as it tests for \"True\", \"False\" and \"None\" along with others to be valid matching identifiers be checking for no error. No matter the fix for the issue, this test patch can be used to test the solution and all solutions should be able to pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":59,
        "false_negative_decided_by":38,
        "other_major_issues_decided_by":38,
        "difficulty_decided_by":"[38, 62]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-11618",
        "underspecified":0,
        "underspecified_notes":"It is clear that distance calcilation between two points is wrong. \n3rd dimension is ignored probably because first point is 2 dimension.",
        "false_negative":0,
        "false_negative_notes":"The test patch add test case for distance between 2 dimenional point and 3 dimensional point.\nIt checks exactly for the issue mentioned in issue description and does not add any irrelevant test case.\nIt will cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":23,
        "false_negative_decided_by":23,
        "other_major_issues_decided_by":23,
        "difficulty_decided_by":"[23, 13]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":17,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.53,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"pytest-dev__pytest-5840",
        "underspecified":1,
        "underspecified_notes":"The issue description outlines an ` ImportError` while loading `conftest.py` in `pytest` version  5.1.2. `Pytest` is unable to correctly resolve the module path with an error message: \"No module named 'python'\".\nThe description outlines that this error is not raised in version 5.1.1 and expects the same for the newer version.\nHowever, the issue description contains some vague statements, i.e., \"the path was converted to lowercase\"  and \"(windows import folder casing issues)\", that require some research to understand.",
        "false_negative":1,
        "false_negative_notes":"The tests provided in the patch cover a wide range of scenarios related to the issue of import path casing on Windows. The patch introduces two main changes: the removal of the `unique_path` function and the use of `Path().resolve()` to handle path normalization. The existing tests are updated to remove the use of unique_path and to check paths directly using the resolved path method. A new test `test_conftest_uppercase` is added to explicitly check the scenario where the 'conftest' path contains uppercase characters, addressing the core issue described. The tests validate that the 'conftest' module loading works correctly even when the path casing is inconsistent which directly addresses the issue of 'ImportError' due to path casing differences. The tests cover majority of the correct solutions however some unusual solutions such as introducing completely new methods for path normalization or restructuring the directory scanning logic may not be directly covered. However, these solutions are unlikely to be developed. So a score of 1 is appropriate.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":57,
        "false_negative_decided_by":6,
        "other_major_issues_decided_by":57,
        "difficulty_decided_by":"[6]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-15375",
        "underspecified":0,
        "underspecified_notes":"-The issue description stated that using Django 4.0.1 with SQLite, an `OperationalError` occurs when applying the default argument in the Sum aggregation function after an annotate operation due to a syntax error in the generated SQL\n-The issue can be bypassed by using Coalesce to manually handle default values\n-For a successful solution, the code should not produce an error",
        "false_negative":0,
        "false_negative_notes":"The tests check that the `default` argument in Django's aggregation functions works correctly after annotation operations and that it is ignored when not part of an aggregation function, ensuring the expected behavior and results in both cases. The tests perfectly cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":64,
        "false_negative_decided_by":64,
        "other_major_issues_decided_by":64,
        "difficulty_decided_by":"[64, 82, 77]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-19040",
        "underspecified":0,
        "underspecified_notes":"When using SymPy's `factor` function with the `extension` parameter, a factor is unexpectedly dropped from the result. The `factor` function should correctly factor expressions even when extensions are specified. Hence, the value is well specified.",
        "false_negative":0,
        "false_negative_notes":"The `@XFAIL` decorator is removed from the `test_issue_5786` function that should pass now. This test checks the behavior of the `factor` function when used with the `extension` parameter, directly related to the issue. Therefore, All successful solution will allow the test to pass.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":42,
        "false_negative_decided_by":42,
        "other_major_issues_decided_by":42,
        "difficulty_decided_by":"[14, 43]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241028_agentless-1.5_gpt4o"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-8459",
        "underspecified":0,
        "underspecified_notes":"- The Issue description is clear stating that when using autodoc_typehints = 'description', the autodoc_type_aliases does not replace type hints as expected.\n- The issue is well-described with clear steps to reproduce, observed behavior, and expected behavior.\n- With autodoc_typehints = 'description', the generated documentation shows Dict[str, Any] instead of types.JSONObject.\n- The documentation should show types.JSONObject instead of Dict[str, Any]\nThis information is sufficient to implement a successful solution",
        "false_negative":0,
        "false_negative_notes":"- The test patch is designed to check the functionality of autodoc_type_aliases when autodoc_typehints is set to \"description\". It verifies the output without being tied to a specific implementation.\n-  It will test all potential solutions for the issue as described and will not unfairly penalize any solutions",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":15,
        "false_negative_decided_by":15,
        "other_major_issues_decided_by":15,
        "difficulty_decided_by":"[15, 76, 87]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":3,
        "solved_by":[
            "20240820_honeycomb",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.92,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sympy__sympy-13877",
        "underspecified":1,
        "underspecified_notes":"The issue describes an error with Matrix determinant, sympy.det raising Invalid NaN comparison error when it shouldn't. With respect to the provided error traceback, the poster suggests that Barresi's algorithm shouldn't show in symbolic matrices as it is only valid for integer matrices. While the primary problem (error in Matrix determinant with symbolic variables) is clear, the engineer would have to fill-in the specific expected values of the determinants and the relevance of the Barresi's algorithm.",
        "false_negative":0,
        "false_negative_notes":"The test patch checks that the determinant of symbolic matrices are resolved instead of raising an error. This is exactly the requirement from the issue description.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":72,
        "false_negative_decided_by":72,
        "other_major_issues_decided_by":72,
        "difficulty_decided_by":"[72, 20]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":5,
        "solved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241028_agentless-1.5_gpt4o",
            "20241001_nfactorial",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.86,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-20676",
        "underspecified":0,
        "underspecified_notes":"The issue is clear; interactive SpanSelector incorrectly forces axes limits to include 0. A sample code is shared to reproduce the problem. The actual and expected outcomes were stated.",
        "false_negative":0,
        "false_negative_notes":"test_span_selector_bound ensures that interactive SpanSelector does not incorrectly forces axes limits to include 0.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":54,
        "false_negative_decided_by":54,
        "other_major_issues_decided_by":54,
        "difficulty_decided_by":"[54, 34]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"pytest-dev__pytest-8399",
        "underspecified":0,
        "underspecified_notes":"The issue description is straightforward as the problem revolves around 'unittest's 'setUpClass' fixtures being no longer prefixed with an underscore (_), making them non-private. The issue and its solution are made simpler to grasp by the explanation of intended behavior, which is for these fixtures to be deemed private and only shown with the -v switch.",
        "false_negative":0,
        "false_negative_notes":"The tests mentioned are somewhat true to the issue as they specifically check for the presence and absence of the \"no docstring available\" message under different verbosity conditions (-v flag). This is directly related to ensuring that unittest behave in the expected way.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":38,
        "false_negative_decided_by":38,
        "other_major_issues_decided_by":38,
        "difficulty_decided_by":"[17, 39]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":26,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20240820_honeycomb",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.28,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-14976",
        "underspecified":0,
        "underspecified_notes":"It looks like lambdify is not working properly for Rationals and results in code that is not supported in python.\nThis is due to nsolve not evaluating the expression at full precision.\nTwo example codes are given, one for lambdify and other for nsolve which further helps in resolving the root cause.",
        "false_negative":1,
        "false_negative_notes":"The tests are specifically designed to check the exact implementation provided in gold patch i.e. verifying that numerator and denominator of 'Rational' numbers are individually wrapped in 'mpmath.mpf', but there might be other unusual solutions like configuring 'lambdify' to automatically apply high precision to all rational numbers when 'mpmath' is used, so the tests might overlook such solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":23,
        "false_negative_decided_by":13,
        "other_major_issues_decided_by":23,
        "difficulty_decided_by":"[23, 13]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":8,
        "solved_by":[
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240924_solver",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.78,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"matplotlib__matplotlib-26466",
        "underspecified":0,
        "underspecified_notes":"The issue description is complete.It describes the problem on how updating a passed array affects an annotation. It has examples to reproduce the issue and good information of what a solution would be. The reporter expects the copy of the array to be used for annotation so that subsequently updating the array won’t affect the annotation.",
        "false_negative":0,
        "false_negative_notes":"This Matplotlib test, `test_annotate_and_offsetfrom_copy_input`, is designed to verify that annotations in a plot behave consistently when using different approaches for positioning, even when the input data for positioning is modified after the annotation call. It uses the `@check_figures_equal decorator` to ensure that the two approaches produce visually identical results on the plots. This test is adequate to validate all solutions as it satisfies the issue requirement.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":56,
        "false_negative_decided_by":56,
        "other_major_issues_decided_by":56,
        "difficulty_decided_by":"[56, 53, 55]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-25287",
        "underspecified":1,
        "underspecified_notes":"while the textual description and the patch provided are clear and actionable, the visual evidence (images of the actual and expected outcomes) is referenced but not accessible directly in the issue text. This lack of visual context might require the developer to independently verify the visual discrepancy by recreating the plots using the provided code snippet.\nThe patch provided includes specific line changes in axis.py at lines 2203 and 2456, modifying how the color is set for the offset text (color=mpl.rcParams['xtick.color'] if mpl.rcParams['xtick.labelcolor']=='inherit' else mpl.rcParams['xtick.labelcolor'],). This modification suggests a clear solution path, but the effectiveness of this solution in addressing the visual mismatch must be confirmed through testing. The code snippets and patch are technically sufficient for making the necessary changes, with so,e intepretations  we can reach to a sucessfull solution",
        "false_negative":0,
        "false_negative_notes":"The tests cover exactly the issue described in the problem statement, and it checks if the color of the exponent is correctly set or inherited from the label color, for both x and y axis.\nSo any new solutions should be able to pass the tests. Label 0",
        "other_major_issues":0,
        "other_notes":"No other issues with the task",
        "difficulty":"<15 min fix",
        "underspecified_decided_by":37,
        "false_negative_decided_by":53,
        "other_major_issues_decided_by":53,
        "difficulty_decided_by":"[37, 76]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":17,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.53,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-20859",
        "underspecified":0,
        "underspecified_notes":"The issue description clearly highlights a `TypeError`  that occurs when adding a legend to a `SubFigure` in Matplotlib and points to fix `FigureBase` as the potential fix for the error. Therefore, it is clear what is required for a successful solution.   ",
        "false_negative":0,
        "false_negative_notes":"The test `test_subfigure_legend` in `test_legend.py` ensures that a legend can be correctly added to a subfigure in Matplotlib. This test perfectly covers the possible solutions that involve adding a legend when using subfig. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":57,
        "false_negative_decided_by":57,
        "other_major_issues_decided_by":57,
        "difficulty_decided_by":"[57, 58]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":15,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.58,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"psf__requests-5414",
        "underspecified":0,
        "underspecified_notes":"The problem statement highlights a `request` library issue when attempting to access an invalid URL, like `http:\/\/.example.com` it raises an `UnicodeError` exception with this message \"encoding with 'idna' codec failed (UnicodeError: label empty or too long)\", instead of raising an \"InvalidUrl: URL has an invalid label\" exception, which is the expected behavior of this library.\nThe problem statement is clear and explain the issue in detailed also the desired solution is mentioned in the description that the expected result of `request` library need to be this error \"InvalidUrl: URL has an invalid label\".",
        "false_negative":0,
        "false_negative_notes":"The gold patch function `prepare_url` fixes the mentioned issue by extending the check for invalid host labels that start with a dot(`.`).\nThe test cases successfully pass the reasonable and unusual solution mentioned in the issue description by ensuring that the `InvalidURL` exception is raised for URLs that start with an asterisk or a dot.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":49,
        "false_negative_decided_by":49,
        "other_major_issues_decided_by":49,
        "difficulty_decided_by":"[49, 15]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":8,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20240820_honeycomb",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.78,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-14034",
        "underspecified":0,
        "underspecified_notes":"The issue description effectively outlines the problem with the “MultiValueField” implementation in the custom filed “MF”, detailing the specific scenarios where validation fails when it should not. It provides a clear assertion demonstrating the behavior of “form.is_valid()” when both subfields are empty and when one subfield contains a value. The inclusion of the field and form definitions offers sufficient context, allowing an experienced engineer to understand the requirements for a solution without needing further clarification. Overall, the issue is specified clearly, making it straightforward to identify and implement the necessary fix. ",
        "false_negative":0,
        "false_negative_notes":"The tests thoroughly validate the behavior of the “MultiValueField” with required subfields as described in the issue. The “PartiallyRequiredForm” checks various scenarios, ensuring the form is invalid when required fields are missing. Additionally, it confirms that the required attributes are rendered correctly for each subfield. Since the tests encompass the expected behavior without relying on implementation details from the Gold Patch, they are well-scoped to identify all reasonable solutions to the issue. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":81,
        "false_negative_decided_by":81,
        "other_major_issues_decided_by":81,
        "difficulty_decided_by":"[81, 28, 53]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-11510",
        "underspecified":1,
        "underspecified_notes":"The issue is well-defined and describes a problem with the Yocto documentation where a custom extension is used to perform search-and-replace operations in literal blocks of documentation files. The problem is that this mechanism does not work for all files, particularly those included via the `.. include::` directive. The provided example demonstrates that the final HTML output (`build\/index.html`) still contains the original placeholder (`&REPLACE_ME;`) instead of the expected replaced text (`REPLACED`). The issue description also includes a clear example of the expected behavior. Additionally, the description provides useful links, though some information remains incomplete. Therefore, it should be rated as 1.",
        "false_negative":1,
        "false_negative_notes":"- The new test functions `test_include_source_read_event` and `test_include_source_read_event_nested_includes` are essentially testing that `source-read` is included in the documentation build.\n- However, `test_include_source_read_event_nested_includes` also checks for nested includes, which was not mentioned in the issue description.\n- Therefore, some unconventional solutions might not pass the `test_include_source_read_event_nested_includes` test, which makes the test deserve a rating of 1.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":12,
        "false_negative_decided_by":3,
        "other_major_issues_decided_by":3,
        "difficulty_decided_by":"[3, 12]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"django__django-11820",
        "underspecified":1,
        "underspecified_notes":"The ticket is complaining about not accepting `__pk` with ordering. Also, it showed the error that is generated from the code. The ticket didn't provide a reproducible example but it is pretty straightforward to create. ",
        "false_negative":1,
        "false_negative_notes":"The test `test_ordering_pointing_multiple_times_to_model_fields` checks for an error when `Meta.ordering` in the `Child` model attempts a nested field lookup (`parent__field1__field2`), confirming that `models.E015` is raised. The test `test_ordering_pointing_to_related_model_pk` verifies that including the primary key of a related model (`parent__pk`) in `Meta.ordering` does not raise an error. \n\nBoth tests are related to the issue but the test `test_ordering_pointing_to_related_model_pk` is checking if the `check()` method returns an empty list `[]` as expected with the nature of Django but a very very unusual solution might decide to return something else or maybe don't accept `pk` and force using `id` instead of `pk` because they are same, `pk` is just an alias of `id`. But they are very very unusual solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":7,
        "false_negative_decided_by":44,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 14]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"sympy__sympy-13551",
        "underspecified":0,
        "underspecified_notes":"The issue clearly describes that sympy's symbolic evaluation of the product `(n + 1 \/ 2^k)` from k = 0 to n-1 gives incorrect results. \nFor instance, when n = 2, SymPy returns `9\/2` instead of the correct `15\/2`. This indicates an issue with how SymPy handles this specific symbolic computation.\nThe given information is enough for a senior developer to dig into the topic find the root cause of the issue and fix it.",
        "false_negative":0,
        "false_negative_notes":"The test `test_issue_13546` verifies the same calculation as the example given in the issue description. It checks if `sympy` correctly evaluates the product `(n + 1 \/ 2^k)` from `k = 0` to `n-1` for `n = 2`, ensuring the result is `15\/2`. This directly addresses the issue described, where SymPy was returning the incorrect result.\nSo the test is testing exactly the issue being raised and any other solution that might fail the test is not really possible.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":44,
        "false_negative_decided_by":44,
        "other_major_issues_decided_by":44,
        "difficulty_decided_by":"[46, 42]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-14710",
        "underspecified":1,
        "underspecified_notes":"The issue description states a problem, and the expectation from the solution is straight-forward (to make the types of y_pred and y_true align before the scorer processes them), but it does not point out why y_true and y_pred arrive at the scorer with different types when they're derived from the same data, and why it suggests encoding y_true each time instead of making y_pred align with the type of y_true. It could have been more detailed about the problem and its suggested solution.",
        "false_negative":0,
        "false_negative_notes":"- The test ensures that the `HistGradientBoostingClassifier` can handle string targets properly when using early stopping with different scoring methods.\n- Any solution cloud pass the test.\nTherefore, the preferable choice is 0.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":31,
        "false_negative_decided_by":1,
        "other_major_issues_decided_by":1,
        "difficulty_decided_by":"[31, 29]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":21,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.42,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-12754",
        "underspecified":1,
        "underspecified_notes":"- The issue has been mentioned that when creating a model subclass and moving a field onto it in the same step causes migration to fail with a `FieldError`.\n- This will occur when the field name clashes between the subclass and its base class.\n- It has provided an example code to reproduce the error with the error message.\n- The issue is specified well but there lacks some detail about the expected solution and approach which can be considered as some blanks to fill in.",
        "false_negative":1,
        "false_negative_notes":"The test `test_add_model_with_field_removed_from_base_model` directly addresses the issue described verifying that removing a base field takes place before adding a new inherited model with a field of the same name. The solution patch in `autodetector.py` correctly implements the logic to ensure that the removal of fields from the base model is handled before creating the new model with the same field name.  The test includes assertions to check that: the number of migrations is as expected, the types of operations generated are correct (`RemoveField` followed by `CreateModel`) and the specific attributes of the operations are as expected ensuring that the title field is correctly removed from Readable and the Book model is correctly created. However, some tests are missing that should be tested such as test scenarios where multiple fields are moved from a base model to a subclass in one migration step or  tests with different field types to ensure the logic works universally and not just with `CharField`. The provided tests do not cover some unusual solution such as renaming fields temporarily to avoid clashes however it is unlikely so a score of 1 is appropriate.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":66,
        "false_negative_decided_by":6,
        "other_major_issues_decided_by":6,
        "difficulty_decided_by":"[6, 60]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-14122",
        "underspecified":1,
        "underspecified_notes":"The issue description clearly identifies the core problem: Meta.ordering fields should not be included in the GROUP BY clause. This leads to wrong aggregation.\nThere are however multiple references to other links, commits or tickets. This riddles the issue description with blanks, but a sensible interpretation of what is required for a successful solution can still be gotten. ",
        "false_negative":0,
        "false_negative_notes":"The test confirms that `Meta.ordering` does not affect the `GROUP BY` clause by counting articles per author and ensuring correct results. This test is sufficient as it directly addresses the issue and validates correct aggregation.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":18,
        "false_negative_decided_by":14,
        "other_major_issues_decided_by":14,
        "difficulty_decided_by":"[14, 18, 43]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":5,
        "solved_by":[
            "20241028_agentless-1.5_gpt4o",
            "20240824_gru",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.86,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-14765",
        "underspecified":0,
        "underspecified_notes":"The ticket requirements are very clear. The ticket is asking for this implementation that the function assert `real_apps` is a set when non-None. The requirement is clear.",
        "false_negative":0,
        "false_negative_notes":"The tests are testing that an assert error is being raised when the element sent as parameter is not None and not a set which is exactly the requirement of the ticket. Any solution that would satisfy the ticket requirement would pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":7,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 14, 43]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":30,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.17,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sympy__sympy-13031",
        "underspecified":1,
        "underspecified_notes":"The issue description effectively highlights a change in behavior between Sympy 1.0 and 1.1 for Matrix.hstack when dealing with matrices with zero rows. It includes clear examples and comparisons between versions, but it could be improved by explicitly stating the expected behavior to remove any ambiguity about the desired outcome.",
        "false_negative":0,
        "false_negative_notes":"The test patch is well-designed and directly addresses the issue described. It includes specific tests for stacking zero-dimensional matrices using both hstack and vstack, ensuring that the behavior matches expectations. \nThe tests are comprehensive and should cover all reasonable solutions to the problem.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":18,
        "false_negative_decided_by":18,
        "other_major_issues_decided_by":18,
        "difficulty_decided_by":"[18, 26, 19]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20240820_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-11149",
        "underspecified":1,
        "underspecified_notes":"The issue lacks clarity as it points to an external link which is another issue though related. There is not enough information here for a successful solution. The quoted text says a user with view only permissions is able to make write changes to the TabularInline model with a ManyToManyField. The solution will be to enforce permissions on the TabularInline models.",
        "false_negative":1,
        "false_negative_notes":"The tests are well-structured and cover scenarios for view-only, add, change, and delete permissions, as well as inline admin formsets.\nHowever, the tests may not cover all possible edge cases or unusual solutions. For example:\nThe tests assume that the Author model has a books field, but they do not test what happens if this field is missing or has a different name.\nThe tests do not cover the case where the user has multiple permissions (e.g., both view and change permissions).",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":58,
        "false_negative_decided_by":40,
        "other_major_issues_decided_by":40,
        "difficulty_decided_by":"[58, 6]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-15100",
        "underspecified":0,
        "underspecified_notes":"- The description highlights that the `strip_accents=\"unicode\"` feature of CountVectorizer and related functions does not work as expected when processing strings with accents that are already in NFKD form.\n- The description provides code to reproduce the issue.\n- The description mentions that the expected result is for both `s1` and `s2` to be normalized to the same string, \"n.\" However, the actual result is that `s2` remains unchanged because `strip_accents=\"unicode\"` does nothing if the string is already in NFKD form.\n- As the issue and expectations are clear, a score of 0 would be the best choice.",
        "false_negative":0,
        "false_negative_notes":"The Test Patch introduces new assertions to verify that the `strip_accents_unicode` function works as expected. These assertions can also be used to validate other solutions. The preferred rating is 0.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":39,
        "false_negative_decided_by":39,
        "other_major_issues_decided_by":39,
        "difficulty_decided_by":"[39, 68]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":25,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.31,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-11276",
        "underspecified":1,
        "underspecified_notes":"- The issue clearly states that django.utils.html.escape() duplicates functionality available in Python's standard library (html.escape()) and mentions that html.escape() is faster and community-developed\n- The expected solution is to replace the existing implementation of django.utils.html.escape() with Python's html.escape()\n- It mentions that html.escape() converts ' to &#x27 rather than &#39, leaving some blanks on how it should be addressed if django.utils.html.escape() is to be replaced.\n- The problem and expected solution is clear apart from some blanks to fill in about the issue.",
        "false_negative":1,
        "false_negative_notes":"The test looks good but there is one issue. The new single quote formula i.e &#x27 is used instead of the old one. If some strange solution converts single quote to the old value to retain backward compatibility then in that case this test would fail hence rating it 1. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":26,
        "false_negative_decided_by":30,
        "other_major_issues_decided_by":11,
        "difficulty_decided_by":"[26, 30]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":19,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240402_sweagent_claude3opus",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20240924_solver",
            "20231010_rag_swellama7b",
            "20241028_solver",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.47,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-14725",
        "underspecified":1,
        "underspecified_notes":"- The issue describes a need for model formsets to have an option to disallow new object creation, providing an \"edit only\" view.\n- It points out the misuse of extra=0 and the potential for adding forms via JavaScript or additional post data, which is not desirable.\n- However, it does not provide a proposed solution or specific implementation details and the developer must explore the codebase to determine the best approach to implement the feature. ",
        "false_negative":1,
        "false_negative_notes":"- The test patch includes several well-designed tests that validate the \"edit only\" feature for model formsets and inline formsets. These tests ensure that new objects cannot be created while allowing edits to existing objects, covering the primary use cases.\n- The test patch relies heavily on edit_only param introduced in the Gold Patch. However, an unusual solution might involve adding custom validation logic within the form itself to prevent the addition of new objects. For instance, overriding the clean method to raise an error if new objects are detected. \n- Therefore, the tests cover the majority of correct solutions, but an unusual solution may be missed.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":26,
        "false_negative_decided_by":26,
        "other_major_issues_decided_by":26,
        "difficulty_decided_by":"[26, 14, 19]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-11999",
        "underspecified":1,
        "underspecified_notes":"Since Django 2.2, the `get_FOO_display()` method for fields with choices is generated by the metaclass, preventing direct overrides within the model class as was possible in Django 2.1.\n\nThe issue presents the requirement but does not provide any hints about the solution.",
        "false_negative":1,
        "false_negative_notes":"The test patch includes a test specifically designed to verify that the get_FIELD_display method can be overridden as expected. This aligns with the issue described, which is that the method cannot be overridden in Django 2.2+ while it could be in version 2.1. The added test, test_overriding_FIELD_display, checks if the overridden method returns the custom value. However, it might miss unusual scenarios where the issue could be influenced by other factors like custom model fields or complex field configurations. Most reasonable solutions should pass this test, but edge cases or unconventional implementations may not be fully covered.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":14,
        "false_negative_decided_by":80,
        "other_major_issues_decided_by":14,
        "difficulty_decided_by":"[14, 80, 69]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":17,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.53,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-11292",
        "underspecified":1,
        "underspecified_notes":"The issue clearly states the objective, which is to expose the existing skip_checks option via the command line by adding a --skip-checks flag to management commands. It state that the skip_checks option currently exists as a stealth option.  The requirement to make the skip_checks option accessible through a command-line flag (--skip-checks) is explicitly mentioned. However, there are some missing blanks such as what should be the default behavior if the --skip-checks option is not provided or should there be any specific error handling or logging when the --skip-checks option is used? Hence the option 1 seems reasonable.\n ",
        "false_negative":1,
        "false_negative_notes":" The test test_skip_checks effectively verifies that the --skip-checks option allows a management command to run without performing system checks. The test ensures that a management command (set_option) works correctly with the --skip-checks option, ensuring that the basic integration is tested.  It covers the core functionality, however some unusual solutions might be misses such as it might also be useful to test a scenario where --skip-checks is not used to ensure that the system checks are performed as expected. Although it wasnt in the issue description but it would be good to have.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":6,
        "false_negative_decided_by":6,
        "other_major_issues_decided_by":24,
        "difficulty_decided_by":"[24, 6]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":15,
        "solved_by":[
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.58,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"matplotlib__matplotlib-23476",
        "underspecified":0,
        "underspecified_notes":"- The issue text specifies that the DPIs of figures are being doubled in M1 Mac machines. The issue is specific to the M1 macs and doesn't exist on other systems apparently.\n- The steps for reproduction have been provided with all the necessary details about the test environment.\n- The expected behaviour has also been communicated properly i.e. no such unwarranted doubling of DPIs should happen.",
        "false_negative":0,
        "false_negative_notes":"- The tests ensure that the DPI values remain as expected and don't change irregularly.\n- This should be good enough to cover all the potential solutions of the specified problem.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":34,
        "false_negative_decided_by":34,
        "other_major_issues_decided_by":34,
        "difficulty_decided_by":"[34, 54]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241028_solver"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-7454",
        "underspecified":1,
        "underspecified_notes":"The issue in issue description states that inconsistent handling of None by `autodoc_typehints`. It clearly states expected behavior that `None` in a type hint links to the documentation for the `None` singleton regardless of whether 'description' or 'signature' mode is used. It clearly states the issue and the expected behavior, but it referenced another link to learn more about the problem. Hence, rating it 1.",
        "false_negative":1,
        "false_negative_notes":"The test cases are good, it included test for int type annotation, test for list[int] type annotation and test for None Type annotation, but it could have ensured that other similar singletons or built-in constants are tested, verify that these changes integrate well with the rest of tests.Hence, it can miss unusual solutions. Hence, rating it 1.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":2,
        "false_negative_decided_by":2,
        "other_major_issues_decided_by":2,
        "difficulty_decided_by":"[2, 52]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"sphinx-doc__sphinx-9258",
        "underspecified":1,
        "underspecified_notes":"- The issue highlights support for specifying multiple types acceptable for a `parameter\/attribute\/variable`.\n- The expected behavior is a function that accepts multiple types like `bytes` and `str`. \n- The description references a different website (PyCharm documentation `Type hinting in PyCharm﻿` page) for syntax example.\nTherefore, the preferable choice should be 1.",
        "false_negative":0,
        "false_negative_notes":"The tests perfectly cover what is needed for a successful solution, checking if the new operator | is supported within the mock class created with the age parameter, that should be int or string. Lines 1013-1017. This covers the exact case raised in the issue statement and any new solution should pass",
        "other_major_issues":0,
        "other_notes":"No other issues with the task",
        "difficulty":"<15 min fix",
        "underspecified_decided_by":1,
        "false_negative_decided_by":53,
        "other_major_issues_decided_by":53,
        "difficulty_decided_by":"[53, 69, 1]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-15268",
        "underspecified":1,
        "underspecified_notes":"- The main problem is that there are unnecessary extra steps (AlterFooTogether operations) in the migration files. These can be combined into a single step to make the process more efficient.\n- The issue is mostly clear, with a good problem description and a concrete example that makes the desired outcome easy to understand.\n- However, some details are missing, like how to handle complex situations or the exact steps to combine the operations. This means the engineer might need to make assumptions or ask for more information. For example:\n  - The issue doesn't explain how to deal with cases where different migration steps depend on the constraints being removed and added in a specific order. Merging them could cause problems.\n  - The provided example is simple, with only one unique_together and one index_together operation. In real-world cases, there could be multiple constraints in a single migration, and the issue doesn't explain how to handle these.",
        "false_negative":1,
        "false_negative_notes":"- The tests check that redundant AlterUniqueTogether and AlterIndexTogether operations are correctly reduced and verify the number, order, and attributes of the final operations.\n- However, if a solution uses extra steps to handle complex dependencies, it might create more operations than the tests expect, causing them to fail. For instance, an engineer might use a multi-step solution to manage dependencies properly, but the tests would fail because they expect fewer operations.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":26,
        "false_negative_decided_by":26,
        "other_major_issues_decided_by":39,
        "difficulty_decided_by":"[26, 32]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"django__django-11138",
        "underspecified":0,
        "underspecified_notes":"The issue raised a clear bug: The timezone set for the project in the settings.py file is not being honoured in SQL select queries,  for comparisons.",
        "false_negative":0,
        "false_negative_notes":"The tests check that when a timezone other that the default is set, that it is being reflected in the SQL select queries when dates are being compared. This is exactly what the issue was about.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":63,
        "false_negative_decided_by":63,
        "other_major_issues_decided_by":63,
        "difficulty_decided_by":"[40, 64]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-22719",
        "underspecified":1,
        "underspecified_notes":"The issue description description outlines an unnecessary `MatplotlibDeprecationWarning` triggered when using axes methods on empty data structures for axes with string unit converters.\nThe issue description proposes two alternative solutions: one, to continue producing artists with no data, or two, to more accurately describe what the problem is and how to avoid it.\nThere are some blanks to fill in order to define the appropriate solution of the two, i.e., the issue description includes a statement  \"...maybe whatever is changing behind the scenes failed to anticipate the \"empty data\" edge case?\"",
        "false_negative":0,
        "false_negative_notes":"The added tests verify that no deprecation warnings are emitted when empty data is plotted on axes with category units, addressing the problem raised in the issue description.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":57,
        "false_negative_decided_by":57,
        "other_major_issues_decided_by":57,
        "difficulty_decided_by":"[57, 1, 55]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":27,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.25,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sympy__sympy-19637",
        "underspecified":0,
        "underspecified_notes":"It is clear that kernS is throwing exception for (2*x)\/(x-1)\nIt provides example input for which the error is occuring which can make it easy to reproduce the issue.",
        "false_negative":0,
        "false_negative_notes":"The test case is exactly for kernS(\"(2*x)\/(x-1)\") for which the issue was occuring in issue description.\nIt will cover all possible solution.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":23,
        "false_negative_decided_by":23,
        "other_major_issues_decided_by":23,
        "difficulty_decided_by":"[23, 39, 54]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":23,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.36,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-15315",
        "underspecified":1,
        "underspecified_notes":"The issue is about the `Field.__hash__()` method in Django's model field classes. The current behavior of `Field.__hash__()` causes the hash value of a field to change when the field is assigned to a model class. This is problematic because it breaks the use of fields as keys in dictionaries. The code example provided demonstrates this problem resulting in an `AssertionError` due to the hash value change. The issue was introduced in a previous commit (#31750), which altered the hash behavior of fields. However, there are some missing blanks. The issue suggests reverting the `__hash__` change from #31750 but doesn't specify exactly what that change is. The engineer would need to look up the details of #31750 to understand precisely what needs to be reverted. So a score of 1 is appropriate.",
        "false_negative":1,
        "false_negative_notes":"Some unusual solutions might be missed such as if a developer decided to address the immutability of the hash value by modifying the way Field objects are handled or instantiated, the current test might not catch this. For instance, if the solution involved creating a wrapper around Field that ensures immutability by managing hash values internally, the current test checking the hash directly on the Field object might not validate this solution.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":6,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":6,
        "difficulty_decided_by":"[6, 37]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":23,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.36,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-15277",
        "underspecified":0,
        "underspecified_notes":"The issue description is extensive but clear - CharField internally gets granted a MaxLengthValidator which cannot work and must be demonstrably extraneous (i.e. validators aren't used the output_field, at least for Value). The exact solution is specified as well, including the exact code needed to fix the problem. So it should be very clear what a successful solution should look like.",
        "false_negative":1,
        "false_negative_notes":"The test test_output_field_does_not_create_broken_validators ensures that validators are correctly instantiated without causing exceptions, which addresses the concern about MaxLengthValidator in the CharField. \nThis test effectively covers the main concern of the issue—ensuring that validators, particularly MaxLengthValidator, do not cause problems when self.max_length is None. \nThe test does not strictly test for performance improvements but does validate that no exceptions occur when Value is used. \nHowever, the tests might be missed some edge cases like, handling various data types with the Value class and ensuring no broken validators are created. However, it does not explicitly test the handling of None values for max_length, nor does it cover non-CharField types or performance impacts beyond the noted improvement.",
        "other_major_issues":0,
        "other_notes":"No other issues with the task",
        "difficulty":"<15 min fix",
        "underspecified_decided_by":53,
        "false_negative_decided_by":80,
        "other_major_issues_decided_by":53,
        "difficulty_decided_by":"[53, 63]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":27,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.25,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-11239",
        "underspecified":0,
        "underspecified_notes":"The `dbshell` command in Django lacks support for PostgreSQL client certificates and keys necessary for mutual TLS connections. Although Django's database configuration supports these SSL parameters, `dbshell` does not utilize them. Adding these SSL parameters to the `dbshell` command will enable secure mutual TLS database access.\n\nThe issue is well-defined, providing sufficient information for an experienced developer to find a solution.",
        "false_negative":1,
        "false_negative_notes":"These tests verify that the `runshell_db` method correctly sets the SSL parameters. This directly targets the issue.\n\nHowever, these tests would fail if the variables were named differently. That would be quite unusual though considering that the issue description provides the variable names that are used in the configuration already.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":14,
        "false_negative_decided_by":35,
        "other_major_issues_decided_by":14,
        "difficulty_decided_by":"[14, 35, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20241016_composio_swekit",
            "20241007_nfactorial"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-11095",
        "underspecified":1,
        "underspecified_notes":"The problem statement requests for `ModelAdmin.get_inlines()` hook to be added to allow setting inlines based on the request or model instance. It provides information about the current workaround that is used to achieve the same result. This information seems too brief and leaves room for questions such as how the inlines should be set or if any priority ordering is required.",
        "false_negative":1,
        "false_negative_notes":"The tests cover the majority of correct solutions for the issue by verifying that the new get_inlines() hook allows dynamic determination of inlines based on the request or model instance. The test test_get_inline_instances_override_get_inlines() checks whether overriding get_inlines() in a ModelAdmin class works as intended by dynamically returning different sets of inlines based on an attribute of the request object. However, it may not account for some unusual solutions such as using decorators or middleware to modify inlines before processing, or employing Django signals to adjust inlines dynamically based on request type, creating a custom inline manager, leveraging context processors to influence inline selection, using inheritance and mixin patterns for flexible customization, or dynamically registering\/unregistering inlines at runtime.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":11,
        "false_negative_decided_by":80,
        "other_major_issues_decided_by":11,
        "difficulty_decided_by":"[11]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":23,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.36,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-12682",
        "underspecified":1,
        "underspecified_notes":"Rating the issue as 1 is appropriate because the issue clearly identifies the problem—`SparseCoder` doesn't expose `max_iter` for `Lasso`, potentially causing warnings about convergence. It suggests the need for extending the interface to allow more configurability. However, the issue stops short of providing specific implementation details or guidance on integrating this solution, leaving some ambiguity about the exact changes needed in the codebase. This necessitates some interpretation and decision-making by the developer on how to best implement the proposed solution, fitting it seamlessly into the existing framework without explicit directions on methods or classes to modify.",
        "false_negative":1,
        "false_negative_notes":"The test case in the Test Patch verifies the SparseCoder() class. The new test case looks good, but since the new variable `transform_algorithm` is not defined in the description, other solutions using a different variable name will fail in this test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":13,
        "false_negative_decided_by":39,
        "other_major_issues_decided_by":13,
        "difficulty_decided_by":"[13, 18]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sphinx-doc__sphinx-7462",
        "underspecified":1,
        "underspecified_notes":"The issue in issue description states following notation for empty tuple from another repository. And states the expected behaviour such that docs are built and there is `foo` with valid type annotations. Rating it 1 because it redirects to another repository to learn more about the issue.",
        "false_negative":1,
        "false_negative_notes":"The test for Tuple[()]  in test_parse_annotation ensure that the annotation is correctly parsed and represented. It verifies that the parenthesis are correctly included in the output. The test case for () intest_unparse confirms that empty tuples are handled and output as \"()\". This validates the string representation of an empty tuple. It could have included tests for scenarios like nested tuple, tuples with different types of elements, etc. to ensure changes do not affect other tuple representation.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":2,
        "false_negative_decided_by":2,
        "other_major_issues_decided_by":13,
        "difficulty_decided_by":"[13, 2]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"matplotlib__matplotlib-26113",
        "underspecified":1,
        "underspecified_notes":"Issue states that there is inconsistency in the behavior of the mincnt parameter in the hexbin function of Matplotlib, depending on whether the C parameter is supplied.\n- When the C parameter is not supplied mincnt=1 works as expected: Only grid points with at least one data point are shown.\n- When the C parameter is supplied with mincnt=1, the behavior is inconsistent and seems to require at least two data points to show the grid points.\nIssue provides a code snippet to show actual outcomes, this helps in reproducing the issue.\nIssue provides expected outcome that with mincnt=1 grid points should be plotted regardless of whether C is supplied. \nIssue should provide more details on why `reduce_C_function` has to yield a sensible output for an empty array.\nIssue provides desired solution by stating that behavior of mincnt should be unified regardless of the presence of the C parameter. The condition should be adjusted to consider grid points with at least mincnt data points and not more than mincnt.\n\nThough the above points of issue description some blanks should be filled like explaining more about the parameters `C` and `mincnt` &  `reduce_C_function` yielding an empty array.\nBut through the statement of desired solution there is a sensible interpretation of what is required for a successful solution. ",
        "false_negative":0,
        "false_negative_notes":"Test case is designed to verify the consistent behavior of the mincnt parameter in the hexbin function of Matplotlib when the C parameter is supplied or not. \nTest `test_hexbin_mincnt_behavior_upon_C_parameter` test below situations:\n1. Creates a hexbin plot without the C parameter but with mincnt=1.\n2. Creates a hexbin plot with the C parameter specified, using reduce_C_function=lambda v: sum(v) to sum the values, and mincnt=1.\nAbove test case would cover all solutions as it adheres to the problem described in the issue statement.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":51,
        "false_negative_decided_by":51,
        "other_major_issues_decided_by":51,
        "difficulty_decided_by":"[12, 52]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":21,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240820_epam-ai-run-gpt-4o",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.42,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-9320",
        "underspecified":0,
        "underspecified_notes":"When running `sphinx-quickstart` in a directory that already contains a `conf.py` file, a prompt is displayed to the user to enter a new root path name or press Enter to exit. However, when the user presses Enter, the tool returns an error message asking for a valid path name instead of exiting as expected. It prevents the user from exiting. The description is well specified and its expected that After pressing Enter, sphinx-quickstart should exit so its rated 0. ",
        "false_negative":0,
        "false_negative_notes":"The test checks whether the prompt exits or not when having a config file in the same directory so it should cover all possible solutions, its rated 0.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":30,
        "false_negative_decided_by":30,
        "other_major_issues_decided_by":30,
        "difficulty_decided_by":"[30, 7, 15]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":21,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.42,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-11490",
        "underspecified":0,
        "underspecified_notes":"- The issue description points out the the composed query such as union operation, could not change the list of columns when values()\/values_list() is evaluated multiple times.\n- The results in the query is returning the same set of columns initially defined, rather than updating to the new set of columns specified in subsequent calls, as shown in the example where both `values_list('name', 'order')` and `values_list('order')` incorrectly return the same result.\n- The issue description is clear with a clear expectation i.e., when values() or values_list() is called on a composed query, such as one using union(), it should return the columns specified in the most recent call.\n- There are no gaps or ambiguity in the issue description.",
        "false_negative":0,
        "false_negative_notes":"The test directly targets the case described in the issue description hence any vaild solution targeting the issue description should be able to pass the test.\nIt does not depend on any external details not specified in the issue description.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":8,
        "false_negative_decided_by":8,
        "other_major_issues_decided_by":8,
        "difficulty_decided_by":"[8, 19, 54]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-15629",
        "underspecified":1,
        "underspecified_notes":"The problem statement claims using `db_collation` with a `pk` that also has referenced `fks` in other models causes foreign key constraint errors in MySQL. It provides sample code to reproduce the issue and the output that is returned for a correct and incorrect sample codes. It provides information on what causes the issue. However, a preferred solution is not provided. Even though this can be deduced from the information provided there is still room for multiple potential solutions.",
        "false_negative":1,
        "false_negative_notes":"The solution introduced checks whether the `old_collation` is not equal to `new_collation` and the logic to resolve this. The tests align with the sample codes that raised the issue and the other that returned the expected output. This means the test will potentially pass for reasonable tests that return the expected behaviour. However since there may be multiple potential solutions the test may fails for solutions that may ignore the error and fail to fix the `ADD CONSTRAINT` issue.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":11,
        "false_negative_decided_by":11,
        "other_major_issues_decided_by":11,
        "difficulty_decided_by":"[11, 3, 23]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"django__django-11433",
        "underspecified":1,
        "underspecified_notes":"The issue description explains that when submitting a form, if 'some_field' isn't in the data payload and 'some_field' has a default value on the model, it cannot be overwritten with 'self.cleaned_data'. There are some blanks to fill in this issue as the issue description could have however added more context by suggesting the likely methods that potentially caused this issue. Moreover, the issue description does not explicitly state what the potential root cause of the problem is nonetheless a sensible interpretation can be derived from the issue description.",
        "false_negative":0,
        "false_negative_notes":"The test patch solution checks that if a model field is set to a non-empty value, the form's clean method correctly assigns this value to the field in the cleaned data. Moreover, when the model field is empty and there is a default value on the field, it ensures that the form uses the default value for the model field. The test patch should pass reasonable solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":5,
        "false_negative_decided_by":5,
        "other_major_issues_decided_by":5,
        "difficulty_decided_by":"[3, 17]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-16631",
        "underspecified":1,
        "underspecified_notes":"The issue description clearly states the problem, provides context, and mentions the relevant settings (SECRET_KEY_FALLBACKS) and functions (salted_hmac, AbstractBaseUser.get_session_auth_hash) involved. \nHowever, it does not provide explicit details on what the expected behavior should be or how the SECRET_KEY_FALLBACKS should be used in the session authentication process.",
        "false_negative":1,
        "false_negative_notes":"The tests cover the following scenarios:\nTest that the session is not invalidated when the SECRET_KEY is rotated and the old key is added to SECRET_KEY_FALLBACKS (test_get_user_fallback_secret).\nTest that the session is updated with the new secret key when the old key is removed from SECRET_KEY_FALLBACKS (test_get_user_fallback_secret).\nThe tests seem to cover the main scenarios, but they might not cover all possible edge cases or unusual solutions. For example, they do not test what happens when there are multiple fallback secrets or when the fallback secrets are not in the correct order.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":40,
        "false_negative_decided_by":40,
        "other_major_issues_decided_by":40,
        "difficulty_decided_by":"[40, 80]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-13124",
        "underspecified":1,
        "underspecified_notes":"The issue description is clear in that it points to a problem in the `sklearn.model_selection.StratifiedKFold` where, instead of shuffling samples within each stratum, it only shuffles the order of the batches. According to the documentation, this should not be the case, which states that each data stratification should be shuffled before splitting it into batches. However, the issue description has not clearly explained how the shuffle parameter and random state interact to produce reproducible splits or different splits, depending on the use case, which leaves some blanks to fill.  ",
        "false_negative":1,
        "false_negative_notes":"The tests in `test_split.py` check that `StratifiedKFold` with `shuffle=True` and different `random_state` values results in different test splits; however, since the tests do not explicitly check if samples within each stratum are shuffled, as described in the issue some solutions that tackle this might be missed.  ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":57,
        "false_negative_decided_by":57,
        "other_major_issues_decided_by":3,
        "difficulty_decided_by":"[11, 57]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":9,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241016_composio_swekit",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.75,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-15851",
        "underspecified":0,
        "underspecified_notes":"The provided issue is well-specified and clear what is required for a successful solution, with a good demonstration of the problem with an example and a suggestion of a possible solution. So, for this reason, I will give it a rating of 0.",
        "false_negative":0,
        "false_negative_notes":"The added test `test_parameters` ensures that when constructing the command-line arguments for psql, additional parameters are placed before the database name, addressing all the possible solutions to the issue where parameters were ignored if placed after the database name. So, for this reason, I will give it a rating of 0.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":10,
        "false_negative_decided_by":10,
        "other_major_issues_decided_by":10,
        "difficulty_decided_by":"[10, 60]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":23,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.36,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-14787",
        "underspecified":0,
        "underspecified_notes":"The issue is that `method_decorator` applied to a class method using a logging decorator results in an `AttributeError` because `functools.partial` objects lack attributes like `__name__`. The solution is to ensure the decorator preserves these original function attributes.\n\nThe issue is well-defined: we have identified the error, its potential solution, and we have access to the GitHub repository. This should be sufficient for an experienced developer to resolve the problem.",
        "false_negative":0,
        "false_negative_notes":"The test is comprehensive as it checks that the `method_decorator` preserves the `__name__` and `__module__` attributes of the decorated method. This ensures that the `wraps` decorator has been correctly applied to the `partial` object.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":14,
        "false_negative_decided_by":14,
        "other_major_issues_decided_by":14,
        "difficulty_decided_by":"[14, 44, 43]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":14,
        "solved_by":[
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240924_solver",
            "20240820_honeycomb",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.61,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-15382",
        "underspecified":1,
        "underspecified_notes":"- The issue description states that the problem occurs when filtering a Django queryset with a `models.Exists` subquery that is empty. This results in an empty queryset, and the `WHERE` block is missing entirely from the generated SQL query.\n- It provides sample code to illustrate the issue.\n- The expected behavior is that the `WHERE` block should be present even if the subquery is empty.\n- It mentions that the issue seems very similar to a previously reported issue with ID 33018.\n- The details of the previously reported issue are not provided.\n- Therefore, while there is room for discussion, it is reasonably clear what needs to be done.",
        "false_negative":0,
        "false_negative_notes":"The new test added verifies that a negated `Exists` subquery with an empty queryset does not remove the `WHERE` block, ensuring correct queryset behavior.\n\nThis test is sufficient to ensure all successful solutions work by checking the query returns expected results.\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":3,
        "false_negative_decided_by":14,
        "other_major_issues_decided_by":14,
        "difficulty_decided_by":"[24, 3]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":7,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240920_solver",
            "20241022_tools_claude-3-5-haiku",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.81,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-20488",
        "underspecified":1,
        "underspecified_notes":"The issue description says `test_huge_range_log` is failing in CI pipeline with a ValueError.\nThe test_huge_range_log in lib\/matplotlib\/tests\/test_image.py is failing in CI with a ValueError related to vmin and vmax in LogNorm during image processing. \nIt points that the test fails with ValueError: Invalid vmin or vmax and from the error traceback, we can infer that the issue is in lib\/matplotlib\/image.py file and the issue is probably at line 542.\nThe slight ambiguity is due to the cause of this bug. There is an assumption that this is due to some recent change in `numpy`.",
        "false_negative":0,
        "false_negative_notes":"The main source of error is allowing `0` to be included for `vmin` used in normalization, which is fixed in gold patch. `test_huge_range_log` tests for the change implemented in the gold patch using two minimum values `[-1, 1]` for image data. The test would cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":8,
        "false_negative_decided_by":21,
        "other_major_issues_decided_by":21,
        "difficulty_decided_by":"[21, 8, 78]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":3,
        "solved_by":[
            "20241001_nfactorial",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20240617_factory_code_droid"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.92,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-14089",
        "underspecified":0,
        "underspecified_notes":"The issue is well specified and the successful solution is clear.\nThe issue is that OrderedSet isn't reversible \nEven the solution to follow is provided.\n",
        "false_negative":0,
        "false_negative_notes":"The solution is directly related to the issue raised in the description, and any  solutions that goes along with the solution proposed in the description will surely pass.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":18,
        "false_negative_decided_by":18,
        "other_major_issues_decided_by":18,
        "difficulty_decided_by":"[18, 30]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":28,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.22,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-7985",
        "underspecified":0,
        "underspecified_notes":"The ticket is clear. It seems that linkcheck fails when provided an internal link which can be fixed by checking local (internal) links too. The proposal is clear and straightforward. ",
        "false_negative":1,
        "false_negative_notes":"The tests effectively check for the presence of both external and local link checks, including valid and invalid cases. However, these tests might not capture all possible implementations of local link checking. For example, an unusual solution might implement local link checking using a different method that doesn't produce the exact same output format. Such a solution could correctly identify broken local links but fail these tests due to differences in output formatting. The tests are thorough for typical implementations but may not account for all possible correct but unconventional approaches to solving the issue.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":7,
        "false_negative_decided_by":45,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[20, 45]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-11087",
        "underspecified":1,
        "underspecified_notes":"The problem statement claims that when upgrading from Django 1.11 installation with Python 2.7 to Python 3.6, an unexpected `UnicodeDecodeError` is received during a `.delete()` run by the daily data purging management command. It provides helpful information about the error that was returned, the expected behaviour. It also contains the SQL that raises the error and pin points the source of the problem. However, no clear solution was provided although this can be inferred from the problem statement.",
        "false_negative":1,
        "false_negative_notes":"The solution aligns with the problem statement, it adjust the delete logic to address the issue. The tests align with the issue as hey test whether there will be a failure during a delete. The tests align with the problem statement meaning it will pass of a majority of the solution. However, it may fails for some unusual solutions that may not proceed with the delete queries.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":11,
        "false_negative_decided_by":11,
        "other_major_issues_decided_by":11,
        "difficulty_decided_by":"[11, 34]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-11880",
        "underspecified":0,
        "underspecified_notes":"The issue clearly describes how the `__deepcopy__` method is implemented for form fields in the Django project. Specifically, the method performs a shallow copy of the form field object, including its `error_messages` dictionary. As a result, all instances of the same form field share the same `error_messages` dictionary. This means that if the error messages are modified for one instance of a form, those changes are reflected across all instances of that form field, which can lead to incorrect error messages being displayed.\nIt's pretty obvious what should be done to fix the issue. A senior developer can easily locate the buggy place in the code.",
        "false_negative":0,
        "false_negative_notes":"The test `test_field_deep_copy_error_messages` verifies the behavior of the `__deepcopy__` method for a custom form field in Django, specifically ensuring that the `error_messages` dictionary is correctly deep-copied. It additionally checks the deep-copied field must be of the same custom class (CustomCharField) as the original. This is an additional check and wasn't mentioned in the issue description. However, it isn't irrelevant to the current issue and ensures something extra. I cannot think of any other solution that might fail the test. So it perfectly covers all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":44,
        "false_negative_decided_by":44,
        "other_major_issues_decided_by":44,
        "difficulty_decided_by":"[44, 14, 43]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":28,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.22,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sympy__sympy-20438",
        "underspecified":1,
        "underspecified_notes":"The absence of output for `b.is_subset(c)` suggests that `is_subset` does not function correctly for `ProductSet.is_subset(FiniteSet)`. Since `FiniteSet.is_subset(ProductSet)` works as expected, it is reasonable to expect that the reverse should also work. And another issue was an error encountered during the simplification of an equality comparison between `ProductSet` and `FiniteSet` using `Eq(b, c).simplify()`, which raised an `AttributeError`.  It does not explicitly mentioned the solution for the issue but there is sensible interpretation that it should raise an exception. Therefore it should be rated as 1.",
        "false_negative":0,
        "false_negative_notes":"The test patch thoroughly verifies the behavior of the `is_subset` method and the equality comparison for `ProductSet` and `FiniteSet`, ensuring that the identified issue is resolved and that the correct results are produced for various cases.  The required issue is clear, and the test patch covers all solutions for it. Therefore, it should be rated as 0.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":12,
        "false_negative_decided_by":12,
        "other_major_issues_decided_by":12,
        "difficulty_decided_by":"[55, 20]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-12858",
        "underspecified":1,
        "underspecified_notes":"- The issue description identifies the error (models.E015) and the specific lookup causing the issue (supply__product__parent__isnull) and provides context with examples.\n- It indicates that the issue may be related to changes introduced in a specific commit or pull request (#29408).\n- However, the issue lacks information on why it fails for the given lookup.The issue provides enough information to interpret what needs to be fixed, but additional investigation in the codebase is necessary to determine the correct solution.",
        "false_negative":0,
        "false_negative_notes":"Newly added test function `test_ordering_pointing_to_lookup_not_transform` first creates a model `Model`. The model contains a CharField `test` and a `Meta` class. The provided test case ensure that using a lookup in the `ordering` meta option of a Django model does not raise the `models.E015` error. Specifically, it tests whether using `test__isnull` in the `ordering` option is considered valid. A reasonable solution that fixes the issue of lookups in the ordering option should pass this test. Hence, the tests perfectly cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":26,
        "false_negative_decided_by":19,
        "other_major_issues_decided_by":19,
        "difficulty_decided_by":"[24, 26]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":10,
        "solved_by":[
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.72,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-9230",
        "underspecified":0,
        "underspecified_notes":"The issue text describes a parameter of type 'dict(str, str)' that is rendered incorrectly and includes an example of the expected behavior.",
        "false_negative":1,
        "false_negative_notes":"The testcases added to cover the cased for the \"opc_meta\" defined under docstring with the type \"dict(str,str)\". The testcases added check for various \"param\" type annotation and their rendering in the generated documentation. However, the test are heavily focused on specific types and format (Dict[str, str]). While they cover the reported issue, they might not fully generalize to all unusual parameter type annotations such as more complex nested types or custom type hints those solutions might be missed. Therefore the correct choice should be option 1.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":52,
        "false_negative_decided_by":89,
        "other_major_issues_decided_by":52,
        "difficulty_decided_by":"[52, 89, 12]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"sphinx-doc__sphinx-8035",
        "underspecified":0,
        "underspecified_notes":"The issue reports private members for autodoc do not allow the specification of documenting either 1 or 2. It expects ':private-members' to take an argument similar to 'members' attribute.",
        "false_negative":1,
        "false_negative_notes":"The issue description asks for the ability to selectively document private members, similar to how other members are specified, so these tests are verifying it correctly. However, the test's reliance on a very specific output format (exact strings and arrangement of the documentation) could mean that some implementations that fulfill the functional requirement but differ slightly in output formatting might not pass the test. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":52,
        "false_negative_decided_by":13,
        "other_major_issues_decided_by":52,
        "difficulty_decided_by":"[52, 13]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":5,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20241028_solver",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.86,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-14855",
        "underspecified":0,
        "underspecified_notes":"The issue is that in a custom Admin Site, the URL for ForeignKey fields in `readonly_fields` incorrectly points to `\/admin\/...` instead of `\/custom-admin\/...`. This is most likely due to missing the `current_app` parameter in `get_admin_url`. \n\nThe suggested fix involves adding `current_app=self.model_admin.admin_site.name` to correctly generate the URL.",
        "false_negative":0,
        "false_negative_notes":"The tests ensure that both the default admin and custom admin urls are correctly generated. \n\nThey directly target the issue.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":35,
        "false_negative_decided_by":35,
        "other_major_issues_decided_by":35,
        "difficulty_decided_by":"[35, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":29,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.19,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sympy__sympy-16792",
        "underspecified":0,
        "underspecified_notes":"The issue description is clear. It explains that when using the Cython backend for autowrap, the code generation fails if the function being wrapped has array arguments that do not appear in the final expression. It provides a minimal counterexample to illustrate both the expected behavior and the actual error. Since it includes all necessary details to understand and reproduce the issue, it should be rated as 0.",
        "false_negative":1,
        "false_negative_notes":"The gold patch fixes the issue mentioned in the description by ensuring that the codegen processes now handle the array arguments even if they do not appear in the expression, and the generated C function should have the correct signature. The fix also covers the `IndexedBase` instances which was not mentioned in the issue description.\nThe test cases successfully pass all the reasonable solutions by verifying that `x` appears correctly as `double *` in the signature function. However, some unusual solutions can fail these test cases, such as \"Test with Multiple Array Arguments\" and \"Test with Scalar and Array Arguments\".",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":12,
        "false_negative_decided_by":49,
        "other_major_issues_decided_by":12,
        "difficulty_decided_by":"[12, 13]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"sympy__sympy-21930",
        "underspecified":0,
        "underspecified_notes":" The problem occurs within the \"secondquant\" module of the SymPy library when used in a Jupyter Notebook. The specific problem is incorrect interpretation of double superscripts containing the \"dagger\" command. The code snippet provided clearly demonstrates how to reproduce the issue and the expected output format is also given. The required solution is clearly stated which mentions to modify the LaTeX rendering to correctly interpret and display double superscripts by using curly brackets. This provides sufficient information to understand and implement the solution. So a score of 0 is appropriate.",
        "false_negative":0,
        "false_negative_notes":"The tests check the LaTeX output for various operators (Bd, Fd) to ensure that the curly bracket changes render correctly. This directly addresses the issue described. The test cases cover different scenarios, including single operators (test_create, test_create_f), commutators (test_commutation) and more complex nested structures (test_NO, test_Tensors). A dedicated test case (test_issue_19661) directly verifies the LaTeX rendering for the specific problem described in the issue ensuring that the fix works as intended . Based on these tests, the tests are well-scoped and validate all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":6,
        "false_negative_decided_by":6,
        "other_major_issues_decided_by":6,
        "difficulty_decided_by":"[6, 18]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-15280",
        "underspecified":1,
        "underspecified_notes":"The issue description highlights a potential issue in number of queries that are generated. It suggests that the inner `User` queryset inherited the deferred fields from the outer `User` queryset causing an additional query when trying to access the `kind` field. It suggests that it could be a potential bug where the instances inheriting are inheriting the set of fields they assume have been deferred from the outer User queryset resulting in unnecessary database queries. There is a clear idea of what the problem is however there there is some ambiguity as to what direction the solution should take. Moreover, the issue descriptions seeks validation of whether the behaviour is actually a bug as it states \"confirm it's actually a bug\". Thus there are some blanks to fill in about the issue.",
        "false_negative":0,
        "false_negative_notes":"- The new test function `test_nested_prefetch_is_not_overwritten_by_related_object` tests the proposed case from the issue description to ensure that nested `prefetch_related` works properly, preventing extra queries from running later.\n- The newly added test function does not depend on the specific solution implemented.\n- Therefore, the test function should cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":5,
        "false_negative_decided_by":3,
        "other_major_issues_decided_by":3,
        "difficulty_decided_by":"[3, 5, 14]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-11532",
        "underspecified":0,
        "underspecified_notes":"The issue is related with email messages in Django crash when the computer hostname contains non-ASCII characters and the email encoding is set to a non-unicode format like `iso-8859-1`. Author also provides a test case to reproduce the issue and proposes a solution by converting the domain name to punycode before using it in email headers to prevent encoding errors. Hence, it can be said that the issue is very clear and can be labeled as 0.",
        "false_negative":1,
        "false_negative_notes":"The test mocked `socket.getfqdn` function. Although the solution wasn’t applied to that function, if an unusual solutions modifies the behaviour of that function then it might cause this test to fail.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":55,
        "false_negative_decided_by":56,
        "other_major_issues_decided_by":55,
        "difficulty_decided_by":"[55, 34, 56]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":9,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240820_honeycomb",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240617_factory_code_droid"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.75,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-14140",
        "underspecified":1,
        "underspecified_notes":"The issue description identifies an error with `Q` objects whereby boolean expressions cause a `TypeError`. In the example code snippet produced, it suggests that when a `Q` object has a single child, it returns a keyword argument whereas when it has multiple children it returns a positional argument. This causes a `TypeError` in situations where the object has a non-subscriptable child (e.g. `Exists`). The issue description suggests a patch that would make the deconstruction process match the format used for multiple children, treating all children as positional arguments regardless of their count (i.e. either single-child or multiple children). This avoids the inconsistency and prevents the TypeError. It goes on further to suggest a more backward compatible approach and makes the broad assumption that \"it's unlikely that anyone is relying on this undocumented behavior.\". It is unclear however if the backward compatible approach should be considered as the more appropriate solution.",
        "false_negative":0,
        "false_negative_notes":"The tests covers all possible solutions. It include various combinations of Q objects with boolean expressions and different scenarios, such as combining Q() with Exists and deconstructing nested Q objects. The tests ensure that the deconstruction of Q objects with different configurations is handled correctly. Moreover, it also consider backward compatibility by including cases that check the correct handling of older patterns and ensuring that the patched solution does not break existing functionality. Hence, choice 0 is preferred.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":5,
        "false_negative_decided_by":77,
        "other_major_issues_decided_by":77,
        "difficulty_decided_by":"[77, 81, 5]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":8,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240820_epam-ai-run-gpt-4o",
            "20241016_composio_swekit",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.78,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-14376",
        "underspecified":0,
        "underspecified_notes":"Update Django's MySQL backend configuration to replace deprecated \"db\" and \"passwd\" kwargs with \"database\" and \"password\".",
        "false_negative":0,
        "false_negative_notes":"The tests ensure that Django's MySQL backend prioritizes the new \"database\" and \"password\" kwargs over the deprecated \"db\" and \"passwd\" kwargs and correctly overrides settings with options.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":14,
        "false_negative_decided_by":14,
        "other_major_issues_decided_by":14,
        "difficulty_decided_by":"[14, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20240920_solver",
            "20241028_solver"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-12209",
        "underspecified":1,
        "underspecified_notes":"The ticket description is ok. One blank to fill is how `loaddata ` is behaving unexpectedly. But the solution starting from the ticket description is clear. The developer would need to check the common function between `loaddata` and `save` to fix.",
        "false_negative":0,
        "false_negative_notes":" The tests focus on models with UUID primary keys, particularly where the UUID field has a default value. This aligns with the issue description, which discusses the behavior of saving model instances with explicit primary key values and a default primary key field. The addition of the `UUIDDefaultData` model in the test patch specifically targets the scenario described in the issue, ensuring that the primary key with a default value behaves correctly when saved. The test patch includes scenarios for saving instances of `UUIDDefaultData`, which directly addresses the change in behavior described in the issue. By including this test, it ensures that the save operation does not result in two INSERTs, which is the core problem outlined in the issue.\n\n",
        "other_major_issues":0,
        "other_notes":"The issue description is fairly clear in outlining the problem: a change in behavior when saving a model instance with an explicit primary key value and a default value for the primary key field. A fix should not take more than 15 minutes.",
        "difficulty":"<15 min fix",
        "underspecified_decided_by":7,
        "false_negative_decided_by":43,
        "other_major_issues_decided_by":43,
        "difficulty_decided_by":"[43, 14, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":15,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.58,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-13410",
        "underspecified":0,
        "underspecified_notes":"The POSIX implementation in `django\/core\/files\/locks.py` incorrectly returns `False` for all lock attempts because it doesn't handle the `fcntl` module's behavior correctly. `fcntl` returns `None` on success and raises `OSError` on failure. The fix is to use a try-except block to return `True` on success and `False` on failure.\n\nThe issue is well-defined, providing both an explanation of the problem and a potential solution.",
        "false_negative":0,
        "false_negative_notes":"The tests verify that `locks.lock()` correctly acquires and `locks.unlock()` correctly releases exclusive and shared locks, returning appropriate boolean values. They also ensure non-blocking behavior (`LOCK_NB`) functions as expected.\n\n\nThe tests target the core functionality of the issue, ensuring that all successful solutions are covered.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":14,
        "false_negative_decided_by":14,
        "other_major_issues_decided_by":14,
        "difficulty_decided_by":"[14, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":28,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.22,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-13964",
        "underspecified":1,
        "underspecified_notes":"The issue description identifies a problem that arises when a related model instance is assigned to a parent model without an initial primary key value. This occurs when working with Django models that have a foreign key relationship where the primary key of the related model is a non-auto CharField. It suggests that this causes the parent model to be set to an empty string instead of the required `product_id`. Thus resulting in incorrect foreign key assignments. The issue description goes on further to state that when the \"unsaved instance is initialized with its primary key before assignment to the parent, it is persisted correctly\" suggesting a likely cause being the `product_id` field. Further information is needed as the issue description is not explicitly certain of the root cause.",
        "false_negative":0,
        "false_negative_notes":"The test case “test_save_fk_after_parent_with_non_numeric_pk_set_on_child” verifies that the changes to the  primary key are visible to the parent after initializing the child’s parent relationship with an empty instance. This case is very similar to the example provided in the issue description. It is a generalized test patch and any potential solution to the issue should pass this test case,",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":5,
        "false_negative_decided_by":88,
        "other_major_issues_decided_by":88,
        "difficulty_decided_by":"[5, 3]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":7,
        "solved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20241028_solver",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.81,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-10908",
        "underspecified":1,
        "underspecified_notes":"- The problem description states that the `CountVectorizer`'s `get_feature_names` function raises `NotFittedError` even though a `vocabulary` list is provided at the initialization of the vectorizer which is unexpected because a corpus should be transformed without prior training in this case.\n- The expected behaviour is that `NotFittedError` should not be raised in this case. \n- The problem and the expected behaviour are well-defined. However, the description does not mention about what is causing this issue or how to resolve it. For example, a suggestion for adding validation for the vocabulary list. This would have made the description more clear and helpful. Hence, a rating of 1 is selected. \n",
        "false_negative":1,
        "false_negative_notes":"The tests are designed to ensure the correct behavior of get_feature_names with both learned and fixed vocabularies. However, the addition of the fixed_vocabulary_ attribute test is not mentioned in the issue description. This means some unusual solutions that don't consider this attribute might be missed.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":22,
        "false_negative_decided_by":29,
        "other_major_issues_decided_by":22,
        "difficulty_decided_by":"[31, 29]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":6,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20241028_solver"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.83,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-12406",
        "underspecified":1,
        "underspecified_notes":"The issue is clear: When a foreign key property is blank-able, and the widget for choosing this property is a radio, then the default choice for the radio should never be a blank item  ('', '---------') because it may look to the user like it's a valid choice but it isn't. However, it is not clear what the default should then be, although most solutions may chose the first available instance of the referenced model as default.",
        "false_negative":1,
        "false_negative_notes":"`test_choices_radio_blank`, `test_blank_foreign_key_with_radio`, and `test_non_blank_foreign_key_with_radio` are added here to test the issue mentioned.\nWhile these tests do a test a perfect solution, there is no mention of any `foreign key` in the issue description, so it is possible to have solutions where choices without Foreign keys are only fixed or vice-versa. However, these would be \"unusual\" solutions, so these tests are rated as a 1, where they cover a majority of correct solutions.",
        "other_major_issues":0,
        "other_notes":"No issed missed.",
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":63,
        "false_negative_decided_by":27,
        "other_major_issues_decided_by":27,
        "difficulty_decided_by":"[27, 57]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-16595",
        "underspecified":0,
        "underspecified_notes":"- The issue description states that there is a problem with the Django migration optimizer when dealing with multiple `AlterField` operations on the same field.\n- It provides a sample migration file to demonstrate the lack of optimization, which consists of `AddField` and three `AlterField` operations on the same field. When the optimizer runs on this migration, only a single `AddField` is generated.\n- It mentions that if `AddField` is removed from the initial migration file and the optimizer is run, the three `AlterField` operations are not reduced to a single `AlterField` operation.\n- The issuer is unsure whether this behavior is expected or a bug.\n- If it is a bug, the issuer provides a basic solution.\n- However for an experienced engineer, it is clear that this is an issue and needs a fix, hence deserving rating of 0.",
        "false_negative":0,
        "false_negative_notes":"- Most of the changes involve renaming test functions.\n- The newly added test function `test_alter_alter_field` does exactly what the issue description is looking for as expected behavior, which is to validate that the consecutive migration operations are optimized in final migration being generated.\n- Also, this newly added test function does not depend on external factors like messages, error types, variables, or functions.\n- Therefore, it should cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":3,
        "false_negative_decided_by":3,
        "other_major_issues_decided_by":3,
        "difficulty_decided_by":"[3, 11]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":25,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.31,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sympy__sympy-22714",
        "underspecified":1,
        "underspecified_notes":"The problem is clearly stated: using with `evaluate(False)`: leads to an unexpected crash with `Point2D`. The error message `Imaginary coordinates are not permitted` is provided for better understanding. The working example wihtout `evaluate(False)` help in understanding the context. A reader has to make some assumptions about the expected behavior when  `with evaluate(False):` is used. Hence, choice 1 is preferred.",
        "false_negative":1,
        "false_negative_notes":"The test matches the issue description exactly and ensures that any correct fix for the problem with `Point2D` when using `with evaluate(False):` will pass. The test is simple, relevant, and does not depend on specific details of the gold patch. However, there are some unusual solution which directly fix the problem in (`Point2D`, `Point3D`) instead of fixing the base class `Point`. In that case, it will resolve the issue successfully but base class `Point` would remain buggy and will fail the test case. Hence, choice 1 is preferred.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":77,
        "false_negative_decided_by":77,
        "other_major_issues_decided_by":77,
        "difficulty_decided_by":"[77, 6]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":19,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.47,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-13551",
        "underspecified":0,
        "underspecified_notes":"The ticket is asking for a feature to invalidate the password reset tokens upon changing the email. For that, `_make_hash_value()` should add the value for email in its considered inputs. The user has provided also a reproducible example which made it easier to start fixing the problem.",
        "false_negative":0,
        "false_negative_notes":"The test patch is testing that changing the password changes the token generated for the user which is exactly what is requested in the ticket description. Any solution to the problem should pass these tests.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":7,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 43, 14]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20241028_solver",
            "20241016_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-9658",
        "underspecified":0,
        "underspecified_notes":"The issue description provides a clear and detailed explanation of the problem with documenting inherited classes when using mocked classes, including the specific Sphinx versions where the issue occurs. It includes steps to reproduce the issue, expected and actual results, and links to demo builds and screenshots. This makes it well-specified and clear what is required for a successful solution.",
        "false_negative":0,
        "false_negative_notes":"The tests are well-scoped and align perfectly with the issue description. They specifically test the problem described in the issue (documenting classes that inherit mocked classes) by verifying that the bases section reports the correct class name. The functions tested (restify and stringify) are directly related to the issue, and the test cases include scenarios that effectively validate the fix. Therefore, the tests should cover all reasonable solutions to the issue.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":29,
        "false_negative_decided_by":29,
        "other_major_issues_decided_by":29,
        "difficulty_decided_by":"[29, 20]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-19783",
        "underspecified":0,
        "underspecified_notes":"The issue description is clear and specific. It identifies the problem that multiplying a Dagger object by an IdentityOperator does not simplify correctly so I would rate this as 0. ",
        "false_negative":0,
        "false_negative_notes":"The tests directly address the issue described. They check whether multiplying a Dagger object by an IdentityOperator simplifies correctly, as specified in the issue so I would rate this as 0. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":60,
        "false_negative_decided_by":60,
        "other_major_issues_decided_by":60,
        "difficulty_decided_by":"[60, 23]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-13757",
        "underspecified":0,
        "underspecified_notes":"- The description mentions that multiplying an expression by a `Poly` does not evaluate when the expression is on the left side of the multiplication.\n- It provides some examples.\n- The issue and the expected output in the description are clear.",
        "false_negative":0,
        "false_negative_notes":"The test case in the Test Patch is proficient at verifying the requirements. It adds new assertions to check that the code works well with the input described. Additionally, it can be used to validate other solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":39,
        "false_negative_decided_by":39,
        "other_major_issues_decided_by":39,
        "difficulty_decided_by":"[39, 60]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":5,
        "solved_by":[
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20241028_solver",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.86,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"pytest-dev__pytest-5631",
        "underspecified":0,
        "underspecified_notes":"The issue description clearly identifies a bug in pytest's handling of arrays with the `@patch` decorator, suggesting a need to modify the boolean evaluation of `p.new` to prevent ValueError when `p.new` is an array.",
        "false_negative":0,
        "false_negative_notes":"The test precisely validates the implemented fix by ensuring that objects with complex comparison behaviors, like numpy-like objects, do not lead to errors when used as mock replacements in testing scenarios.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":4,
        "false_negative_decided_by":4,
        "other_major_issues_decided_by":4,
        "difficulty_decided_by":"[4, 20, 41]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":10,
        "solved_by":[
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240820_honeycomb",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.72,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-11206",
        "underspecified":0,
        "underspecified_notes":"- The issue describes a problem with the format function that it returns the number in exponential notation instead of formatting it to the specified number of decimal places when extremely small decimal numbers are provided.\n- The expected behavior is that the function should return a string with the number formatted to that many decimal places when decimal_pos is specified.\n- The expected solution in this case is clear: the format function needs to correctly format very small numbers to the specified number of decimal places.\n- This makes the issue well-specified.",
        "false_negative":0,
        "false_negative_notes":"- The test patch verifies the new behavior of handling very small decimal numbers and makes sure that the number is formatted correctly without exponential notation\n- Since the test case reflects the expected behavior, any alternative solution that correctly addresses the formatting of extremely small decimal numbers would pass this test\n- Therefore, the test patch does not introduce false negatives and perfectly covers the described issue",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":26,
        "false_negative_decided_by":26,
        "other_major_issues_decided_by":26,
        "difficulty_decided_by":"[5, 19]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241001_nfactorial",
            "20240820_epam-ai-run-gpt-4o"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-25973",
        "underspecified":1,
        "underspecified_notes":"The issue is clear; `Unable to pass splits to SequentialFeatureSelector`. A sample code is shared to reproduce the issue. The actual and expected outcomes are shared.\nHowever, there is a blank to fill as the user is not sure if this is a bug or the user is doing something wrong - `If somebody could confirm whether this is a bug, or I'm doing something wrong`. Nevertheless, there is a sensible interpretation of what is required for a successful solution. since the actual and expected outcomes are shared.",
        "false_negative":0,
        "false_negative_notes":"test_cv_generator_support ensures that when splits are passed to SequentialFeatureSelectorm, it runs without error.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":54,
        "false_negative_decided_by":54,
        "other_major_issues_decided_by":54,
        "difficulty_decided_by":"[54, 2]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":11,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20241028_solver",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.69,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-15368",
        "underspecified":1,
        "underspecified_notes":"- The issue description states that `bulk_update()` does not work with plain `F()` expressions.\n- It includes steps and sample code to reproduce the issue.\n- The expected behavior is for `bulk_update()` to support `F()` expressions.\n- It suggests two possible solutions: either broaden the type check of the `attr` object to include both Expression and F class, or check if the `attr` object has the `resolve_expression` attribute.",
        "false_negative":0,
        "false_negative_notes":"The added test checks if the `F` expressions within the `bulk_update` method are resolved correctly, as outlined in the issue description. This test does a straightforward validation by assigning an `F` expression to a model field, using `bulk_update` to apply the change, and then verifying that the database reflects the expected result (the value of one field is copied to another). The test setup and checks are aligned with the typical use case that the issue describes.\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":3,
        "false_negative_decided_by":43,
        "other_major_issues_decided_by":43,
        "difficulty_decided_by":"[43, 3]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":26,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.28,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sympy__sympy-17630",
        "underspecified":1,
        "underspecified_notes":"The problem described in the issue description is when multiplying a `BlockMatrix` containing `ZeroMatrix` blocks twice, the zeros in `b._blockmul(b)` are supposed to be `ZeroMatrix` instead of `Zero` which is causing an exception. \nThe issue is clearly specified with code examples and an exception traceback. The problem is located in the `_blockmul` method of the `blockmatrix.py` file. The solution should ensure `ZeroMatrix` objects remain as `ZeroMatrix` during block matrix multiplication. \nAlthough the issue description points out how the issue pops up with an example, there is no information on why the issue is happening.",
        "false_negative":0,
        "false_negative_notes":"The tests are well-scoped and focus on ensuring that ZeroMatrix is handled correctly during matrix operations. They check the critical behavior described in the issue and some additional checks, such as the addition of two ZeroMatrix and the addition with scalar.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":8,
        "false_negative_decided_by":8,
        "other_major_issues_decided_by":8,
        "difficulty_decided_by":"[8, 21, 4]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_0"
    },
    {
        "instance_id":"sympy__sympy-17318",
        "underspecified":0,
        "underspecified_notes":"The issue described pertains to the `sqrtdenest` function in the SymPy library, which is used to simplify expressions involving square roots. The problem arises when the function encounters an expression it cannot simplify (or \"denest\"), leading to an `IndexError`. As per the traceback provided, it seems the error occurs specifically in the `split_surds` and `_split_gcd` functions, resulting in a traceback error message with final message `IndexError: tuple index out of range`. Hence, the issue is clear and well-specified. ",
        "false_negative":0,
        "false_negative_notes":"Newly added test function `test_issue_12420` asserts three statements. It first asserts that `_sqrt_match(4 + I)` is empty, which is a simple testcase. Then, it verifies that output of the command `sqrtdenest((3 - sqrt(2)*sqrt(4 + 3*I) + 3*I)\/2)` is equal to I. This is same as the expression defined in the Section 1 issue description. Next, we evaluate for `3 - sqrt(2)*sqrt(4 + I) + 3*I`. It asserts that the output is the same because the original expression could not be simplified further. We are checking that none of the evaluations should return an `IndexError`. Hence, the test function checks all kinds of cases and cover all possible solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":19,
        "false_negative_decided_by":19,
        "other_major_issues_decided_by":19,
        "difficulty_decided_by":"[19, 52, 20]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-25232",
        "underspecified":0,
        "underspecified_notes":"The issue description provides a clear summary of the problem: the `IterativeImputer` in scikit-learn does not currently support a `fill_value` parameter for when the `initial_strategy` is set to `\"constant\"`. The user clearly outlines the expectation from the `SimpleImputer` functionality, where a `fill_value` can be specified, and expresses the desire for similar functionality in `IterativeImputer`. The proposed solution is straightforward and feasible: adding a `fill_value` parameter to `IterativeImputer`. The user also suggests that this `fill_value` should allow for `np.nan`, enhancing compatibility with certain estimators.",
        "false_negative":1,
        "false_negative_notes":"The test verifies that the IterativeImputer can correctly use a custom fill_value (100) for initial imputation of missing values. It directly targets the issue.\n\nAny unusual solution might name the parameter something other than fill_value. That would solve the issue but fail the test.",
        "other_major_issues":0,
        "other_notes":"The issue description is relatively clear and specific, making it easier for a developer to understand what changes are needed.",
        "difficulty":"<15 min fix",
        "underspecified_decided_by":43,
        "false_negative_decided_by":35,
        "other_major_issues_decided_by":43,
        "difficulty_decided_by":"[43, 7, 35]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":12,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240820_honeycomb",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240617_factory_code_droid"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.67,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1"
    },
    {
        "instance_id":"django__django-11848",
        "underspecified":1,
        "underspecified_notes":"The given issue description clearly explains the problem with the year format in Django's parse_http_date function, which interprets years 0-69 as 2000-2069 and 70-99 as 1970-1999. This logic won't work for years greater than 2069. While the description explains the problem, it lacks details on what is expected for a successful solution. Therefore, the preferred choice should be option 1.",
        "false_negative":0,
        "false_negative_notes":"The tests for the issue cover the functionality requested in the issue statement. For example (utcnow_1, 'Tuesday, 31-Dec-69 08:49:37 GMT', datetime(2069, 12, 31, 8, 49, 37)): The year '69' could be 1969 or 2069. Since utcnow_1 is set to 2019, '69' is interpreted as 2069 because 1969 is more than 50 years in the past. So all new valid solutions should be able to pass them",
        "other_major_issues":0,
        "other_notes":"No other issues with the task",
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":89,
        "false_negative_decided_by":53,
        "other_major_issues_decided_by":53,
        "difficulty_decided_by":"[53, 89, 55]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":7,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241028_agentless-1.5_gpt4o",
            "20240820_honeycomb",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.81,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-14672",
        "underspecified":0,
        "underspecified_notes":"The issue is clearly outlined in the description, which includes the error stack trace. Additionally, some background information is provided to help experienced engineers address and resolve the problem effectively.",
        "false_negative":0,
        "false_negative_notes":"The patch correctly validates the hashability of `through_fields` in M2M relationships with a through model. It checks both the direct and inherited relationships, ensuring consistency and correctness.\n\nThe test in `test_models.py` for field name clashes adds an extra layer of validation. While it is related to M2M fields, it focuses on field name clashes rather than hashability. This additional validation is useful but not directly related to the primary issue being addressed.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":47,
        "false_negative_decided_by":47,
        "other_major_issues_decided_by":47,
        "difficulty_decided_by":"[47, 39]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":21,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.42,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-8595",
        "underspecified":0,
        "underspecified_notes":"The given issue description is clear and states that even with an empty \"__all__\", the doc entries are still shown, indicating a bug with the Sphinx documentation. The description also mentions what is expected for a successful solution. Thus, the preferred choice should be option 0.",
        "false_negative":0,
        "false_negative_notes":"The issue description mentions that if there is an empty \"__all__\", then there should not be any doc rendering. The above test cases perfectly check the given issue using a \"empty_all.py\" file, which contains only empty functions with \"__all__ = []\", and verifies that it doesn't get rendered. Since the test cases check the expected behaviour perfectly, the preferred choice should be option 0.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":89,
        "false_negative_decided_by":89,
        "other_major_issues_decided_by":89,
        "difficulty_decided_by":"[89, 1, 61]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":21,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.42,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-11163",
        "underspecified":0,
        "underspecified_notes":"The issue description for the behavior of model_to_dict() when called with an empty list of fields is fairly well-specified, making it relatively clear what needs to be done. The explanation includes both the current behavior and what the expected behavior should be, and it even suggests the exact code change needed.",
        "false_negative":0,
        "false_negative_notes":"The tests introduced in the Test Patch seem well-designed to validate the specific changes made in the Gold Patch. They directly check the behavior of model_to_dict() with various configurations of the fields and exclude parameters, which are the core of the issue addressed. The tests ensure that specifying an empty fields list results in an empty dictionary, which aligns with the desired behavior described in the issue and\nvalidate the behavior when specific fields are included or excluded, ensuring that the function respects these parameters correctly after the patch.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":32,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":32,
        "difficulty_decided_by":"[32, 26, 18]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":27,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.25,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-14894",
        "underspecified":0,
        "underspecified_notes":"The issue is clear; `ZeroDivisionError in _sparse_fit for SVM with empty support_vectors_`. A sample code is shared to reproduce the problem. The actual and expected results are shared. The versions of the packages used are mentioned as well.\n",
        "false_negative":0,
        "false_negative_notes":"test_sparse_fit_support_vectors_empty used the exact X_train and y_train data used in the issue description to ensure that there is no ZeroDivisionError in _sparse_fit for SVM with empty support_vectors_.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":54,
        "false_negative_decided_by":54,
        "other_major_issues_decided_by":54,
        "difficulty_decided_by":"[54, 53]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":27,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.25,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-26194",
        "underspecified":1,
        "underspecified_notes":"The issue statement is relatively clear, mentioning that the a roc_curve could return a threshold bigger than one, especially in the case y_score is a probability estimate. The spot in the code where the issue stems from is also highlighted - line 1086 - thresholds = np.r_[thresholds[0] + 1, thresholds]. However there is a vague workaround suggested for the solution which introduces a degree of uncertainty and ambiguity, forcing the engineer to make assumptions.",
        "false_negative":1,
        "false_negative_notes":"The test patch covers the mechanism introduced in the Gold patch, to replace the highlighted issue - thresholds[0] + 1 - with np.inf. While this is an expected solution for the issue, there might be unusual ones that solve the problem in different manner and will fail the tests, hence the label 1",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":53,
        "false_negative_decided_by":53,
        "other_major_issues_decided_by":62,
        "difficulty_decided_by":"[62, 38, 53]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-13512",
        "underspecified":1,
        "underspecified_notes":"- The issue description clearly identifies the problem with Unicode characters in JsonField being displayed as ASCII escape sequences in Django admin and describes the specific problem with the default behavior of json.dumps and its impact on JsonField in Django admin.\n- However, it lacks information on how JsonField is currently rendered in Django admin but there is sensible intepretation of what is required for a successful solution.",
        "false_negative":0,
        "false_negative_notes":"The test validates that that Django correctly handles and serializes Unicode characters and emojis in JSON objects and fields.\nHence, it will work perfectly for the gold patch and alternate solutions.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":26,
        "false_negative_decided_by":24,
        "other_major_issues_decided_by":24,
        "difficulty_decided_by":"[24, 26, 14]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-14238",
        "underspecified":0,
        "underspecified_notes":"The ticket description is clear. The problem is that DEFAULT_AUTO_FIELD subclass check fails for subclasses of BigAutoField and SmallAutoField. The ticket has provided steps to reproduce and the error raised. It is very clear what is needed to  be done starting from the ticket.",
        "false_negative":0,
        "false_negative_notes":"The test patch is testing the DEFAULT_AUTO_FIELD subclass check with subclasses of BigAutoField. Any solution to the problem should pass the tests.\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":7,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 14]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":19,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.47,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"sympy__sympy-12419",
        "underspecified":0,
        "underspecified_notes":"The issue is clear; `Sum of the elements of an identity matrix is zero`. What is required of a successful solution is also clear; the `Total sum of the elements of an identity matrix is expected to be 'n' rather than 0`.",
        "false_negative":0,
        "false_negative_notes":"Lines 25 - 27 ensure that the total sum of elements in the identity matrix is not equal to 0 but is equal to 'n' (i.e., 3). Therefore, all possible solutions should pass this test because this is what's required for a successful solution.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":54,
        "false_negative_decided_by":54,
        "other_major_issues_decided_by":54,
        "difficulty_decided_by":"[54, 30, 23]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":3,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.92,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-26208",
        "underspecified":1,
        "underspecified_notes":"The issue is clear: there is a bug when using twin x-axis charts where the data limits of the first axis change to ±inf when plotting a stackplot on the second axis. The output shows the data limits of both axes and mentions that swapping the plot order prevents the `dataLims` from being replaced by infs. \nWhile the exact solution is not described, it can be interpreted that the data limits of the first axis should not be replaced by infs and should remain consistent regardless of using a stackplot. The issue is well-defined, but the required solution must be inferred, so this receives a score of 1.",
        "false_negative":0,
        "false_negative_notes":"The tests are well-designed to ensure the unit consistency for both 'twinx' an 'twiny' configurations, it effectively covers all the scenarios where the bug might exist as per the issue description. The tests do not introduce any specific behavior that can lead to failure of any solution.\n",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":50,
        "false_negative_decided_by":13,
        "other_major_issues_decided_by":13,
        "difficulty_decided_by":"[13, 50]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-9711",
        "underspecified":0,
        "underspecified_notes":"The `needs_extensions` check, which verifies minimum extension versions, only compares versions in a 'string-like' manner, but it should compare version numbers. Hence, the issue is well-specified.",
        "false_negative":0,
        "false_negative_notes":"Tests ensure that the `needs_extensions` check correctly verifies the required extension versions by comparing version numbers, directly addressing the issue. Any successful solution will pass the test.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":42,
        "false_negative_decided_by":42,
        "other_major_issues_decided_by":42,
        "difficulty_decided_by":"[42, 35, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":18,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit"
        ],
        "empiric_difficulty":0.5,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0"
    },
    {
        "instance_id":"django__django-11740",
        "underspecified":1,
        "underspecified_notes":"The issue description states that while changing a `UUIDField` to a `ForeignKey` in a Django model, the resulting migration does not create a dependency on the related model, leading to potential issues where the error \"ValueError: Related model 'testapp2.App2'\" cannot be resolved. Even demonstrates this with an example. The author also provides a link to a google group's post, even though the flow is clear and understandable without going through it. A bit of ambiguity is present because the author is not sure if it's a bug or it's something they are not doing correctly. Hence, there are some blanks to fill in, rating it 1.",
        "false_negative":0,
        "false_negative_notes":"The tests consider two models, one with an IntegerField and the other where it is changed to a foreign key. Then it asserts the number of migrations, operation types, and migration dependencies. This test shall pass all the possible solutions as the changes have to be made in an inner helper function which other solutions will also look for.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":19,
        "false_negative_decided_by":2,
        "other_major_issues_decided_by":2,
        "difficulty_decided_by":"[2, 19]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"matplotlib__matplotlib-25775",
        "underspecified":1,
        "underspecified_notes":"The issue description identifies that Text objects in a graphics library lack individual antialiasing controls, proposing new methods for customization. However, it omits specifics on modifying backend rendering code and managing compatibility with existing settings. This gap requires developers to deduce the technical integration steps themselves, making the project more complex and exploratory. So, it better to rate as 1.",
        "false_negative":0,
        "false_negative_notes":"The test patch is completely geared towards testing getting and setting text_antialised which is in accordance with the issue description.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":62,
        "false_negative_decided_by":72,
        "other_major_issues_decided_by":72,
        "difficulty_decided_by":"[67]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":7,
        "solved_by":[
            "20241028_agentless-1.5_gpt4o",
            "20241001_nfactorial",
            "20240820_honeycomb",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241007_nfactorial",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.81,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    },
    {
        "instance_id":"django__django-13809",
        "underspecified":0,
        "underspecified_notes":"The issue straightforwardly requests the addition of a new command line option (--skip-checks) to the runserver command. The rationale provided gives context on why this would be useful, aligning with Django's design philosophy of providing flexibility in development and production environments.",
        "false_negative":1,
        "false_negative_notes":"The tests directly address the functionality introduced by the Gold Patch. They mock necessary parts to isolate the feature being tested, ensuring that the command does or does not perform system checks based on the presence of the --skip-checks flag.\nThey check the output messages and the call status of mocked methods, which are straightforward ways to confirm that the patch behaves correctly. Since the tests verify both the presence and absence of the feature when toggled, they adequately cover the scenarios. However, any solution that does not follow the suggested flag name, would fail the test. ",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":32,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":32,
        "difficulty_decided_by":"[32, 18]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":21,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-haiku",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.42,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"django__django-15098",
        "underspecified":0,
        "underspecified_notes":"The issue description is well-defined, including detailed steps to reproduce the problem, the exact behavior observed, and the expected result. It provides examples with specific locales and references the relevant language tag standards. This clarity allows for a precise understanding of what needs to be fixed: support for language locales that include both script and region subtags in the i18n_patterns handling.",
        "false_negative":1,
        "false_negative_notes":"The tests are generally well-scoped, covering various locale formats, including those with script and region subtags. They validate the correct behavior of the get_language_from_path function and ensure that locales like 'en-latn-us' and 'en-Latn-US' are handled correctly. However, the tests are based on the specific changes introduced in the Gold Patch, which involves a regex pattern modification. Thus, the tests cover the majority of correct solutions, but they may not account for all edge cases like custom locale resolution logic, using external libraries for locale parsing, or normalizing locale prefixes. test_page_with_dash and test_no_redirect_on_404 are additional tests that check routing behavior and 404 responses, respectively, and are not specifically related to the regex pattern changeselated to the regex changes.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":80,
        "false_negative_decided_by":80,
        "other_major_issues_decided_by":80,
        "difficulty_decided_by":"[32]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1"
    },
    {
        "instance_id":"pytest-dev__pytest-7236",
        "underspecified":0,
        "underspecified_notes":"The issue description is very clear and self-contained with clear expectation of the desired solution.",
        "false_negative":0,
        "false_negative_notes":"The `test_pdb_teardown_skipped` function directly checks if the `unittest.TestCase` is able to successfully skip the tests when running with `--pdb`, which is the requested feature.",
        "other_major_issues":0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":67,
        "false_negative_decided_by":67,
        "other_major_issues_decided_by":67,
        "difficulty_decided_by":"[12, 30]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":8,
        "solved_by":[
            "20241028_agentless-1.5_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.78,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0"
    }
]